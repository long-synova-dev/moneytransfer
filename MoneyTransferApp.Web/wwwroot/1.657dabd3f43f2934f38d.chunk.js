webpackJsonp([1],{"+/vl":function(e,t,n){"use strict";var r;Object.defineProperty(t,"__esModule",{value:!0});var a=function(){function e(){}return e.saveAndGet=function(e){return r||(r=e)},e}();t.DynamicTemplateModuleHolder=a},"/TFF":function(e,t){e.exports='<div class="persondata-bar">\r\n    <div class="panel">\r\n        <div class="panel-body">\r\n            <ul class="list list-unstyled list-inline">\r\n                <li>1. {{\'Persondata.ChooseProcess\' | translate}}</li>\r\n                <li *ngFor="let process of allProcesses" [ngClass]="{\'active\': process.value == selectedProcess.value}" (click)="_data.changeLoadStatus(true); selectProcess(process)">\r\n                    <span>{{process.label}}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="persondata-bar">\r\n    <div class="panel">\r\n        <div class="panel-body">\r\n            <ul class="list list-unstyled list-inline">\r\n                <li>2. {{\'Persondata.ChoosePersonCategory\' | translate}}</li>\r\n                <li  *ngFor="let personGroup of allPersonGroups" [ngClass]="{\'active\': personGroup.value == selectedPersonGroup.value}" (click)="_data.changeLoadStatus(true); selectPersonGroup(personGroup)">\r\n                    <span>{{personGroup.label}}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<h2 class="fs18" *ngIf="selectedProcess && selectedPersonGroup" [innerHtml]="\'Persondata.YourPurposes\'| translate:{process: selectedProcess.label, personGroup: selectedPersonGroup.label}"></h2>\r\n<mat-accordion class="main-accordion" *ngIf="allPurposes">\r\n    <mat-expansion-panel   *ngFor="let purpose of allPurposes" (opened)="selectPurpose(purpose)" [expanded]="selectedPurpose ? (purpose.purposeId == selectedPurpose.purposeId) : false" >\r\n        <mat-expansion-panel-header >\r\n            <mat-panel-title>\r\n                <h2 class="title-no-margin">{{purpose.purposeTagName}}</h2>\r\n            </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <div class="row">\r\n            <div class="col-xs-8">\r\n                <h3>{{\'Persondata.PurposeCategory\' | translate}}:</h3>\r\n                <ul class="purpose-category">\r\n                    <li *ngFor="let item of purpose.purposeCategory">{{item}}</li>\r\n                </ul>\r\n                <h3>{{\'Persondata.JustificationPurpose\' | translate}} <span class="help-group__icon"><i class="material-icons">help_outline</i><span class="help-group__help-text">{{\'Persondata.JustificationPurposeTooltip\' | translate}}</span></span></h3>\r\n                <div class="pl25">\r\n                    <div  *ngIf="purposeModel" class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': purposeModel.purposeJustification}">\r\n                        <label for="explanationPupose" class="control-label">\r\n                            {{\'Persondata.ExplanationPupose\' | translate}}\r\n                        </label>\r\n                        <textarea class="form-control" [(ngModel)]="purposeModel.purposeJustification"></textarea>\r\n                        <span class="pmd-textfield-focused"></span>\r\n                    </div>\r\n                </div>\r\n                <div class="mt30"></div>\r\n                <h3>{{\'Persondata.JustificationDeletionPeriod\' | translate}} <span class="help-group__icon"><i class="material-icons">help_outline</i><span class="help-group__help-text">{{\'Persondata.JustificationDeletionPeriodTooltip\' | translate}}</span></span></h3>\r\n                <div class="pl25">\r\n                    <mat-tab-group class="small-tab-group" *ngIf="purpose.dataTypes">\r\n                        <mat-tab *ngFor="let dataType of purpose.dataTypes; let i = index" label="{{dataType.dataTypeName}}">\r\n                            <span [innerHtml]="\'Persondata.DataTypeStorage\'| translate:{dataType: dataType.dataTypeName}"></span>: <strong>{{dataType.itSystemName}}</strong>\r\n                            <br>\r\n                            <span>{{\'Persondata.DeletionPeriod\' | translate}}</span> : <strong>{{dataType.deletionPeriod}}</strong>\r\n                            <div class="form-group pmd-textfield pmd-textfield-floating-label" *ngIf="purposeModel.deletionJustifications[i]" [ngClass]="{\'pmd-textfield-floating-label-completed\': purposeModel.deletionJustifications[i].justification}">\r\n                                <label for="lableDataType" class="control-label">\r\n                                    {{\'Persondata.LabelDataType\' | translate}}\r\n                                </label>\r\n                                <textarea class="form-control" [(ngModel)]="purposeModel.deletionJustifications[i].justification"></textarea>\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                        </mat-tab>\r\n                    </mat-tab-group>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="text-right">\r\n            <button class="btn btn-lg btn-default" (click)="selectPurpose(purpose)">{{\'Persondata.Cancel\' | translate}}</button>\r\n            <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary" (click)="savePurpose()">{{\'Persondata.Save\' | translate}}</button>\r\n        </div>\r\n    </mat-expansion-panel>\r\n   \r\n</mat-accordion>'},"/V0p":function(e,t,n){(function(r){var a;!function(){var s;function o(e){var t,n,r,a="",s=-1;if(e&&e.length)for(r=e.length;(s+=1)<r;)t=e.charCodeAt(s),n=s+1<r?e.charCodeAt(s+1):0,55296<=t&&t<=56319&&56320<=n&&n<=57343&&(t=65536+((1023&t)<<10)+(1023&n),s+=1),t<=127?a+=String.fromCharCode(t):t<=2047?a+=String.fromCharCode(192|t>>>6&31,128|63&t):t<=65535?a+=String.fromCharCode(224|t>>>12&15,128|t>>>6&63,128|63&t):t<=2097151&&(a+=String.fromCharCode(240|t>>>18&7,128|t>>>12&63,128|t>>>6&63,128|63&t));return a}function i(e,t){var n=(65535&e)+(65535&t);return(e>>16)+(t>>16)+(n>>16)<<16|65535&n}function l(e,t){return e<<t|e>>>32-t}function c(e,t){for(var n,r=t?"0123456789ABCDEF":"0123456789abcdef",a="",s=0,o=e.length;s<o;s+=1)n=e.charCodeAt(s),a+=r.charAt(n>>>4&15)+r.charAt(15&n);return a}function d(e){var t,n=32*e.length,r="";for(t=0;t<n;t+=8)r+=String.fromCharCode(e[t>>5]>>>24-t%32&255);return r}function p(e){var t,n=32*e.length,r="";for(t=0;t<n;t+=8)r+=String.fromCharCode(e[t>>5]>>>t%32&255);return r}function u(e){var t,n=8*e.length,r=Array(e.length>>2),a=r.length;for(t=0;t<a;t+=1)r[t]=0;for(t=0;t<n;t+=8)r[t>>5]|=(255&e.charCodeAt(t/8))<<t%32;return r}function m(e){var t,n=8*e.length,r=Array(e.length>>2),a=r.length;for(t=0;t<a;t+=1)r[t]=0;for(t=0;t<n;t+=8)r[t>>5]|=(255&e.charCodeAt(t/8))<<24-t%32;return r}function f(e,t){var n,r,a,s,o,i,l,c,d=t.length,p=Array();for(s=(i=Array(Math.ceil(e.length/2))).length,n=0;n<s;n+=1)i[n]=e.charCodeAt(2*n)<<8|e.charCodeAt(2*n+1);for(;i.length>0;){for(o=Array(),a=0,n=0;n<i.length;n+=1)a=(a<<16)+i[n],a-=(r=Math.floor(a/d))*d,(o.length>0||r>0)&&(o[o.length]=r);p[p.length]=a,i=o}for(l="",n=p.length-1;n>=0;n--)l+=t.charAt(p[n]);for(c=Math.ceil(8*e.length/(Math.log(t.length)/Math.log(2))),n=l.length;n<c;n+=1)l=t[0]+l;return l}function h(e,t){var n,r,a,s="",o=e.length;for(t=t||"=",n=0;n<o;n+=3)for(a=e.charCodeAt(n)<<16|(n+1<o?e.charCodeAt(n+1)<<8:0)|(n+2<o?e.charCodeAt(n+2):0),r=0;r<4;r+=1)8*n+6*r>8*e.length?s+=t:s+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/".charAt(a>>>6*(3-r)&63);return s}s={VERSION:"1.0.6",Base64:function(){var e="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",t="=",n=!0;this.encode=function(r){var a,s,i,l="",c=r.length;for(t=t||"=",r=n?o(r):r,a=0;a<c;a+=3)for(i=r.charCodeAt(a)<<16|(a+1<c?r.charCodeAt(a+1)<<8:0)|(a+2<c?r.charCodeAt(a+2):0),s=0;s<4;s+=1)l+=8*a+6*s>8*c?t:e.charAt(i>>>6*(3-s)&63);return l},this.decode=function(r){var a,s,o,i,l,c,d,p,u="",m=[];if(!r)return r;a=p=0,r=r.replace(new RegExp("\\"+t,"gi"),"");do{s=(d=e.indexOf(r.charAt(a+=1))<<18|e.indexOf(r.charAt(a+=1))<<12|(l=e.indexOf(r.charAt(a+=1)))<<6|(c=e.indexOf(r.charAt(a+=1))))>>16&255,o=d>>8&255,i=255&d,m[p+=1]=64===l?String.fromCharCode(s):64===c?String.fromCharCode(s,o):String.fromCharCode(s,o,i)}while(a<r.length);return u=m.join(""),u=n?function(e){var t,n,r,a,s,o,i=[];if(t=n=r=a=s=0,e&&e.length)for(o=e.length,e+="";t<o;)n+=1,(r=e.charCodeAt(t))<128?(i[n]=String.fromCharCode(r),t+=1):r>191&&r<224?(a=e.charCodeAt(t+1),i[n]=String.fromCharCode((31&r)<<6|63&a),t+=2):(a=e.charCodeAt(t+1),s=e.charCodeAt(t+2),i[n]=String.fromCharCode((15&r)<<12|(63&a)<<6|63&s),t+=3);return i.join("")}(u):u},this.setPad=function(e){return t=e||t,this},this.setTab=function(t){return e=t||e,this},this.setUTF8=function(e){return"boolean"==typeof e&&(n=e),this}},CRC32:function(e){var t,n,r,a=0,s=0;for(e=o(e),t=["00000000 77073096 EE0E612C 990951BA 076DC419 706AF48F E963A535 9E6495A3 0EDB8832 ","79DCB8A4 E0D5E91E 97D2D988 09B64C2B 7EB17CBD E7B82D07 90BF1D91 1DB71064 6AB020F2 F3B97148 ","84BE41DE 1ADAD47D 6DDDE4EB F4D4B551 83D385C7 136C9856 646BA8C0 FD62F97A 8A65C9EC 14015C4F ","63066CD9 FA0F3D63 8D080DF5 3B6E20C8 4C69105E D56041E4 A2677172 3C03E4D1 4B04D447 D20D85FD ","A50AB56B 35B5A8FA 42B2986C DBBBC9D6 ACBCF940 32D86CE3 45DF5C75 DCD60DCF ABD13D59 26D930AC ","51DE003A C8D75180 BFD06116 21B4F4B5 56B3C423 CFBA9599 B8BDA50F 2802B89E 5F058808 C60CD9B2 ","B10BE924 2F6F7C87 58684C11 C1611DAB B6662D3D 76DC4190 01DB7106 98D220BC EFD5102A 71B18589 ","06B6B51F 9FBFE4A5 E8B8D433 7807C9A2 0F00F934 9609A88E E10E9818 7F6A0DBB 086D3D2D 91646C97 ","E6635C01 6B6B51F4 1C6C6162 856530D8 F262004E 6C0695ED 1B01A57B 8208F4C1 F50FC457 65B0D9C6 ","12B7E950 8BBEB8EA FCB9887C 62DD1DDF 15DA2D49 8CD37CF3 FBD44C65 4DB26158 3AB551CE A3BC0074 ","D4BB30E2 4ADFA541 3DD895D7 A4D1C46D D3D6F4FB 4369E96A 346ED9FC AD678846 DA60B8D0 44042D73 ","33031DE5 AA0A4C5F DD0D7CC9 5005713C 270241AA BE0B1010 C90C2086 5768B525 206F85B3 B966D409 ","CE61E49F 5EDEF90E 29D9C998 B0D09822 C7D7A8B4 59B33D17 2EB40D81 B7BD5C3B C0BA6CAD EDB88320 ","9ABFB3B6 03B6E20C 74B1D29A EAD54739 9DD277AF 04DB2615 73DC1683 E3630B12 94643B84 0D6D6A3E ","7A6A5AA8 E40ECF0B 9309FF9D 0A00AE27 7D079EB1 F00F9344 8708A3D2 1E01F268 6906C2FE F762575D ","806567CB 196C3671 6E6B06E7 FED41B76 89D32BE0 10DA7A5A 67DD4ACC F9B9DF6F 8EBEEFF9 17B7BE43 ","60B08ED5 D6D6A3E8 A1D1937E 38D8C2C4 4FDFF252 D1BB67F1 A6BC5767 3FB506DD 48B2364B D80D2BDA ","AF0A1B4C 36034AF6 41047A60 DF60EFC3 A867DF55 316E8EEF 4669BE79 CB61B38C BC66831A 256FD2A0 ","5268E236 CC0C7795 BB0B4703 220216B9 5505262F C5BA3BBE B2BD0B28 2BB45A92 5CB36A04 C2D7FFA7 ","B5D0CF31 2CD99E8B 5BDEAE1D 9B64C2B0 EC63F226 756AA39C 026D930A 9C0906A9 EB0E363F 72076785 ","05005713 95BF4A82 E2B87A14 7BB12BAE 0CB61B38 92D28E9B E5D5BE0D 7CDCEFB7 0BDBDF21 86D3D2D4 ","F1D4E242 68DDB3F8 1FDA836E 81BE16CD F6B9265B 6FB077E1 18B74777 88085AE6 FF0F6A70 66063BCA ","11010B5C 8F659EFF F862AE69 616BFFD3 166CCF45 A00AE278 D70DD2EE 4E048354 3903B3C2 A7672661 ","D06016F7 4969474D 3E6E77DB AED16A4A D9D65ADC 40DF0B66 37D83BF0 A9BCAE53 DEBB9EC5 47B2CF7F ","30B5FFE9 BDBDF21C CABAC28A 53B39330 24B4A3A6 BAD03605 CDD70693 54DE5729 23D967BF B3667A2E ","C4614AB8 5D681B02 2A6F2B94 B40BBE37 C30C8EA1 5A05DF1B 2D02EF8D"].join(""),a^=-1,n=0,r=e.length;n<r;n+=1)s=255&(a^e.charCodeAt(n)),a=a>>>8^"0x"+t.substr(9*s,8);return(-1^a)>>>0},MD5:function(e){var t=!(!e||"boolean"!=typeof e.uppercase)&&e.uppercase,n=e&&"string"==typeof e.pad?e.pad:"=",r=!e||"boolean"!=typeof e.utf8||e.utf8;function a(e){return p(d(u(e=r?o(e):e),8*e.length))}function s(e,t){var n,a,s,i,l;for(e=r?o(e):e,t=r?o(t):t,(n=u(e)).length>16&&(n=d(n,8*e.length)),a=Array(16),s=Array(16),l=0;l<16;l+=1)a[l]=909522486^n[l],s[l]=1549556828^n[l];return i=d(a.concat(u(t)),512+8*t.length),p(d(s.concat(i),640))}function d(e,t){var n,r,a,s,o,l=1732584193,c=-271733879,d=-1732584194,p=271733878;for(e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t,n=0;n<e.length;n+=16)r=l,a=c,s=d,o=p,c=y(c=y(c=y(c=y(c=b(c=b(c=b(c=b(c=g(c=g(c=g(c=g(c=v(c=v(c=v(c=v(c,d=v(d,p=v(p,l=v(l,c,d,p,e[n+0],7,-680876936),c,d,e[n+1],12,-389564586),l,c,e[n+2],17,606105819),p,l,e[n+3],22,-1044525330),d=v(d,p=v(p,l=v(l,c,d,p,e[n+4],7,-176418897),c,d,e[n+5],12,1200080426),l,c,e[n+6],17,-1473231341),p,l,e[n+7],22,-45705983),d=v(d,p=v(p,l=v(l,c,d,p,e[n+8],7,1770035416),c,d,e[n+9],12,-1958414417),l,c,e[n+10],17,-42063),p,l,e[n+11],22,-1990404162),d=v(d,p=v(p,l=v(l,c,d,p,e[n+12],7,1804603682),c,d,e[n+13],12,-40341101),l,c,e[n+14],17,-1502002290),p,l,e[n+15],22,1236535329),d=g(d,p=g(p,l=g(l,c,d,p,e[n+1],5,-165796510),c,d,e[n+6],9,-1069501632),l,c,e[n+11],14,643717713),p,l,e[n+0],20,-373897302),d=g(d,p=g(p,l=g(l,c,d,p,e[n+5],5,-701558691),c,d,e[n+10],9,38016083),l,c,e[n+15],14,-660478335),p,l,e[n+4],20,-405537848),d=g(d,p=g(p,l=g(l,c,d,p,e[n+9],5,568446438),c,d,e[n+14],9,-1019803690),l,c,e[n+3],14,-187363961),p,l,e[n+8],20,1163531501),d=g(d,p=g(p,l=g(l,c,d,p,e[n+13],5,-1444681467),c,d,e[n+2],9,-51403784),l,c,e[n+7],14,1735328473),p,l,e[n+12],20,-1926607734),d=b(d,p=b(p,l=b(l,c,d,p,e[n+5],4,-378558),c,d,e[n+8],11,-2022574463),l,c,e[n+11],16,1839030562),p,l,e[n+14],23,-35309556),d=b(d,p=b(p,l=b(l,c,d,p,e[n+1],4,-1530992060),c,d,e[n+4],11,1272893353),l,c,e[n+7],16,-155497632),p,l,e[n+10],23,-1094730640),d=b(d,p=b(p,l=b(l,c,d,p,e[n+13],4,681279174),c,d,e[n+0],11,-358537222),l,c,e[n+3],16,-722521979),p,l,e[n+6],23,76029189),d=b(d,p=b(p,l=b(l,c,d,p,e[n+9],4,-640364487),c,d,e[n+12],11,-421815835),l,c,e[n+15],16,530742520),p,l,e[n+2],23,-995338651),d=y(d,p=y(p,l=y(l,c,d,p,e[n+0],6,-198630844),c,d,e[n+7],10,1126891415),l,c,e[n+14],15,-1416354905),p,l,e[n+5],21,-57434055),d=y(d,p=y(p,l=y(l,c,d,p,e[n+12],6,1700485571),c,d,e[n+3],10,-1894986606),l,c,e[n+10],15,-1051523),p,l,e[n+1],21,-2054922799),d=y(d,p=y(p,l=y(l,c,d,p,e[n+8],6,1873313359),c,d,e[n+15],10,-30611744),l,c,e[n+6],15,-1560198380),p,l,e[n+13],21,1309151649),d=y(d,p=y(p,l=y(l,c,d,p,e[n+4],6,-145523070),c,d,e[n+11],10,-1120210379),l,c,e[n+2],15,718787259),p,l,e[n+9],21,-343485551),l=i(l,r),c=i(c,a),d=i(d,s),p=i(p,o);return Array(l,c,d,p)}function m(e,t,n,r,a,s){return i(l(i(i(t,e),i(r,s)),a),n)}function v(e,t,n,r,a,s,o){return m(t&n|~t&r,e,t,a,s,o)}function g(e,t,n,r,a,s,o){return m(t&r|n&~r,e,t,a,s,o)}function b(e,t,n,r,a,s,o){return m(t^n^r,e,t,a,s,o)}function y(e,t,n,r,a,s,o){return m(n^(t|~r),e,t,a,s,o)}this.hex=function(e){return c(a(e),t)},this.b64=function(e){return h(a(e),n)},this.any=function(e,t){return f(a(e),t)},this.raw=function(e){return a(e)},this.hex_hmac=function(e,n){return c(s(e,n),t)},this.b64_hmac=function(e,t){return h(s(e,t),n)},this.any_hmac=function(e,t,n){return f(s(e,t),n)},this.vm_test=function(){return"900150983cd24fb0d6963f7d28e17f72"===hex("abc").toLowerCase()},this.setUpperCase=function(e){return"boolean"==typeof e&&(t=e),this},this.setPad=function(e){return n=e||n,this},this.setUTF8=function(e){return"boolean"==typeof e&&(r=e),this}},SHA1:function(e){var t=!(!e||"boolean"!=typeof e.uppercase)&&e.uppercase,n=e&&"string"==typeof e.pad?e.pad:"=",r=!e||"boolean"!=typeof e.utf8||e.utf8;function a(e){return d(p(m(e=r?o(e):e),8*e.length))}function s(e,t){var n,a,s,i,l;for(e=r?o(e):e,t=r?o(t):t,(n=m(e)).length>16&&(n=p(n,8*e.length)),a=Array(16),s=Array(16),i=0;i<16;i+=1)a[i]=909522486^n[i],s[i]=1549556828^n[i];return l=p(a.concat(m(t)),512+8*t.length),d(p(s.concat(l),672))}function p(e,t){var n,r,a,s,o,c,d,p,m=Array(80),f=1732584193,h=-271733879,g=-1732584194,b=271733878,y=-1009589776;for(e[t>>5]|=128<<24-t%32,e[15+(t+64>>9<<4)]=t,n=0;n<e.length;n+=16){for(s=f,o=h,c=g,d=b,p=y,r=0;r<80;r+=1)m[r]=r<16?e[n+r]:l(m[r-3]^m[r-8]^m[r-14]^m[r-16],1),a=i(i(l(f,5),u(r,h,g,b)),i(i(y,m[r]),v(r))),y=b,b=g,g=l(h,30),h=f,f=a;f=i(f,s),h=i(h,o),g=i(g,c),b=i(b,d),y=i(y,p)}return Array(f,h,g,b,y)}function u(e,t,n,r){return e<20?t&n|~t&r:e<40?t^n^r:e<60?t&n|t&r|n&r:t^n^r}function v(e){return e<20?1518500249:e<40?1859775393:e<60?-1894007588:-899497514}this.hex=function(e){return c(a(e),t)},this.b64=function(e){return h(a(e),n)},this.any=function(e,t){return f(a(e),t)},this.raw=function(e){return a(e)},this.hex_hmac=function(e,t){return c(s(e,t))},this.b64_hmac=function(e,t){return h(s(e,t),n)},this.any_hmac=function(e,t,n){return f(s(e,t),n)},this.vm_test=function(){return"900150983cd24fb0d6963f7d28e17f72"===hex("abc").toLowerCase()},this.setUpperCase=function(e){return"boolean"==typeof e&&(t=e),this},this.setPad=function(e){return n=e||n,this},this.setUTF8=function(e){return"boolean"==typeof e&&(r=e),this}},SHA256:function(e){!(!e||"boolean"!=typeof e.uppercase)&&e.uppercase;var t,n=e&&"string"==typeof e.pad?e.pad:"=",r=!e||"boolean"!=typeof e.utf8||e.utf8;function a(e,t){return d(_(m(e=t?o(e):e),8*e.length))}function s(e,t){e=r?o(e):e,t=r?o(t):t;var n,a=0,s=m(e),i=Array(16),l=Array(16);for(s.length>16&&(s=_(s,8*e.length));a<16;a+=1)i[a]=909522486^s[a],l[a]=1549556828^s[a];return n=_(i.concat(m(t)),512+8*t.length),d(_(l.concat(n),768))}function l(e,t){return e>>>t|e<<32-t}function p(e,t){return e>>>t}function u(e,t,n){return e&t^~e&n}function v(e,t,n){return e&t^e&n^t&n}function g(e){return l(e,2)^l(e,13)^l(e,22)}function b(e){return l(e,6)^l(e,11)^l(e,25)}function y(e){return l(e,7)^l(e,18)^p(e,3)}function _(e,n){var r,a,s,o,c,d,m,f,h,_,k,C,D,x=[1779033703,-1150833019,1013904242,-1521486534,1359893119,-1694144372,528734635,1541459225],P=new Array(64);for(e[n>>5]|=128<<24-n%32,e[15+(n+64>>9<<4)]=n,h=0;h<e.length;h+=16){for(r=x[0],a=x[1],s=x[2],o=x[3],c=x[4],d=x[5],m=x[6],f=x[7],_=0;_<64;_+=1)P[_]=_<16?e[_+h]:i(i(i(l(D=P[_-2],17)^l(D,19)^p(D,10),P[_-7]),y(P[_-15])),P[_-16]),k=i(i(i(i(f,b(c)),u(c,d,m)),t[_]),P[_]),C=i(g(r),v(r,a,s)),f=m,m=d,d=c,c=i(o,k),o=s,s=a,a=r,r=i(k,C);x[0]=i(r,x[0]),x[1]=i(a,x[1]),x[2]=i(s,x[2]),x[3]=i(o,x[3]),x[4]=i(c,x[4]),x[5]=i(d,x[5]),x[6]=i(m,x[6]),x[7]=i(f,x[7])}return x}this.hex=function(e){return c(a(e,r))},this.b64=function(e){return h(a(e,r),n)},this.any=function(e,t){return f(a(e,r),t)},this.raw=function(e){return a(e,r)},this.hex_hmac=function(e,t){return c(s(e,t))},this.b64_hmac=function(e,t){return h(s(e,t),n)},this.any_hmac=function(e,t,n){return f(s(e,t),n)},this.vm_test=function(){return"900150983cd24fb0d6963f7d28e17f72"===hex("abc").toLowerCase()},this.setUpperCase=function(e){return"boolean"==typeof e&&e,this},this.setPad=function(e){return n=e||n,this},this.setUTF8=function(e){return"boolean"==typeof e&&(r=e),this},t=[1116352408,1899447441,-1245643825,-373957723,961987163,1508970993,-1841331548,-1424204075,-670586216,310598401,607225278,1426881987,1925078388,-2132889090,-1680079193,-1046744716,-459576895,-272742522,264347078,604807628,770255983,1249150122,1555081692,1996064986,-1740746414,-1473132947,-1341970488,-1084653625,-958395405,-710438585,113926993,338241895,666307205,773529912,1294757372,1396182291,1695183700,1986661051,-2117940946,-1838011259,-1564481375,-1474664885,-1035236496,-949202525,-778901479,-694614492,-200395387,275423344,430227734,506948616,659060556,883997877,958139571,1322822218,1537002063,1747873779,1955562222,2024104815,-2067236844,-1933114872,-1866530822,-1538233109,-1090935817,-965641998]},SHA512:function(e){!(!e||"boolean"!=typeof e.uppercase)&&e.uppercase;var t,n=e&&"string"==typeof e.pad?e.pad:"=",r=!e||"boolean"!=typeof e.utf8||e.utf8;function a(e){return d(i(m(e=r?o(e):e),8*e.length))}function s(e,t){e=r?o(e):e,t=r?o(t):t;var n,a=0,s=m(e),l=Array(32),c=Array(32);for(s.length>32&&(s=i(s,8*e.length));a<32;a+=1)l[a]=909522486^s[a],c[a]=1549556828^s[a];return n=i(l.concat(m(t)),1024+8*t.length),d(i(c.concat(n),1536))}function i(e,n){var r,a,s,o=new Array(80),i=new Array(16),c=[new l(1779033703,-205731576),new l(-1150833019,-2067093701),new l(1013904242,-23791573),new l(-1521486534,1595750129),new l(1359893119,-1377402159),new l(-1694144372,725511199),new l(528734635,-79577749),new l(1541459225,327033209)],d=new l(0,0),m=new l(0,0),f=new l(0,0),h=new l(0,0),k=new l(0,0),C=new l(0,0),D=new l(0,0),x=new l(0,0),P=new l(0,0),w=new l(0,0),S=new l(0,0),I=new l(0,0),R=new l(0,0),F=new l(0,0),T=new l(0,0),A=new l(0,0),E=new l(0,0);for(void 0===t&&(t=[new l(1116352408,-685199838),new l(1899447441,602891725),new l(-1245643825,-330482897),new l(-373957723,-2121671748),new l(961987163,-213338824),new l(1508970993,-1241133031),new l(-1841331548,-1357295717),new l(-1424204075,-630357736),new l(-670586216,-1560083902),new l(310598401,1164996542),new l(607225278,1323610764),new l(1426881987,-704662302),new l(1925078388,-226784913),new l(-2132889090,991336113),new l(-1680079193,633803317),new l(-1046744716,-815192428),new l(-459576895,-1628353838),new l(-272742522,944711139),new l(264347078,-1953704523),new l(604807628,2007800933),new l(770255983,1495990901),new l(1249150122,1856431235),new l(1555081692,-1119749164),new l(1996064986,-2096016459),new l(-1740746414,-295247957),new l(-1473132947,766784016),new l(-1341970488,-1728372417),new l(-1084653625,-1091629340),new l(-958395405,1034457026),new l(-710438585,-1828018395),new l(113926993,-536640913),new l(338241895,168717936),new l(666307205,1188179964),new l(773529912,1546045734),new l(1294757372,1522805485),new l(1396182291,-1651133473),new l(1695183700,-1951439906),new l(1986661051,1014477480),new l(-2117940946,1206759142),new l(-1838011259,344077627),new l(-1564481375,1290863460),new l(-1474664885,-1136513023),new l(-1035236496,-789014639),new l(-949202525,106217008),new l(-778901479,-688958952),new l(-694614492,1432725776),new l(-200395387,1467031594),new l(275423344,851169720),new l(430227734,-1194143544),new l(506948616,1363258195),new l(659060556,-544281703),new l(883997877,-509917016),new l(958139571,-976659869),new l(1322822218,-482243893),new l(1537002063,2003034995),new l(1747873779,-692930397),new l(1955562222,1575990012),new l(2024104815,1125592928),new l(-2067236844,-1578062990),new l(-1933114872,442776044),new l(-1866530822,593698344),new l(-1538233109,-561857047),new l(-1090935817,-1295615723),new l(-965641998,-479046869),new l(-903397682,-366583396),new l(-779700025,566280711),new l(-354779690,-840897762),new l(-176337025,-294727304),new l(116418474,1914138554),new l(174292421,-1563912026),new l(289380356,-1090974290),new l(460393269,320620315),new l(685471733,587496836),new l(852142971,1086792851),new l(1017036298,365543100),new l(1126000580,-1676669620),new l(1288033470,-885112138),new l(1501505948,-60457430),new l(1607167915,987167468),new l(1816402316,1246189591)]),a=0;a<80;a+=1)o[a]=new l(0,0);for(e[n>>5]|=128<<24-(31&n),e[31+(n+128>>10<<5)]=n,s=e.length,a=0;a<s;a+=32){for(p(f,c[0]),p(h,c[1]),p(k,c[2]),p(C,c[3]),p(D,c[4]),p(x,c[5]),p(P,c[6]),p(w,c[7]),r=0;r<16;r+=1)o[r].h=e[a+2*r],o[r].l=e[a+2*r+1];for(r=16;r<80;r+=1)u(T,o[r-2],19),v(A,o[r-2],29),g(E,o[r-2],6),I.l=T.l^A.l^E.l,I.h=T.h^A.h^E.h,u(T,o[r-15],1),u(A,o[r-15],8),g(E,o[r-15],7),S.l=T.l^A.l^E.l,S.h=T.h^A.h^E.h,y(o[r],I,o[r-7],S,o[r-16]);for(r=0;r<80;r+=1)R.l=D.l&x.l^~D.l&P.l,R.h=D.h&x.h^~D.h&P.h,u(T,D,14),u(A,D,18),v(E,D,9),I.l=T.l^A.l^E.l,I.h=T.h^A.h^E.h,u(T,f,28),v(A,f,2),v(E,f,7),S.l=T.l^A.l^E.l,S.h=T.h^A.h^E.h,F.l=f.l&h.l^f.l&k.l^h.l&k.l,F.h=f.h&h.h^f.h&k.h^h.h&k.h,_(d,w,I,R,t[r],o[r]),b(m,S,F),p(w,P),p(P,x),p(x,D),b(D,C,d),p(C,k),p(k,h),p(h,f),b(f,d,m);b(c[0],c[0],f),b(c[1],c[1],h),b(c[2],c[2],k),b(c[3],c[3],C),b(c[4],c[4],D),b(c[5],c[5],x),b(c[6],c[6],P),b(c[7],c[7],w)}for(a=0;a<8;a+=1)i[2*a]=c[a].h,i[2*a+1]=c[a].l;return i}function l(e,t){this.h=e,this.l=t}function p(e,t){e.h=t.h,e.l=t.l}function u(e,t,n){e.l=t.l>>>n|t.h<<32-n,e.h=t.h>>>n|t.l<<32-n}function v(e,t,n){e.l=t.h>>>n|t.l<<32-n,e.h=t.l>>>n|t.h<<32-n}function g(e,t,n){e.l=t.l>>>n|t.h<<32-n,e.h=t.h>>>n}function b(e,t,n){var r=(65535&t.l)+(65535&n.l),a=(t.l>>>16)+(n.l>>>16)+(r>>>16),s=(65535&t.h)+(65535&n.h)+(a>>>16),o=(t.h>>>16)+(n.h>>>16)+(s>>>16);e.l=65535&r|a<<16,e.h=65535&s|o<<16}function y(e,t,n,r,a){var s=(65535&t.l)+(65535&n.l)+(65535&r.l)+(65535&a.l),o=(t.l>>>16)+(n.l>>>16)+(r.l>>>16)+(a.l>>>16)+(s>>>16),i=(65535&t.h)+(65535&n.h)+(65535&r.h)+(65535&a.h)+(o>>>16),l=(t.h>>>16)+(n.h>>>16)+(r.h>>>16)+(a.h>>>16)+(i>>>16);e.l=65535&s|o<<16,e.h=65535&i|l<<16}function _(e,t,n,r,a,s){var o=(65535&t.l)+(65535&n.l)+(65535&r.l)+(65535&a.l)+(65535&s.l),i=(t.l>>>16)+(n.l>>>16)+(r.l>>>16)+(a.l>>>16)+(s.l>>>16)+(o>>>16),l=(65535&t.h)+(65535&n.h)+(65535&r.h)+(65535&a.h)+(65535&s.h)+(i>>>16),c=(t.h>>>16)+(n.h>>>16)+(r.h>>>16)+(a.h>>>16)+(s.h>>>16)+(l>>>16);e.l=65535&o|i<<16,e.h=65535&l|c<<16}this.hex=function(e){return c(a(e))},this.b64=function(e){return h(a(e),n)},this.any=function(e,t){return f(a(e),t)},this.raw=function(e){return a(e)},this.hex_hmac=function(e,t){return c(s(e,t))},this.b64_hmac=function(e,t){return h(s(e,t),n)},this.any_hmac=function(e,t,n){return f(s(e,t),n)},this.vm_test=function(){return"900150983cd24fb0d6963f7d28e17f72"===hex("abc").toLowerCase()},this.setUpperCase=function(e){return"boolean"==typeof e&&e,this},this.setPad=function(e){return n=e||n,this},this.setUTF8=function(e){return"boolean"==typeof e&&(r=e),this}},RMD160:function(e){!(!e||"boolean"!=typeof e.uppercase)&&e.uppercase;var t=e&&"string"==typeof e.pad?e.pa:"=",n=!e||"boolean"!=typeof e.utf8||e.utf8,r=[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,7,4,13,1,10,6,15,3,12,0,9,5,2,14,11,8,3,10,14,4,9,15,8,1,2,7,0,6,13,11,5,12,1,9,11,10,0,8,12,4,13,3,7,15,14,5,6,2,4,0,5,9,7,12,2,10,14,1,3,8,11,6,15,13],a=[5,14,7,0,9,2,11,4,13,6,15,8,1,10,3,12,6,11,3,7,0,13,5,10,14,15,8,12,4,9,1,2,15,5,1,3,7,14,6,9,11,8,12,2,10,0,4,13,8,6,4,1,3,11,15,0,5,12,2,13,9,7,10,14,12,15,10,4,1,5,8,7,6,2,13,14,0,3,9,11],s=[11,14,15,12,5,8,7,9,11,13,14,15,6,7,9,8,7,6,8,13,11,9,7,15,7,12,15,9,11,7,13,12,11,13,6,7,14,9,13,15,14,8,13,6,5,12,7,5,11,12,14,15,14,15,9,8,9,14,5,6,8,6,5,12,9,15,5,11,6,8,13,12,5,12,13,14,11,8,5,6],d=[8,9,9,11,13,15,15,5,7,7,8,11,14,14,12,6,9,13,15,7,12,8,9,11,7,7,12,7,6,15,13,11,9,7,15,11,8,6,6,14,12,13,5,14,13,13,7,5,15,5,8,11,14,14,6,14,6,9,12,9,12,5,15,8,8,5,12,9,12,5,14,6,8,13,6,5,15,13,11,11];function p(e){return v(g(u(e=n?o(e):e),8*e.length))}function m(e,t){e=n?o(e):e,t=n?o(t):t;var r,a,s=u(e),i=Array(16),l=Array(16);for(s.length>16&&(s=g(s,8*e.length)),r=0;r<16;r+=1)i[r]=909522486^s[r],l[r]=1549556828^s[r];return a=g(i.concat(u(t)),512+8*t.length),v(g(l.concat(a),672))}function v(e){var t,n="",r=32*e.length;for(t=0;t<r;t+=8)n+=String.fromCharCode(e[t>>5]>>>t%32&255);return n}function g(e,t){var n,o,c,p,u,m,f,h,v,g,k,C,D,x,P=1732584193,w=4023233417,S=2562383102,I=271733878,R=3285377520;for(e[t>>5]|=128<<t%32,e[14+(t+64>>>9<<4)]=t,p=e.length,c=0;c<p;c+=16){for(u=g=P,m=k=w,f=C=S,h=D=I,v=x=R,o=0;o<=79;o+=1)n=i(l(n=i(n=i(n=i(u,b(o,m,f,h)),e[c+r[o]]),y(o)),s[o]),v),u=v,v=h,h=l(f,10),f=m,m=n,n=i(l(n=i(n=i(n=i(g,b(79-o,k,C,D)),e[c+a[o]]),_(o)),d[o]),x),g=x,x=D,D=l(C,10),C=k,k=n;n=i(w,i(f,D)),w=i(S,i(h,x)),S=i(I,i(v,g)),I=i(R,i(u,k)),R=i(P,i(m,C)),P=n}return[P,w,S,I,R]}function b(e,t,n,r){return 0<=e&&e<=15?t^n^r:16<=e&&e<=31?t&n|~t&r:32<=e&&e<=47?(t|~n)^r:48<=e&&e<=63?t&r|n&~r:64<=e&&e<=79?t^(n|~r):"rmd160_f: j out of range"}function y(e){return 0<=e&&e<=15?0:16<=e&&e<=31?1518500249:32<=e&&e<=47?1859775393:48<=e&&e<=63?2400959708:64<=e&&e<=79?2840853838:"rmd160_K1: j out of range"}function _(e){return 0<=e&&e<=15?1352829926:16<=e&&e<=31?1548603684:32<=e&&e<=47?1836072691:48<=e&&e<=63?2053994217:64<=e&&e<=79?0:"rmd160_K2: j out of range"}this.hex=function(e){return c(p(e))},this.b64=function(e){return h(p(e),t)},this.any=function(e,t){return f(p(e),t)},this.raw=function(e){return p(e)},this.hex_hmac=function(e,t){return c(m(e,t))},this.b64_hmac=function(e,n){return h(m(e,n),t)},this.any_hmac=function(e,t,n){return f(m(e,t),n)},this.vm_test=function(){return"900150983cd24fb0d6963f7d28e17f72"===hex("abc").toLowerCase()},this.setUpperCase=function(e){return"boolean"==typeof e&&e,this},this.setPad=function(e){return"undefined"!=typeof e&&(t=e),this},this.setUTF8=function(e){return"boolean"==typeof e&&(n=e),this}}},t&&"object"==typeof r&&r&&r.global,void 0===(a=(function(){return s}).call(t,n,t,e))||(e.exports=a)}()}).call(t,n("DuR2"))},"1BCF":function(e,t){e.exports='<div class="task-detail-backdrop">\r\n    <div class="container" *ngIf="readyToLoad">\r\n        <div class="task-detail pmd-z-depth-1" [ngClass]="{\'task-detail--info\': taskDetail.isControl}">\r\n            <div class="task-detail__inner">\r\n                <div class="task-detail__name">\r\n                    <div class="col-md-6">\r\n                        {{\'Task.TaskDetailName\' | translate}}:\r\n                        <strong>{{taskDetail.taskTitle}}</strong>\r\n                    </div>\r\n                    <div class="col-md-6">\r\n                        {{\'Task.ProcessName\' | translate}}:\r\n                        <strong>{{taskDetail.processName}}</strong>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col-xs-6">\r\n                        <div class="task-detail__panel">\r\n                            <div class="task-detail__todo-block" style="max-height: 180px; overflow-y: auto;">\r\n                                <table class="info-table">\r\n                                    <tr>\r\n                                        <td>{{\'Task.PerformerDeadline\' | translate}}: </td>\r\n                                        <td><strong *ngIf="taskDetail.performerDeadline">{{taskDetail.performerDeadline | dateformatpipe}}</strong></td>\r\n                                    </tr>\r\n                                    <tr *ngIf="taskDetail.reviewerDeadline">\r\n                                        <td>{{\'Task.ReviewerDeadline\' | translate}}: </td>\r\n                                        <td><strong *ngIf="taskDetail.reviewerDeadline">{{taskDetail.reviewerDeadline | dateformatpipe}}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{{\'Task.TaskPeriod\' | translate}}: </td>\r\n                                        <td><strong *ngIf="taskDetail.endDate ">{{taskDetail.startDate | dateformatpipe}} - {{taskDetail.endDate | dateformatpipe}}</strong><strong *ngIf="!taskDetail.endDate ">{{\'Task.TaskDetailNeverEnd\' | translate}}</strong></td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>{{\'Task.TaskStatus\' | translate}}</td>\r\n                                        <td>\r\n                                            <ng-select disabled="true"\r\n                                                [options]="defineTaskStatus"\r\n                                                [(ngModel)]="taskDetail.taskStatus"\r\n                                                noFilter="10">\r\n                                            </ng-select>\r\n                                        </td>\r\n                                    </tr>\r\n                                </table>\r\n                            </div>\r\n                        </div>\r\n                        <div class="task-detail__panel">\r\n                            <h3>{{\'Task.TaskDetailDescription\' | translate}}</h3>\r\n                            <p>{{taskDetail.taskDesc}}</p>\r\n                        </div>\r\n                        <div class="task-detail__panel">\r\n                            <table  class="info-table">\r\n                                <tr>\r\n                                    <td>{{\'Task.TaskDetailResponsible\' | translate}}: </td>\r\n                                    <td>\r\n                                        <ng-select disabled="true"\r\n                                            class="users-select"\r\n                                            placeholder="Select a person"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="taskDetail.responsibleId"\r\n                                            >\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr *ngIf="taskDetail.reviewerDeadline">\r\n                                    <td>{{\'Task.TaskDetailReviewer\' | translate}}: </td>\r\n                                    <td>\r\n                                        <ng-select disabled="true"\r\n                                            class="users-select"\r\n                                            placeholder="Select a person"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="taskDetail.reviewerId"\r\n                                            >\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>{{\'Task.TaskDetailPerformer\' | translate}}: </td>\r\n                                    <td>\r\n                                        <ng-select disabled="true"\r\n                                            class="users-select"\r\n                                            placeholder="Select a person"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="taskDetail.performerId"\r\n                                            >\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </div>\r\n                        <div class="task-detail__panel">\r\n                            <h3>{{\'Task.TaskDetailHistory\' | translate}}</h3>\r\n                            <div *ngIf="listHistory.length == 0">{{\'Task.HistoryNotFound\' | translate}}</div>\r\n                            <div style="max-height: 150px; overflow-y: auto;" *ngIf="listHistory.length > 0">\r\n                                <div class="history-item mb10" *ngFor="let item of listHistory">\r\n                                    <div class="media-body media-middle">\r\n                                        <h3 class="pmd-card-title-text">{{item.date | dateformatpipe: true}}</h3>\r\n                                        <span class="pmd-card-subtitle-text">\r\n                                            <p *ngIf="item.fieldName == \'Management.ControlAssercertions\'"><strong>{{item.owner}}</strong> changed <strong>{{item.fieldName | translate}}</strong></p>\r\n                                            <p *ngIf="item.fieldName == \'Todo\'"><strong>{{item.owner}}</strong> updated <strong>{{item.fieldName | translate}}</strong></p>\r\n                                            <p *ngIf="item.fieldName == \'Task\'"><strong>{{item.owner}}</strong> added new task: <strong>{{item.newValue}}</strong></p>\r\n                                            <p *ngIf="item.fieldName && item.newValue">\r\n                                                <strong>{{item.owner}}</strong> updated the <strong>{{item.fieldName | translate}}</strong> from <strong>{{item.oldValue | translate}}</strong> to <strong>{{item.newValue | translate}}</strong>\r\n                                            </p>\r\n                                        </span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-6">\r\n                        <div class="task-detail__panel">\r\n                            <h3>{{\'Task.TaskDetailPerformerTask\' | translate}}</h3>\r\n                            <table class="table pmd-table list-todos-table">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th colspan="2">{{\'Task.TaskDetailYourTodo\' | translate}}</th>\r\n                                        \x3c!-- <th>{{\'Task.TaskDetailDocumentRequired\' | translate}}</th> --\x3e\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    <tr *ngFor="let todo of taskDetail.todos">\r\n                                        <td>\r\n                                            <label class="checkbox-inline pmd-checkbox pmd-checkbox-ripple-effect">\r\n                                                <input type="checkbox" name="" [checked]="todo.isPerformed" disabled><span class="pmd-checkbox-label">&nbsp;</span>\r\n                                            </label>\r\n                                        </td>\r\n                                        <td>{{todo.title}}</td>\r\n                                        \x3c!-- <td><i class="material-icons">attach_file</i> {{\'Task.TaskDetailDownloadFile\' | translate}}</td> --\x3e\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                \'pmd-textfield-floating-label-completed\': taskDetail.taskResultComment\r\n                            }">\r\n                                <label for="taskName" class="control-label">\r\n                                    {{ \'Task.TaskDetailTaskResult\' | translate }}\r\n                                </label>\r\n                                <textarea class="form-control" [(ngModel)]="taskDetail.taskResultComment" disabled></textarea>\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                \'pmd-textfield-floating-label-completed\': taskDetail.feedbackToAdmin\r\n                            }">\r\n                                <label for="taskName" class="control-label">\r\n                                    {{ \'Task.TaskDetailFeedback\' | translate }}\r\n                                </label>\r\n                                <textarea class="form-control" [(ngModel)]="taskDetail.feedbackToAdmin" disabled></textarea>\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                        </div>\r\n                        <div class="mt20 text-right">\r\n                            <button class="btn btn-default active" (click)="clickCancel()" disabled>{{ \'Task.Cancel\' | translate }}</button>\r\n                            <button class="btn btn-primary" (click)="clickSave()" disabled>{{ \'Task.Save\' | translate }}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="task-detail__status"></div>\r\n        </div>\r\n    </div>\r\n</div>'},"2zCX":function(e,t){e.exports='<modal-dialog [(modalDialog)]="warningDialog">\r\n    <p *ngIf="isOpenMaxStorageQuotaWarning">{{\'General.MaxStorageQuotaReached\' | translate}}</p>\r\n    <p *ngIf="!isOpenMaxStorageQuotaWarning">{{\'General.CantDownloadPDFWarning\' | translate}}</p>\r\n    <div class="pmd-modal-bordered text-right">\r\n        <button class="btn pmd-ripple-effect btn-primary" type="button" (click)="goToSubscription()">{{\'General.OK\' | translate}}</button>\r\n    </div>\r\n</modal-dialog>\r\n<div class="container" *ngIf="readyToLoad">\r\n    <button class="btn-link no-padding" routerLink="/gdpr/management/dataprocessor">\r\n        <i class="material-icons">arrow_back</i>\r\n    </button>\r\n    <modal-dialog [(modalDialog)]="deleteConfirm">\r\n        <div class="form-group">\r\n            {{ \'Dataprocess.ConfirmDelete\' | translate }}\r\n        </div>\r\n        <div class="text-right">\r\n            <button type="submit" class="btn btn-danger" (click)="delete()">{{ \'General.DeleteBtn\' | translate }}</button>\r\n            <button type="submit" class="btn btn-default" (click)="closeDelete()">{{ \'General.CancelBtn\' | translate }}</button>\r\n        </div>\r\n    </modal-dialog>\r\n    <h1>{{ \'Dataprocess.ManageTitle\' | translate }}</h1>\r\n    <div class="row row-eq-height">\r\n        <div class="col-xs-4">\r\n            <div class="panel manage-panel">\r\n                <div class="panel-body">\r\n                    {{ \'Dataprocess.CounterParty\' | translate }}:\r\n                    <strong>{{dataprocessorDetail.counterpartName}}</strong>\r\n                    <i class="material-icons fs-16 text-success" *ngIf="counterpartStatus">check_circle</i>\r\n                    <i class="material-icons fs-16 text-danger" *ngIf="!counterpartStatus">info</i>\r\n                    <a (click)="counterpartClick()">{{ \'Dataprocess.EditLink\' | translate }}</a>\r\n                    <br> {{ \'Dataprocess.DataprocessorType\' | translate }}:\r\n                    <strong>{{dataprocessorDetail.dataProcessorType}}</strong>\r\n                    <br> {{ \'General.Version\' | translate }}:\r\n                    <strong>{{dataprocessorDetail.version}}</strong>\r\n                    <br> {{ \'General.Last-Revised\' | translate }}:\r\n                    <strong>{{dataprocessorDetail.lastUpdated | dateformatpipe:true}}</strong>\r\n                    <br> {{ \'General.Responsible\' | translate }}:\r\n                    <strong>{{dataprocessorDetail.responsible}}</strong>\r\n                    <br>\r\n                    <div class="lock mt10">\r\n                        <i class="material-icons" (click)="clickLock()" *ngIf="dataprocessorDetail.isLocked">lock</i>\r\n                        <i class="material-icons" (click)="clickLock()" *ngIf="!dataprocessorDetail.isLocked">lock_open</i>\r\n                        <span>{{ \'General.LockNote\' | translate }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-xs-4">\r\n            <div class="panel manage-panel">\r\n                <div class="panel-body">\r\n                    <strong>{{ \'General.UploadBoxTitle\' | translate }}</strong>\r\n                    <form method="post" enctype="multipart/form-data" *ngIf="!isUploaded">\r\n                        <div class="row">\r\n                            <div class="col-xs-8">\r\n                                <div class="form-group pmd-textfield">\r\n                                    <label for="Upload" class="control-label">\r\n                                        {{ \'General.ClickToUpload\' | translate }}\r\n                                    </label>\r\n                                    <input type="file" accept="image/png,image/bmp,image/gif,image/jpeg,text/csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/pdf,application/zip,text/*"\r\n                                        class="btn btn-sm btn-default" ng2FileSelect [uploader]="uploader" class="form-control">\r\n                                    <span class="pmd-textfield-focused"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-xs-4">\r\n                                <button class="btn btn-sm btn-primary mt20" type="button" (click)="uploader.uploadAll()">\r\n                                    <i class="material-icons pmd-xs upload-button">send</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <ul class="list-group" *ngIf="isUploaded">\r\n                        <li class="list-group-item">\r\n                            <div class="media-left">\r\n                                <i class="material-icons pmd-xs">attach_file</i>\r\n                            </div>\r\n                            <div class="media-body media-middle">\r\n                                {{fileName}}\r\n                            </div>\r\n                            <i class="material-icons md-dark media-middle download" (click)="download()" title="{{\'General.Download\' | translate}}">cloud_download</i>\r\n                            <i class="material-icons md-dark media-middle delete" (click)="confirmDelete()" title="{{\'General.Delete\' | translate}}">delete</i>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-xs-4">\r\n            <div class="panel manage-panel">\r\n                <div class="panel-body">\r\n                    <strong>{{ \'General.History\' | translate }}</strong>\r\n                    <div *ngIf="!dataProcessorhistory || dataProcessorhistory.length == 0" [innerHtml]="(\'General.NoHistory\' | translate)"></div>\r\n                    <div class="mt10 scroll-history" *ngIf="dataProcessorhistory && dataProcessorhistory.length > 0">\r\n                        <div *ngFor="let item of dataProcessorhistory" class="history-item">\r\n                            <div class="media-left">\r\n                                <span class="btn-avatar">\r\n                                    <div class="user_logo">{{item.oldValue != \'External\' ? item.avatarName : dataprocessorDetail.counterpartFirstName?.charAt(0)\r\n                                        + dataprocessorDetail.counterpartLastName?.charAt(0)}}</div>\r\n                                </span>\r\n                            </div>\r\n                            <div class="media-body media-middle">\r\n                                <h3 class="pmd-card-title-text">{{ item.oldValue != \'External\' ? item.owner : (dataprocessorDetail.counterpartFirstName ?\r\n                                    dataprocessorDetail.counterpartFirstName : dataprocessorDetail.counterpartEmail) }}</h3>\r\n                                <span class="pmd-card-subtitle-text" [innerHtml]="\r\n                                item.fileChanged ?(\'General.HistoryFileUpdated\' | translate: {owner: item.owner, fieldName: (item.fieldName | translate), newValue: item.newValue})\r\n                                :(\r\n                                    item.oldValue && item.oldValue != \'External\' ? \r\n                                    (\'Policy.HistoryUpdated\' | translate: {owner: item.owner, fieldName: (item.fieldName | translate), oldValue: item.oldValue, newValue: item.newValue}) :\r\n                                        (item.newValue == \'Sent\' ? (\'Dataprocess.SendDataProcessor\' | translate: {owner: item.owner}) :\r\n                                            (item.newValue == \'Download\' ? (\'Dataprocess.CounterpartDownloadDataProcessor\' | translate: {counterpart: (dataprocessorDetail.counterpartFirstName ? dataprocessorDetail.counterpartFirstName : dataprocessorDetail.counterpartEmail)}) :\r\n                                                (\'Policy.HistoryAddNew\' | translate: {owner: item.owner, newValue:item.newValue,fieldName: (item.fieldName | translate)}))))">\r\n                                </span>\r\n                            </div>\r\n                            <div class="media-right">\r\n                                {{item.date | dateformatpipe:true}}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="form-group mt20">\r\n        <div class="pmd-switch">\r\n            <label>\r\n                <input [(ngModel)]="useExisting" type="checkbox" (change)="useExistingChange()" [disabled]="dataprocessorDetail.isLocked">\r\n                <span class="pmd-switch-label"></span>\r\n            </label>\r\n            <span class="pmd-switch__text">{{ \'Dataprocess.UseAnExistingAgreement\' | translate }}</span>\r\n        </div>\r\n    </div>\r\n    <div class="panel" *ngIf="!dataprocessorDetail.useExisting">\r\n        <div class="panel-body">\r\n            <div class="lock-area">\r\n                <div class="lock-area__backdrop" *ngIf="dataprocessorDetail.isLocked"></div>\r\n                \x3c!-- <div *dynamicComponent="templateHTML"></div> --\x3e\r\n                <ng-template dynamic-template [template]="templateHTML" [extraModules]="ExtraModule"></ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="mt20">\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary" (click)="save()">{{\'General.Save\' | translate}}</button>\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-default" routerLink="/gdpr/management/dataprocessor">{{\'General.Cancel\' | translate}}</button>\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-default" *ngIf="!dataprocessorDetail.useExisting" [disabled]="!isHasContent" (click)="downloadPDF()">{{\'General.DownloadAsPdf\' | translate}}</button>\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary pull-right" *ngIf="!dataprocessorDetail.useExisting" (click)="sendToCounterpart()">{{\'Dataprocess.SendToCounterpart\' | translate}}</button>          \r\n    </div>\r\n     <div class="mt10" *ngIf="!dataprocessorDetail.useExisting">\r\n        <p class="pull-right" *ngIf="!dataprocessorDetail.lastSentToCounterpart">The agreement has not been sent yet.</p>\r\n        <p class="pull-right" *ngIf="dataprocessorDetail.lastSentToCounterpart">The agreement was last sent on {{dataprocessorDetail.lastSentToCounterpart | dateformatpipe:true}}.</p>        \r\n    </div> \r\n    <div class="mt50">&nbsp;</div>\r\n</div>\r\n<router-outlet></router-outlet>'},"3sSg":function(e,t){e.exports='<div class="persondata-bar">\r\n    <div class="panel">\r\n        <div class="panel-body">\r\n            <ul class="list list-unstyled list-inline">\r\n                <li>1. {{\'Persondata.ChooseProcess\' | translate}}</li>\r\n                <li *ngFor="let process of allProcesses" [ngClass]="{\'active\': process.value == selectedProcess.value}" (click)="_data.changeLoadStatus(true); selectProcess(process)">\r\n                    <span>{{process.label}}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="persondata-bar">\r\n    <div class="panel">\r\n        <div class="panel-body">\r\n            <ul class="list list-unstyled list-inline">\r\n                <li>2. {{\'Persondata.ChoosePersonCategory\' | translate}}</li>\r\n                <li  *ngFor="let personGroup of allPersonGroups" [ngClass]="{\'active\': personGroup.value == selectedPersonGroup.value}" (click)="_data.changeLoadStatus(true); selectPersonGroup(personGroup)">\r\n                    <span>{{personGroup.label}}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n</div>\r\n<h2 class="fs18" *ngIf="selectedProcess && selectedPersonGroup" [innerHtml]="\'Persondata.YourPurposes\'| translate:{process: selectedProcess.label, personGroup: selectedPersonGroup.label}"></h2>\r\n<mat-accordion class="main-accordion" *ngIf="allPurposes">\r\n    <mat-expansion-panel *ngFor="let purpose of allPurposes" (opened)="selectPurpose(purpose)" [expanded]="selectedPurpose ? (purpose.purposeId == selectedPurpose.purposeId) : false">\r\n        <mat-expansion-panel-header >\r\n            <mat-panel-title>\r\n                <h2 class="title-no-margin">{{purpose.purposeName}}</h2>\r\n            </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n            <h3>{{\'Persondata.Your3rdPartVendor\' | translate}} <span class="help-group__icon"><i class="material-icons">help_outline</i><span class="help-group__help-text">{{\'Persondata.Your3rdPartVendorTooltip\' | translate}}</span></span></h3>\r\n            <div class="table-scroll">\r\n                <table class="table pmd-table table-bordered table-martrix mt20 table-no-responsive table-diag">\r\n                    <thead>\r\n                        <tr class="table-active">\r\n                            <th></th>\r\n                            <th *ngFor="let header of purpose.dataTypes">{{header.name}}</th>\r\n                            <th>{{\'Persondata.Your3rdPartVendorAction\' | translate}}</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody *ngIf="!purpose.vendorDataTypes">\r\n                        <tr>\r\n                            <td [colSpan]="purpose.dataTypes.length + 2"><div class="text-center">{{\'Persondata.NoVendorData\' | translate}}</div></td>\r\n                        </tr>\r\n                    </tbody>\r\n                    <tbody *ngIf="purpose.vendorDataTypes">\r\n                        <tr *ngFor="let vendor of purpose.vendorDataTypes">\r\n                            <td>{{vendor.vendorName}}</td>\r\n                            <td *ngFor="let item of vendor.dataTypes" (click)="clickMatrix(purpose,vendor.vendorId,item.id)" class="table-martrix__check" [ngClass]="{\'active\': item.selected}">\r\n                                <div class="table-martrix__check-inner">\r\n                                </div>\r\n                                <i class="material-icons">check</i>\r\n                            </td>\r\n                            <td>\r\n                                <div class="text-center">\r\n                                    <a class="block-inline-link" href="javascript:void(0);" (click)="vendorView(vendor)">{{\'Persondata.3rdPartVendorViewBtn\' | translate}}</a> \r\n                                    <a class="block-inline-link" href="javascript:void(0);" (click)="deleteVendor(purpose, vendor.vendorId)"><i class="material-icons">delete</i></a>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <h3>{{\'Persondata.AddVendor\' | translate}} <span class="help-group__icon"><i class="material-icons">help_outline</i><span class="help-group__help-text">{{\'Persondata.AddVendorTooltip\' | translate}}</span></span></h3>\r\n            <div class="row">\r\n                <div class="col-xs-6 col-md-4">\r\n                    <div  class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': NameOf3rdPartyVendor}">\r\n                        <label for="NameOf3rdPartyVendor" class="control-label">\r\n                            {{\'Persondata.NameOf3rdPartyVendor\' | translate}}\r\n                        </label>\r\n                        <input type="text" [(ngModel)]="NameOf3rdPartyVendor" class="form-control">\r\n                        <span class="pmd-textfield-focused"></span>\r\n                    </div>\r\n                    <div  class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': vendorCategory}">\r\n                        <label for="AddVendorCategory" class="control-label">\r\n                            {{\'Persondata.AddVendorCategory\' | translate}}\r\n                        </label>\r\n                        <ng-select \r\n                            id="suggestion-list" [options]="listSuggestions"  (noOptionsFound)="onNoOptionsFound($event)" \r\n                            [(ngModel)]="vendorCategory" filterPlaceholder="{{\'Persondata.SelectFromList\' | translate}}" \r\n                        ></ng-select>\r\n                        <span class="pmd-textfield-focused"></span>\r\n                    </div>\r\n                    <button type="button" class="btn btn-primary" [disabled]="!NameOf3rdPartyVendor || !vendorCategory" (click)="addVendor(purpose)"> {{\'Persondata.AddVendorSubmitBtn\' | translate}}</button>\r\n                </div>\r\n            </div>\r\n            <div class="text-right">\r\n                <button class="btn btn-lg btn-default" (click)="selectPurpose(purpose)">{{\'Persondata.Cancel\' | translate}}</button>\r\n                <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary" (click)="savePurpose(purpose)">{{\'Persondata.Save\' | translate}}</button>\r\n            </div>\r\n    </mat-expansion-panel>\r\n</mat-accordion>\r\n<router-outlet></router-outlet>'},"7Zp/":function(e,t,n){"use strict";var r=this&&this.__assign||Object.assign||function(e){for(var t,n=1,r=arguments.length;n<r;n++)for(var a in t=arguments[n])Object.prototype.hasOwnProperty.call(t,a)&&(e[a]=t[a]);return e};Object.defineProperty(t,"__esModule",{value:!0});var a=n("WT6e"),s=n("Xjw4"),o=n("YaPU");n("lMWm");var i=n("PGUK"),l=n("hQ/V"),c=n("+/vl"),d=function(){function e(e,t,n,r,s,o,l,c,d,p,u){this.dynamicExtraModules=e,this.dynamicResponseRedirectStatuses=t,this.viewContainer=n,this.compiler=r,this.http=s,this.renderer=o,this.dynamicCache=l,this.moduleFactoryLoader=c,this.routes=d,this.removeDynamicWrapper=p,this.lazyExtraModules=[],this.templateReady=new a.EventEmitter,this.dynamicSelector=i.Utils.buildByNextId(u),this.injector=a.Injector.create([],this.viewContainer.parentInjector)}return e.prototype.ngOnChanges=function(e){var t=this;this.ngOnDestroy(),this.buildModule().then(function(e){var n,r=Reflect.get(e,l.HASH_FIELD);i.Utils.isPresent(r)?(n=t.dynamicCache.get(r),i.Utils.isPresent(n)||t.dynamicCache.set(r,n=t.compiler.compileModuleAndAllComponentsAsync(e))):n=t.compiler.compileModuleAndAllComponentsAsync(e),n.then(function(e){return t.makeDynamicTemplatePlaceholder(e)})})},e.prototype.ngOnDestroy=function(){if(i.Utils.isPresent(this.moduleInstance)&&(this.moduleInstance.destroy(),this.moduleInstance=null),i.Utils.isPresent(this.templatePlaceholder)&&(this.templatePlaceholder.destroy(),this.templatePlaceholder=null),i.Utils.isPresent(this.cachedDynamicModule)&&(this.compiler.clearCacheFor(this.cachedDynamicModule),this.cachedDynamicModule=null),i.Utils.isPresent(this.cachedTemplatePlaceholder)&&(this.compiler.clearCacheFor(this.cachedTemplatePlaceholder),this.cachedTemplatePlaceholder=null),i.Utils.isPresent(this.replacedNodes)){for(var e=0,t=this.replacedNodes;e<t.length;e++){var n=t[e];this.renderer.removeChild(n.parentElement,n)}this.replacedNodes=null}},e.prototype.makeDynamicTemplatePlaceholder=function(e){var t=this;this.moduleInstance=e.ngModuleFactory.create(this.injector);var n=e.componentFactories.find(function(e){return e.selector===t.dynamicSelector||i.Utils.isPresent(e.componentType)&&i.Utils.isPresent(t.template)&&Reflect.get(e.componentType,l.HASH_FIELD)===i.Utils.toHash(t.template)}),r=this.templatePlaceholder=n.create(this.injector,null,null,this.moduleInstance);this.viewContainer.insert(r.hostView,0),i.Utils.applySourceAttributes(this.templatePlaceholder.instance,this.context),this.removeDynamicWrapper&&(this.replacedNodes=i.Utils.replaceDynamicContent(this.renderer,r.location.nativeElement)),this.templateReady.emit(this.templatePlaceholder.instance)},e.prototype.buildModule=function(){for(var e=this,t=[],n=0,r=[].concat(this.lazyModules||[]);n<r.length;n++){var s=r[n],l=i.Utils.findLazyRouteLoader(s,this.routes);l?i.Utils.isFunction(l.loadChildren)?t.push(o.Observable.of(l.loadChildren()).toPromise()):t.push(this.moduleFactoryLoader.load(l.loadChildren)):t.push(this.moduleFactoryLoader.load(s))}return new Promise(function(n){Promise.all(t).then(function(t){for(var r=0,s=t;r<s.length;r++){var o=s[r];o instanceof a.NgModuleFactory?e.lazyExtraModules.push(o.moduleType):e.lazyExtraModules.push(o)}i.Utils.isPresent(e.template)?n(e.makeComponentModule({template:e.template})):i.Utils.isPresent(e.httpUrl)?e.loadRemoteTemplate(e.httpUrl,n):n(e.makeComponentModule())})})},e.prototype.loadRemoteTemplate=function(e,t){var n,a=this;i.Utils.isPresent(this.remoteTemplateFactory)&&i.Utils.isFunction(this.remoteTemplateFactory.buildRequestOptions)&&(n=this.remoteTemplateFactory.buildRequestOptions()),this.http.get(e,r({withCredentials:!0,observe:"response"},n)).subscribe(function(e){if(a.dynamicResponseRedirectStatuses.includes(e.status)){var n=e.headers.get("Location");i.Utils.isPresent(n)?a.loadRemoteTemplate(n,t):console.warn("The location header is empty. Stop processing. Response status is "+e.status)}else t(a.makeComponentModule({template:i.Utils.toTemplate(a.remoteTemplateFactory,e)}))},function(){var e=a.defaultTemplate||"";t(a.makeComponentModule({template:e}))})},e.prototype.makeComponentModule=function(e){var t=this.cachedTemplatePlaceholder=this.makeComponent(e),n=this.dynamicExtraModules.concat(this.extraModules||[]).concat(this.lazyExtraModules).concat(c.DynamicTemplateModuleHolder.saveAndGet()),r=function(){function e(){}return e.decorators=[{type:a.NgModule,args:[{declarations:[t],imports:[s.CommonModule].concat(n)}]}],e.ctorParameters=function(){return[]},e}();return i.Utils.applyHashField(r,t),this.cachedDynamicModule=r},e.prototype.makeComponent=function(e){var t={selector:this.dynamicSelector,styles:this.styles};i.Utils.isPresent(e)&&(i.Utils.isPresent(e.template)?t.template=e.template:i.Utils.isPresent(e.templatePath)&&(t.templateUrl=e.templatePath));var n=function(){function e(){}return e.decorators=[{type:a.Component,args:[t]}],e.ctorParameters=function(){return[]},e}();return i.Utils.applyHashField(n,t.template),n},e.propDecorators={templateReady:[{type:a.Output}],template:[{type:a.Input}],lazyModules:[{type:a.Input}],httpUrl:[{type:a.Input}],context:[{type:a.Input}],remoteTemplateFactory:[{type:a.Input}],extraModules:[{type:a.Input}],styles:[{type:a.Input}],defaultTemplate:[{type:a.Input}]},e}();t.DynamicBase=d},AyuY:function(e,t){e.exports='<h3>{{\'General.EnterDataProcessorCopyName\' | translate}}</h3>\r\n\r\n<div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': processorNewName}">\r\n    <label for="companyName" class="control-label pmd-input-group-label">{{\'General.DataProcessorCopyName\' | translate}}</label>\r\n    <div class="input-group">\r\n        <div class="input-group-addon">\r\n            <i class="material-icons">content_copy</i>\r\n        </div>\r\n        <input maxlength="100" class="form-control" type="text" [(ngModel)]="processorNewName" (keyup.enter)="save()">\r\n        <span class="pmd-textfield-focused"></span>\r\n    </div>\r\n\r\n    <div class="pull-right">\r\n        <button mat-dialog-close class="mt20 btn btn-default pmd-ripple-effect">{{\'General.Cancel\' | translate}}</button>\r\n        <button (click)="save()" class="mt20 btn pmd-btn-raised pmd-ripple-effect btn-primary">{{\'General.Create\' | translate}}</button>\r\n    </div>\r\n</div>'},EnLU:function(e,t){e.exports='.panel-title__innner {\r\n    display: block;\r\n    padding: 12px;\r\n    line-height: 24px;\r\n}\r\n.panel-title__innner .btn-link {\r\n    padding: 5px 0;\r\n    text-decoration: none;\r\n    color: #6db7cc;\r\n    text-transform: none;\r\n}\r\n.manage-panel {\r\n    height: 100%;\r\n    margin-bottom: 0;\r\n    overflow-y: auto;\r\n}\r\n.lock span {\r\n    display: inline-block;\r\n    vertical-align: middle;\r\n}\r\n.lock .material-icons {\r\n    vertical-align: bottom;\r\n    cursor: pointer;\r\n}\r\n.lock-area {\r\n    position: relative;\r\n}\r\n.lock-area__backdrop {\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    background: rgba(255, 255, 255, .5);\r\n}\r\n.panel-dark {\r\n    background: #c7c7c7;\r\n}\r\n.panel-default {\r\n    background: #fafafa;\r\n}\r\n.assessment-item {\r\n    width: 30px;\r\n    height: 30px;\r\n    background: #6db7cc;\r\n    cursor: pointer;\r\n}\r\n.assessment-item.green {\r\n    background: #8CB63C;\r\n}\r\n.assessment-item.yellow {\r\n    background: #F2CB2A;\r\n}\r\n.assessment-item.red {\r\n    background: #951425;\r\n}\r\n.assessment-item.active {\r\n    background: #6db7cc;\r\n}\r\n.assessment tr td {\r\n    padding: 5px;\r\n}\r\n.processes-bar .list {margin-bottom: 0;}\r\n.processes-bar .list > li > span {cursor: pointer; font-size: 18px;}\r\n.processes-bar .active {font-weight: 600; text-decoration: underline;}\r\n.custom-row {\r\n    margin-left: -10px;\r\n    margin-right: -10px;\r\n    overflow-x: auto;\r\n    overflow-y: hidden;\r\n}\r\n.col-1per5 {\r\n    float: left;\r\n    width: 20%;\r\n    padding: 0 10px;\r\n    min-width: 325px;\r\n}\r\n.scroll-history\r\n{\r\n    height: 200px;\r\n    overflow-y: auto;\r\n}\r\n.white-background {\r\n    background-color: #fff;\r\n}\r\n.upload-button {\r\n    line-height: inherit;\r\n}\r\ninput[type="file"] {\r\n    cursor: pointer !important;\r\n    font-size: small !important;\r\n  }\r\ninput[type="file"]::-webkit-file-upload-button {\r\n    background: #8cb63c;\r\n    border: 0;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    border-radius: .2em;    \r\n    font-size: small !important;\r\n  }\r\ninput[type="file"]::-ms-browse {\r\n    background:#8cb63c;\r\n    border: 0;\r\n    padding: 5px;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    border-radius: .2em;\r\n    font-size: small !important;\r\n  }\r\n.material-icons.download{\r\n    padding: 0 5px;\r\n    color: #8cb63c;\r\n    cursor: pointer;\r\n}\r\n.material-icons.delete{\r\n    padding: 0 5px;\r\n    cursor: pointer;    \r\n}\r\n.btn-avatar .user_logo\r\n{\r\n    height: 48px;\r\n    width: 48px;\r\n    background: #bdc3c8;\r\n    border-radius: 50%;\r\n    line-height: 48px;\r\n    text-align: center;\r\n    font-size: 24px;\r\n    color: #7f8c8d;\r\n    font-family: \'Titillium\', sans-serif;\r\n    font-weight: 600;\r\n}\r\n.ico-locked\r\n{\r\n    opacity: 0.6;\r\n    cursor: auto;\r\n}\r\n.persondata-bar .list {margin-bottom: 0}\r\n.persondata-bar .panel-body {padding: 12px 15px;}\r\n.persondata-bar .list li {\r\n    color: #8699A9;\r\n    font-family: "Rajdhani";\r\n    font-size: 18px;\r\n    cursor: pointer;\r\n}\r\n.persondata-bar .list li:first-child {\r\n    font-weight: 600;\r\n    cursor: auto;\r\n}\r\n.persondata-bar .list li.active {\r\n    color: #343D4B;\r\n    font-weight: 600;\r\n}\r\n.persondata-bar .list li.active > span {\r\n    display: block;\r\n    border-bottom: 2px solid #8cb63c;\r\n}\r\n.purpose-category{\r\n    font-size: 16px;\r\n}\r\n.sub-item {\r\n    margin-left: 25px !important;\r\n}\r\n.processor-more {\r\n    cursor: pointer;\r\n    margin-left: 20px;\r\n}\r\n.sub-item .panel-title__innner {\r\n    height: 45px;\r\n    padding-top: 10px;\r\n}'},HP0V:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("WT6e"),a=n("n+iR"),s=n("I1HR"),o=n("hQ/V"),i=n("+/vl"),l=function(){function e(){}return e.forRoot=function(t){if(i.DynamicTemplateModuleHolder.saveAndGet())throw new Error("You cannot create dynamic template module more one time!");return i.DynamicTemplateModuleHolder.saveAndGet({ngModule:e,providers:[s.DynamicCache,{provide:o.DynamicTypes.DynamicExtraModules,useValue:t&&t.extraModules?t.extraModules:[]},{provide:o.DynamicTypes.DynamicResponseRedirectStatuses,useValue:[301,302,307,308]},{provide:r.NgModuleFactoryLoader,useClass:r.SystemJsNgModuleLoader},{provide:o.ROUTES_TOKEN,useValue:t&&t.routes||[]},{provide:o.REMOVE_DYNAMIC_WRAPPER,useValue:t&&t.removeDynamicWrapper||!1}]})},e.decorators=[{type:r.NgModule,args:[{declarations:[a.DynamicDirective],exports:[a.DynamicDirective]}]}],e.ctorParameters=function(){return[]},e}();t.NgxDynamicTemplateModule=l},Hzyt:function(e,t){e.exports='<div class="container">\r\n    <div class="row">\r\n        <div class="col-xs-6">\r\n            <h1>{{ \'Policy.Title\' | translate }}</h1>\r\n            <p>{{ \'Policy.Description\' | translate }}</p>\r\n        </div>\r\n    </div>\r\n    <div class="row mt20">\r\n        <div class="col-xs-6">\r\n            <div class="panel-group pmd-accordion" role="tablist" aria-multiselectable="true" *ngFor="let policy of policies">\r\n                <div class="panel panel-default">\r\n                    <div class="panel-heading" role="tab">\r\n                        <h4 class="panel-title white-background">\r\n                            <div class="panel-title__innner">\r\n                                {{policy.documentName}}\r\n                                <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="policy.isLocked">lock_outline</i>\r\n                                <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="!policy.isLocked">lock_open</i>\r\n                                <button class="btn btn-link pmd-accordion-arrow" (click)="viewDetail(policy.documentId)">{{\'General.View\' | translate}}</button>\r\n                            </div>\r\n                        </h4>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},I1HR:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("WT6e"),a=function(){function e(e){var t=this;this.memoryCache=new Map,e.onUnstable.subscribe(function(){return t.memoryCache.clear()}),e.onStable.subscribe(function(){return t.memoryCache.clear()})}return e.prototype.set=function(e,t){this.memoryCache.set(e,t)},e.prototype.get=function(e){return this.memoryCache.get(e)},e.decorators=[{type:r.Injectable}],e.ctorParameters=function(){return[{type:r.NgZone,decorators:[{type:r.Inject,args:[r.NgZone]}]}]},e}();t.DynamicCache=a},OCN0:function(e,t,n){"use strict";function r(e){for(var n in e)t.hasOwnProperty(n)||(t[n]=e[n])}Object.defineProperty(t,"__esModule",{value:!0}),r(n("n+iR")),r(n("7Zp/")),r(n("hQ/V")),r(n("HP0V")),r(n("I1HR"))},PGUK:function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("/V0p"),a=n("hQ/V"),s=new r.SHA1,o=0,i=function(){function e(){}return e.nextId=function(){return o++},e.buildByNextId=function(e){return e.replace("{id}",String(this.nextId()))},e.isPresent=function(e){return void 0!==e&&null!==e},e.isFunction=function(e){return"function"==typeof e},e.findLazyRouteLoader=function(e,t){return t.filter(function(t){return t.path===e})[0]},e.applySourceAttributes=function(t,n){if(e.isPresent(n)){var r=function(r){if(n.hasOwnProperty(r)){var a=Reflect.get(n,r),s={};e.isFunction(a)||(s.set=function(e){return Reflect.set(n,r,e)}),s.get=function(){return Reflect.get(n,r)},Reflect.defineProperty(t,r,s)}};for(var a in n)r(a)}},e.toTemplate=function(e,t){var n=this.isPresent(e)&&this.isFunction(e.parseResponse)?e.parseResponse(t):null;if(this.isPresent(n))return n;try{return JSON.stringify(t.body)}catch(e){return t.statusText}},e.replaceDynamicContent=function(e,t){if(!t.children.length)return null;for(var n=[],r=0,a=Array.from(t.children);r<a.length;r++){var s=a[r];e.insertBefore(t.parentElement,s,t),n.push(s)}return e.removeChild(t.parentElement,t),n},e.toHash=function(e){return s.hex(e)},e.applyHashField=function(t,n){e.isPresent(n)&&Reflect.set(t,a.HASH_FIELD,"string"==typeof n?e.toHash(n):Reflect.get(n,a.HASH_FIELD))},e}();t.Utils=i},UU5V:function(e,t){e.exports='<div class="container">\r\n    <div class="row">\r\n        <div class="col-xs-6">\r\n            <h1>{{ \'Risk.Title\' | translate }}</h1>\r\n            <p>{{ \'Risk.Description\' | translate }}</p>\r\n        </div>\r\n    </div>\r\n    <div class="row row-eq-height" *ngIf="isReady">\r\n        <div class="col-xs-6">\r\n            <h3>{{ \'Risk.NewAndProposedByComplyTo\' | translate }}</h3>\r\n            <div class="panel panel-dark" style="height: 100%">\r\n                <div class="panel-body">\r\n                    <button type="button" class="btn pmd-btn-raised pmd-ripple-effect btn-primary" (click)="addNew()">{{ \'Risk.AddNewBtn\' | translate}}</button>\r\n                    <div class="mt20"></div>\r\n                    <div *ngFor="let risk of listRisks | filterBy: {isPublished: false}" class="risk-item pmd-z-depth {{risk.color}}">\r\n                        <div class="risk-item__inner">\r\n                            <div class="risk-item__status">\r\n                            </div>\r\n                            <div class="risk-item__body">\r\n                                <div class="risk-item__header">\r\n                                    <div class="risk-item__option" [matMenuTriggerFor]="menu">\r\n                                        <i class="material-icons">more_vert</i>\r\n                                    </div>\r\n                                    <mat-menu #menu="matMenu">\r\n                                        <button mat-menu-item (click)="goDetail(risk.riskId)">\r\n                                            <span>{{ \'Risk.View\' | translate }}</span>\r\n                                        </button>\r\n                                        <button mat-menu-item (click)="toggleTask(risk)" *ngIf="!risk.isShowTask">\r\n                                            <span>{{ \'Risk.ShowTask\' | translate }}</span>\r\n                                        </button>\r\n                                        <button mat-menu-item (click)="toggleTask(risk)" *ngIf="risk.isShowTask">\r\n                                            <span>{{ \'Risk.Hide\' | translate }}</span>\r\n                                        </button>\r\n                                    </mat-menu>\r\n                                    <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="risk.isAutoGenerated; else insert_drive_file">\r\n                                    <ng-template #insert_drive_file><i class="material-icons">insert_drive_file</i></ng-template> <a href="javascript:void(0)" (click)="goDetail(risk.riskId)" title="{{risk.riskName}}">{{risk.riskName}}</a>\r\n                                </div>\r\n                                <div class="risk-item__task-area">\r\n                                    <div class="row">\r\n                                        <div class="col-xs-6">\r\n                                            <div class="risk-item__task-header">\r\n                                                <div class="sub">{{risk.taskNonSchedule}}/{{risk.tasks.length}}</div>\r\n                                                <strong>{{ \'Risk.NonScheduleTask\' | translate }}</strong>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="risk-item__task-header">\r\n                                                <div class="sub">{{risk.tasks.length - risk.taskNonSchedule}}/{{risk.tasks.length}}</div>\r\n                                                <strong>{{ \'Risk.ScheduleTask\' | translate }}</strong>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row row-eq-height">\r\n                                        <div class="col-xs-6">\r\n                                            <div class="dark-area" *ngIf="risk.isShowTask">\r\n                                                <div *ngFor="let task of risk.tasks">\r\n                                                    <div *ngIf="task.taskStatus == 1" class="small-task-item">\r\n                                                        <div class="small-task-item__inner">\r\n                                                            <div class="small-task-item__name">\r\n                                                                <i class="material-icons">view_list</i><strong>{{task.processName}}:</strong> {{task.taskName}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="dark-area" *ngIf="risk.isShowTask">\r\n                                                <div *ngFor="let task of risk.tasks">\r\n                                                    <div *ngIf="task.taskStatus != 1" class="small-task-item">\r\n                                                        <div class="small-task-item__inner">\r\n                                                            <div class="small-task-item__name">\r\n                                                                <i class="material-icons">view_list</i><strong>{{task.processName}}:</strong> {{task.taskName}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-xs-6">\r\n            <h3>{{ \'Risk.IndentifiedRisks\' | translate }}</h3>\r\n            <div class="panel panel-default" style="height: 100%">\r\n                <div class="panel-body">\r\n                    <div *ngFor="let risk of listRisks | filterBy: {isPublished: true}" class="risk-item pmd-z-depth {{risk.color}}">\r\n                        <div class="risk-item__inner">\r\n                            <div class="risk-item__status">\r\n                            </div>\r\n                            <div class="risk-item__body">\r\n                                <div class="risk-item__header">\r\n                                    <div class="risk-item__option" [matMenuTriggerFor]="menu">\r\n                                        <i class="material-icons">more_horiz</i>\r\n                                    </div>\r\n                                    <mat-menu #menu="matMenu">\r\n                                        <button mat-menu-item (click)="goDetail(risk.riskId)">\r\n                                            <span>{{ \'Risk.View\' | translate }}</span>\r\n                                        </button>\r\n                                        <button mat-menu-item (click)="toggleTask(risk)" *ngIf="!risk.isShowTask">\r\n                                            <span>{{ \'Risk.ShowTask\' | translate }}</span>\r\n                                        </button>\r\n                                        <button mat-menu-item (click)="toggleTask(risk)" *ngIf="risk.isShowTask">\r\n                                            <span>{{ \'Risk.Hide\' | translate }}</span>\r\n                                        </button>\r\n                                    </mat-menu>\r\n                                    <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="risk.isAutoGenerated; else insert_drive_file">\r\n                                    <ng-template #insert_drive_file><i class="material-icons">insert_drive_file</i></ng-template> <a href="javascript:void(0)" (click)="goDetail(risk.riskId)" title="{{risk.riskName}}">{{risk.riskName}}</a>\r\n                                </div>\r\n                                <div class="risk-item__task-area">\r\n                                    <div class="row">\r\n                                        <div class="col-xs-6">\r\n                                            <div class="risk-item__task-header">\r\n                                                <div class="sub">{{risk.taskNonSchedule}}/{{risk.tasks.length}}</div>\r\n                                                <strong>{{ \'Risk.NonScheduleTask\' | translate }}</strong>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="risk-item__task-header">\r\n                                                <div class="sub">{{risk.tasks.length - risk.taskNonSchedule}}/{{risk.tasks.length}}</div>\r\n                                                <strong>{{ \'Risk.ScheduleTask\' | translate }}</strong>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="row row-eq-height">\r\n                                        <div class="col-xs-6">\r\n                                            <div class="dark-area" *ngIf="risk.isShowTask">\r\n                                                <div *ngFor="let task of risk.tasks">\r\n                                                    <div *ngIf="task.taskStatus == 1" class="small-task-item">\r\n                                                        <div class="small-task-item__inner">\r\n                                                            <div class="small-task-item__name">\r\n                                                                <i class="material-icons">view_list</i><strong>{{task.processName}}:</strong> {{task.taskName}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="dark-area" *ngIf="risk.isShowTask">\r\n                                                <div *ngFor="let task of risk.tasks">\r\n                                                    <div *ngIf="task.taskStatus != 1" class="small-task-item">\r\n                                                        <div class="small-task-item__inner">\r\n                                                            <div class="small-task-item__name">\r\n                                                                <i class="material-icons">view_list</i><strong>{{task.processName}}:</strong> {{task.taskName}}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},VNoG:function(e,t){e.exports='<h2>{{\'Dataprocess.SendcounterpartTitle\' | translate}}</h2>\r\n<div class="mt30">\r\n    <span [innerHtml]="\'Dataprocess.SendcounterpartContent\'| translate:{email: counterpartEmail}"></span>\r\n</div>\r\n<div class="mt30 pull-right">\r\n    <button mat-dialog-close class="mt20 btn btn-default pmd-ripple-effect">{{\'General.Cancel\' | translate}}</button>\r\n    <button mat-dialog-close="true" class="mt20 btn pmd-btn-raised pmd-ripple-effect btn-primary">{{\'Dataprocess.OkSend\' | translate}}</button>\r\n</div>'},"YlK+":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("WT6e"),a=n("Xjw4"),s=n("7DMc"),o=n("ItHS"),i=n("8A5H"),l=n("obU/"),c=n("fYrX"),d=n("OCN0"),p=n("ZKJB"),u=n("mn3z"),m=n("6NH1"),f=n("bfOx"),h=n("lYsT"),v=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},g=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},b=function(){function e(e,t){this._translate=e,this._data=t}return e.prototype.ngOnInit=function(){var e=this._data.getDefaultLanguage();this._translate.setDefaultLang(e)},e=v([Object(r.Component)({template:"\n        <router-outlet></router-outlet>\n    "}),g("design:paramtypes",[i.c,h.a])],e)}(),y=n("mExx"),_=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},k=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},C=function(){function e(e,t,n,r){this._translate=e,this._data=t,this._policy=n,this._router=r}return e.prototype.ngOnInit=function(){var e=this;this._policy.getAllPolicy().then(function(t){e.policies=t,console.log(t)})},e.prototype.viewDetail=function(e){this._router.navigate(["/gdpr/management/policy-management",e])},e=_([Object(r.Component)({template:n("Hzyt"),styles:[n("EnLU")]}),k("design:paramtypes",[i.c,h.a,y.a,f.Router])],e)}(),D=(n("EN1B"),n("g5jc")),x=n("byKF"),P=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},w=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},S=function(){function e(e){this._http=e,this.counterpartStatus=new D.b,this.getCounterpartStatus=this.counterpartStatus.asObservable()}return e.prototype.updateCounterpartStatus=function(e){this.counterpartStatus.next(e)},e.prototype.getDataprocessorById=function(e){var t=x.a.GET_ALL_DATA_PROCESSOR_BY_ID_URL+"/"+e;return this._http.get(t).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getAllDataprocessor=function(){return this._http.get(x.a.GET_ALL_DATA_PROCESSOR_URL).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.copyDataprocessor=function(e){return this._http.post(x.a.COPY_DATA_PROCESSOR_URL,e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.deleteDataprocessor=function(e){return this._http.delete(x.a.DELETE_DATA_PROCESSOR_URL+"/"+e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.updateDataprocessor=function(e){return this._http.post(x.a.UPDATE_DATA_PROCESSOR_URL,JSON.stringify(e)).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.updateCounterpart=function(e){return this._http.post(x.a.UPDATE_COUNTERPART_URL,JSON.stringify(e)).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getCounterpart=function(e){var t=x.a.GET_COUNTERPART_URL+"/"+e;return this._http.get(t).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.senDataprocessor=function(e){var t=x.a.SEND_DATA_PROCESSOR_URL+"/"+e;return this._http.post(t,{}).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.setSharedDataId=function(e){this._sharedDataId=e},e.prototype.getSharedDataId=function(){return this._sharedDataId},e.prototype.handleError=function(e){return Promise.reject(e.message||e)},e=P([Object(r.Injectable)(),w("design:paramtypes",[o.HttpClient])],e)}(),I=n("DUFE"),R=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},F=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},T=this&&this.__param||function(e,t){return function(n,r){t(n,r,e)}},A=function(){function e(e,t){this.dialogRef=e,this.data=t}return e.prototype.ngOnInit=function(){this.processorNewName=this.data.processorNewName},e.prototype.save=function(){this.processorNewName&&this.dialogRef.close(this.processorNewName)},e=R([Object(r.Component)({template:n("AyuY")}),T(1,Object(r.Inject)(I.e)),F("design:paramtypes",[I.g,Object])],e)}(),E=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},N=function(){function e(){}return e=E([Object(r.Component)({template:n("uSON")})],e)}(),O=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},L=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},B=function(){function e(e,t,n,r,a,s){this._translate=e,this._data=t,this._dataprocessor=n,this._router=r,this.copyDialog=a,this.deleteDialog=s}return e.prototype.ngOnInit=function(){var e=this;this._data.changeLoadStatus(!0),this._dataprocessor.getAllDataprocessor().then(function(t){e.listDataprocessor=t,e._data.changeLoadStatus(!1)})},e.prototype.viewDetail=function(e){this._router.navigate(["/gdpr/management/dataprocessor-management",e])},e.prototype.makeCopy=function(e){var t=this;this.copyDialog.open(A,{width:"450px",data:{processorNewName:e.documentName}}).afterClosed().subscribe(function(n){n&&(t._data.changeLoadStatus(!0),t._dataprocessor.copyDataprocessor({processorId:e.documentId,processorNewName:n}).then(function(n){e.copies.push(n),t._data.changeLoadStatus(!1)}))})},e.prototype.delete=function(e,t){var n=this;this.deleteDialog.open(N,{width:"450px"}).afterClosed().subscribe(function(r){r&&(n._data.changeLoadStatus(!0),n._dataprocessor.deleteDataprocessor(t.documentId).then(function(r){e.copies=e.copies.filter(function(e){return e.documentId!==t.documentId}),n._data.changeLoadStatus(!1)}))})},e=O([Object(r.Component)({template:n("d5Fz"),styles:[n("EnLU")]}),L("design:paramtypes",[i.c,h.a,S,f.Router,I.f,I.f])],e)}(),M=n("fln1"),j=n("B6ma"),U=n("xHUa"),V=n("3Bd6"),G=n("RE9E"),H=n("aCqY"),z=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},Q=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},W=function(){function e(e){this._data=e}return e.prototype.onChange=function(e){this._data.updateshareContentEditor(e.target.name,e.target.value)},z([Object(r.Input)(),Q("design:type",String)],e.prototype,"inputValue",void 0),z([Object(r.Input)(),Q("design:type",String)],e.prototype,"inputName",void 0),e=z([Object(r.Component)({selector:"my-input",template:'<input class="my-input" type="text" [name]="inputName" [value]="inputValue" (change)="onChange($event)">'}),Q("design:paramtypes",[h.a])],e)}(),Y=function(){function e(e){this._data=e}return e.prototype.onChange=function(e){this._data.updateshareContentEditor(e.target.name,e.target.value)},z([Object(r.Input)(),Q("design:type",String)],e.prototype,"inputValue",void 0),z([Object(r.Input)(),Q("design:type",String)],e.prototype,"inputName",void 0),e=z([Object(r.Component)({selector:"my-textarea",template:'<textarea class="my-input" row="1" style="width:50%" [name]="inputName" (change)="onChange($event)">{{inputValue}}</textarea>'}),Q("design:paramtypes",[h.a])],e)}(),q=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},J=function(){function e(){}return e=q([Object(r.NgModule)({imports:[a.CommonModule],declarations:[W,Y],providers:[y.a],exports:[W,Y]})],e)}(),Z=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},K=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},X=function(){function e(e,t,n,r,a,s,o,i,l){this._translate=e,this._data=t,this._activatedRoute=n,this._fileUploadService=r,this._policy=a,this._alert=s,this._router=o,this._historyService=i,this._userService=l,this.readyToLoad=!1,this.originalPolicyInput=[],this.customPolicyInput=[],this.useExisting=!1,this.canAccessProFeature=!1,this.isOpenMaxStorageQuotaWarning=!1,this.ExtraModule=[J],this.deleteConfirm=new V.a("Confirm Delete","modal-md",!1),this.warningDialog=new V.a("Error","modal-md",!1)}return e.prototype.ngOnInit=function(){var e=this;this._activatedRoute.params.subscribe(function(t){if(t&&t.id){e.policyId=t.id,e._data.changeLoadStatus(!0),e._policy.getPolicyById(t.id).then(function(t){e.policyDetail=t,e.useExisting=t.useExisting,e.originalPolicyInput=t.keyValues,e.templateHTML=e.convertHTML(t.policyTemplate,t.keyValues),e.readyToLoad=!0,e._fileUploadService.getRemainingQuota().then(function(t){e.remainingQuota=t,e._data.changeLoadStatus(!1)})});var n={type:H.a.Policy,referId:t.id};e._historyService.getHistory(n).then(function(t){e.policyHistory=t,e.policyHistory.forEach(function(e){var t="";e.owner&&(t+=e.owner.charAt(0)),e.lastName&&(t+=e.lastName.charAt(0)),e.avatarName=t})}),e._fileUploadService.isHascontent(t.id,H.a.Policy).then(function(t){e.isHasContent=t}),e._userService.GetUserStatus().then(function(t){e.canAccessProFeature=3==t.status||8==t.status})}}),this._fileUploadService.getUploadedFile(x.a.POLICY_FILE,this.policyId).then(function(t){t&&null!=t.fileName&&(e.isUploaded=!0,e.uploadedFile=t,e.fileName=t.fileName)}),this.uploader=new U.FileUploader({url:x.a.UPLOAD_FILE_URL,authToken:"Bearer "+localStorage.getItem("accessToken"),isHTML5:!0,maxFileSize:x.a.MAX_FILE_SIZE_TO_UPLOAD}),this.uploader.onAfterAddingFile=function(t){e.uploader.queue.length>1&&e.uploader.removeFromQueue(e.uploader.queue[0]),e.uploader.queue[0].file.size>=e.remainingQuota&&(e.isOpenMaxStorageQuotaWarning=!0,e.warningDialog.visible=!0,e.uploader.removeFromQueue(e.uploader.queue[0]))},this.uploader.onWhenAddingFileFailed=function(t,n){"fileSize"==n.name&&e._translate.get("General.FileTooBig").subscribe(function(t){return e._alert.error(t)})},this.uploader.onBuildItemForm=function(t,n){n.append("fileType",x.a.POLICY_FILE),n.append("refId",e.policyId)},this.uploader.onProgressItem=function(){e._data.changeLoadStatus(!0)},this.uploader.onCompleteItem=function(t,n,r,a){e.remainingQuota-=t.file.size,e._translate.get("Policy.UploadSuccessfully").subscribe(function(t){return e._alert.success(t)}),e._fileUploadService.getUploadedFile(x.a.POLICY_FILE,e.policyId).then(function(t){t&&null!=t.fileName&&(e.isUploaded=!0,e.uploadedFile=t,e.fileName=t.fileName,e._data.changeLoadStatus(!1))})};var t=localStorage.getItem("plan")?localStorage.getItem("plan").split(","):null;t&&t.filter(function(e){return"trial"==e}).length>0&&(this.isTrial=!0)},e.prototype.clickLock=function(){this.canAccessProFeature?this.policyDetail.isLocked=!this.policyDetail.isLocked:(this.isOpenMaxStorageQuotaWarning=!1,this.warningDialog.visible=!0)},e.prototype.useExistingChange=function(){this.policyDetail.useExisting=this.useExisting},e.prototype.convertHTML=function(e,t){for(var n,r=/\[\[(.*?)\]\]/g,a=/\#\#(.*?)\#\#/g,s=/\@\@(.*?)\@\@/g,o=""+e,i=function(){var e=n[1].split(":"),a=t.find(function(t){return t.key==e[0]});n.index===r.lastIndex&&r.lastIndex++,o=o.replace(n[0],'<my-input inputName="'+e[0]+'" inputValue="'+(a?a.value:e[1]?e[1]:"")+'"></my-input>')};null!==(n=r.exec(e));)i();for(var l=function(){var e=n[1].split(":"),r=t.find(function(t){return t.key==e[0]});n.index===a.lastIndex&&a.lastIndex++,o=o.replace(n[0],'<my-textarea inputName="'+e[0]+'" inputValue="'+(r?r.value:e[1]?e[1]:"")+'"></my-textarea>')};null!==(n=a.exec(e));)l();for(;null!==(n=s.exec(e));)n.index===a.lastIndex&&a.lastIndex++,o=o.replace(n[0],'<span class="prefill-data">'+n[1]+"</span>");return o},e.prototype.save=function(e){var t=this;return this._data.changeLoadStatus(!0),new Promise(function(n,r){t.customPolicyInput=t._data.getShareContentEditor(),t.customPolicyInput.forEach(function(e){var n=t.originalPolicyInput.find(function(t){return t.key==e.key});n?n.value=e.value:t.originalPolicyInput.push(e)}),null==t.originalPolicyInput&&t.policyDetail.useExisting&&(t._alert.error("Update content before save"),t._data.changeLoadStatus(!1),r(!1)),t.policyDetail.keyValues=t.originalPolicyInput,t._policy.updatePolicy(t.policyDetail).then(function(r){e||(t._router.navigate(["gdpr","management","policy"]),t._data.changeLoadStatus(!1)),n(!0)})})},e.prototype.download=function(){var e=this;this._data.changeLoadStatus(!0),this._fileUploadService.downloadFile(this.uploadedFile.fileId).then(function(t){var n=document.createElement("a");n.href=window.URL.createObjectURL(t),n.download=e.fileName,n.click(),e._data.changeLoadStatus(!1)})},e.prototype.delete=function(){var e=this;this._data.changeLoadStatus(!0),this.deleteConfirm.visible=!1,this._fileUploadService.deleteFile(this.uploadedFile.fileId).then(function(t){t&&(e.isUploaded=!1,e.uploadedFile=null,e.fileName="",e._translate.get("Policy.DeleteSuccessfully").subscribe(function(t){return e._alert.success(t)}),e._fileUploadService.getRemainingQuota().then(function(t){e.remainingQuota=t,e._data.changeLoadStatus(!1)}))})},e.prototype.confirmDelete=function(){this.deleteConfirm.visible=!0},e.prototype.closeDelete=function(){this.deleteConfirm.visible=!1},e.prototype.downloadPDF=function(){var e=this;this._data.changeLoadStatus(!0),this.canAccessProFeature?this.save(!0).then(function(t){t&&e._fileUploadService.downloadAsPdf(e.policyDetail.policyId,H.a.Policy).then(function(t){var n=document.createElement("a");document.body.appendChild(n),n.href=window.URL.createObjectURL(t),n.download="policy.pdf",n.click(),e._data.changeLoadStatus(!1)})}):(this.isOpenMaxStorageQuotaWarning=!1,this.warningDialog.visible=!0,this._data.changeLoadStatus(!1))},e.prototype.goToSubscription=function(){window.location.href="/billing-plan"},e=Z([Object(r.Component)({template:n("xNU5"),styles:[n("EnLU")]}),K("design:paramtypes",[i.c,h.a,f.ActivatedRoute,j.a,y.a,M.a,f.Router,G.a,p.a])],e)}(),$=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},ee=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},te=this&&this.__param||function(e,t){return function(n,r){t(n,r,e)}},ne=function(){function e(e,t){this.dialogRef=e,this.data=t}return e.prototype.ngOnInit=function(){this.counterpartEmail=this.data.counterpartEmail},e=$([Object(r.Component)({template:n("VNoG")}),te(1,Object(r.Inject)(I.e)),ee("design:paramtypes",[I.g,Object])],e)}(),re=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},ae=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},se=function(){function e(e,t,n,r,a,s,o,i,l,c){this._translate=e,this._data=t,this._attachmentService=n,this._alert=r,this._dataprocessor=a,this._activatedRoute=s,this._router=o,this._historyService=i,this._userService=l,this.sendCounterpartDialog=c,this.isOpenMaxStorageQuotaWarning=!1,this.readyToLoad=!1,this.originalDataInput=[],this.customDataInput=[],this.useExisting=!1,this.counterpartStatus=!1,this.canAccessProFeature=!1,this.ExtraModule=[J],this.deleteConfirm=new V.a("Confirm Delete","modal-md",!1),this.warningDialog=new V.a("Please upgrade your plan","modal-md",!1)}return e.prototype._getDataProcessor=function(e){var t=this;this._data.changeLoadStatus(!0),this._dataprocessor.getDataprocessorById(this.dataprocessorId).then(function(n){console.log(n),t.dataprocessorDetail=n,t.useExisting=n.useExisting,t.originalDataInput=n.keyValues,t.templateHTML=t.convertHTML(n.dataProcessorTemplate,n.keyValues),t.readyToLoad=!0,t._data.changeLoadStatus(!1),e&&t._dataprocessor.updateCounterpartStatus(n.isCounterpartOk),t._attachmentService.getRemainingQuota().then(function(e){t.remainingQuota=e,t._data.changeLoadStatus(!1)})});var n={type:H.a.Processor,referId:this.dataprocessorId};this._historyService.getHistory(n).then(function(e){t.dataProcessorhistory=e,t.dataProcessorhistory.forEach(function(e){var t="";e.owner&&(t+=e.owner.charAt(0)),e.lastName&&(t+=e.lastName.charAt(0)),e.avatarName=t})})},e.prototype.ngOnInit=function(){var e=this;this._activatedRoute.params.subscribe(function(t){t&&t.id&&(e.dataprocessorId=t.id,e._getDataProcessor(!0)),e._attachmentService.isHascontent(t.id,H.a.Processor).then(function(t){e.isHasContent=t}),e._userService.GetUserStatus().then(function(t){e.canAccessProFeature=3==t.status||8==t.status})}),this._dataprocessor.getCounterpartStatus.subscribe(function(t){e.counterpartStatus=t,e.counterpartStatus&&e._getDataProcessor(!1)}),this._attachmentService.getUploadedFile(x.a.DATAPROCESSOR_FILE,this.dataprocessorId).then(function(t){t&&null!=t.fileName&&(e.isUploaded=!0,e.uploadedFile=t,e.fileName=t.fileName)}),this.uploader=new U.FileUploader({url:x.a.UPLOAD_FILE_URL,authToken:"Bearer "+localStorage.getItem("accessToken"),isHTML5:!0,maxFileSize:x.a.MAX_FILE_SIZE_TO_UPLOAD}),this.uploader.onAfterAddingFile=function(t){e.uploader.queue.length>1&&e.uploader.removeFromQueue(e.uploader.queue[0]),e.uploader.queue[0].file.size>=e.remainingQuota&&(e.isOpenMaxStorageQuotaWarning=!0,e.warningDialog.visible=!0,e.uploader.removeFromQueue(e.uploader.queue[0]))},this.uploader.onWhenAddingFileFailed=function(t,n){"fileSize"==n.name&&e._translate.get("General.FileTooBig").subscribe(function(t){return e._alert.error(t)})},this.uploader.onBuildItemForm=function(t,n){n.append("fileType",x.a.DATAPROCESSOR_FILE),n.append("refId",e.dataprocessorId)},this.uploader.onProgressItem=function(){e._data.changeLoadStatus(!0)},this.uploader.onCompleteItem=function(t,n,r,a){e._translate.get("Dataprocess.UploadSuccessfully").subscribe(function(t){return e._alert.success(t)}),e._attachmentService.getUploadedFile(x.a.DATAPROCESSOR_FILE,e.dataprocessorId).then(function(t){t&&null!=t.fileName&&(e.isUploaded=!0,e.uploadedFile=t,e.fileName=t.fileName,e._data.changeLoadStatus(!1))})},(localStorage.getItem("plan")?localStorage.getItem("plan").split(","):null).filter(function(e){return"trial"==e}).length>0&&(this.isTrial=!0)},e.prototype.clickLock=function(){var e=this;this.canAccessProFeature?(this.dataprocessorDetail.isLocked=!this.dataprocessorDetail.isLocked,!this.dataprocessorDetail.isLocked&&this.dataprocessorDetail.lastSentToCounterpart&&this._translate.get("Dataprocess.UnlockAfterSendCounterpart").subscribe(function(t){return e._alert.success(t)})):(this.isOpenMaxStorageQuotaWarning=!1,this.warningDialog.visible=!0)},e.prototype.useExistingChange=function(){this.dataprocessorDetail.useExisting=this.useExisting},e.prototype.counterpartClick=function(){this._dataprocessor.setSharedDataId(this.dataprocessorDetail.dataProcessorId),this._router.navigate(["counterpart"],{relativeTo:this._activatedRoute})},e.prototype.save=function(e){var t=this;return this._data.changeLoadStatus(!0),new Promise(function(n,r){t.customDataInput=t._data.getShareContentEditor(),t.customDataInput.forEach(function(e){var n=t.originalDataInput.find(function(t){return t.key==e.key});n?n.value=e.value:t.originalDataInput.push(e)}),null==t.originalDataInput&&t.dataprocessorDetail.useExisting&&(t._alert.error("Update content before save"),t._data.changeLoadStatus(!1),r(!1)),t.dataprocessorDetail.keyValues=t.originalDataInput,t._dataprocessor.updateDataprocessor(t.dataprocessorDetail).then(function(r){e||(t._router.navigate(["gdpr","management","dataprocessor"]),t._data.changeLoadStatus(!1)),n(!0)})})},e.prototype.convertHTML=function(e,t){for(var n,r=/\[\[(.*?)\]\]/g,a=/\#\#(.*?)\#\#/g,s=/\*\*(.*?)\*\*/g,o=/\@\@(.*?)\@\@/g,i=""+e,l=function(){var e=n[1].split(":"),a=t.find(function(t){return t.key==e[0]});n.index===r.lastIndex&&r.lastIndex++,i=i.replace(n[0],'<my-input inputName="'+e[0]+'" inputValue="'+(a?a.value:e[1]?e[1]:"")+'"></my-input>')};null!==(n=r.exec(e));)l();for(var c=function(){var e=n[1].split(":"),r=t.find(function(t){return t.key==e[0]});n.index===a.lastIndex&&a.lastIndex++,i=i.replace(n[0],'<my-textarea inputName="'+e[0]+'" inputValue="'+(r?r.value:e[1]?e[1]:"")+'"></my-textarea>')};null!==(n=a.exec(e));)c();for(;null!==(n=s.exec(e));)n.index===a.lastIndex&&a.lastIndex++,i=i.replace(n[0],'<span class="unfilled-data">&nbsp;</span>');for(;null!==(n=o.exec(e));)n.index===a.lastIndex&&a.lastIndex++,i=i.replace(n[0],'<span class="prefill-data">'+n[1]+"</span>");return i},e.prototype.download=function(){var e=this;this._data.changeLoadStatus(!0),this._attachmentService.downloadFile(this.uploadedFile.fileId).then(function(t){var n=document.createElement("a");n.href=window.URL.createObjectURL(t),n.download=e.fileName,n.click(),e._data.changeLoadStatus(!1)})},e.prototype.confirmDelete=function(){this.deleteConfirm.visible=!0},e.prototype.closeDelete=function(){this.deleteConfirm.visible=!1},e.prototype.delete=function(){var e=this;this._data.changeLoadStatus(!0),this._attachmentService.deleteFile(this.uploadedFile.fileId).then(function(t){t&&(e.deleteConfirm.visible=!1,e.isUploaded=!1,e.uploadedFile=null,e.fileName="",e._attachmentService.getRemainingQuota().then(function(t){e.remainingQuota=t,e._data.changeLoadStatus(!1)}))})},e.prototype.downloadPDF=function(){var e=this;this._data.changeLoadStatus(!0),this.canAccessProFeature?this.save(!0).then(function(t){t&&e._attachmentService.downloadAsPdf(e.dataprocessorDetail.dataProcessorId,H.a.Processor).then(function(t){var n=document.createElement("a");document.body.appendChild(n),n.href=window.URL.createObjectURL(t),n.download="dataprocessor.pdf",n.click(),e._data.changeLoadStatus(!1)})}):(this.isOpenMaxStorageQuotaWarning=!1,this.warningDialog.visible=!0,this._data.changeLoadStatus(!1))},e.prototype.goToSubscription=function(){window.location.href="/billing-plan"},e.prototype.sendToCounterpart=function(){var e=this;if(!this.canAccessProFeature)return this.isOpenMaxStorageQuotaWarning=!1,void(this.warningDialog.visible=!0);this.dataprocessorDetail.counterpartEmail?this.dataprocessorDetail.isLocked?this.sendCounterpartDialog.open(ne,{width:"650px",data:{counterpartEmail:this.dataprocessorDetail.counterpartEmail}}).afterClosed().subscribe(function(t){t&&(e._data.changeLoadStatus(!0),e._dataprocessor.senDataprocessor(e.dataprocessorDetail.dataProcessorId).then(function(){e._translate.get("Dataprocess.SentSucessfully").subscribe(function(t){return e._alert.success(t)}),e.dataprocessorDetail.lastSentToCounterpart=new Date,e._data.changeLoadStatus(!1)}))}):this._translate.get("Dataprocess.MustBeLocked").subscribe(function(t){return e._alert.error(t)}):this._translate.get("Dataprocess.NoCounterpartEmail").subscribe(function(t){return e._alert.error(t)})},e=re([Object(r.Component)({template:n("2zCX"),styles:[n("EnLU")]}),ae("design:paramtypes",[i.c,h.a,j.a,M.a,S,f.ActivatedRoute,f.Router,G.a,p.a,I.f])],e)}(),oe=n("hvaS"),ie=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},le=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ce=function(){function e(e,t,n,r,a,o,i,l){var c=this;this._formBuilder=e,this._companyTagService=t,this._translate=n,this._data=r,this._alert=a,this._router=o,this._dataprocessor=i,this._userService=l,this.storageData={subCompanys:[],overallResponsible:null,signaturePersonInfomation:null},this.initSubCompany=function(e){return c._formBuilder.group({name:[e.name,s.Validators.required],registration:[e.registration],companyAddress:[e.companyAddress],zipCode:[e.zipCode],city:[e.city],country:[e.country]})},this.initUserInfomation=function(e){return c._formBuilder.group({title:[e&&e.title?e.title:null],firstName:[e&&e.firstName?e.firstName:null],lastName:[e&&e.lastName?e.lastName:null],phone:[e&&e.phone?e.phone:null],email:[e&&e.email?e.email:null,s.Validators.compose([s.Validators.pattern(x.a.EMAIL_REGEX_VALIDATE)])]})}}return e.prototype.ngOnInit=function(){var e=this;this._data.changeLoadStatus(!0),this.dataprocessorId=this._dataprocessor.getSharedDataId(),this.subCompanies=[],this._companyTagService.getTagsByCategory(x.a.CATEGORY_ALL_COUNTRIES,!1).then(function(t){return e.defineCountry=e._convertResponseToOptions(t)}),this._userService.getLanguages().then(function(t){e.defineLanguage=t.map(function(e){return{label:e.languageName,value:e.languageId.toString()}})}),this.dataprocessorId?(this._dataprocessor.getCounterpart(this.dataprocessorId).then(function(t){console.log(t),e.firstData=t,e.formInit(e.firstData),e._data.changeLoadStatus(!1),e.ready=!0}),this.formInit(this.firstData)):this._router.navigate(["gdpr","management","dataprocessor-management",this.dataprocessorId])},e.prototype.formInit=function(e){var t=this;this.subCompanyCtrl=this._formBuilder.array([]),void 0!=e&&null!=e.subsidiaries&&e.subsidiaries.forEach(function(e){t.addSubCompany(e)}),void 0!=e&&null!=e.contactPerson?this.overallResponsibleCtrl=this.initUserInfomation(e.contactPerson):this.overallResponsibleCtrl=this.initUserInfomation({}),void 0!=e&&null!=e.signaturePerson?this.signaturePersonCtrl=this.initUserInfomation(e.signaturePerson):this.signaturePersonCtrl=this.initUserInfomation({}),this.companyDetailCtrl=this._formBuilder.group({registration:[e&&e.counterpartDetail?e.counterpartDetail.registration:null],vatRegistrationNo:[e&&e.counterpartDetail?e.counterpartDetail.vatRegistrationNo:null],companyAddress:[e&&e.counterpartDetail?e.counterpartDetail.companyAddress:null],zipCode:[e&&e.counterpartDetail?e.counterpartDetail.zipCode:null],city:[e&&e.counterpartDetail?e.counterpartDetail.city:null],country:[e&&e.counterpartDetail?e.counterpartDetail.country:null,s.Validators.required]}),this.counterpartInfoForm=this._formBuilder.group({companyName:[e?e.companyName:null],language:[e?e.language:null,s.Validators.required],counterpartDetail:this.companyDetailCtrl,isHasSub:[!!e&&e.isHasSub],subsidiaries:this.subCompanyCtrl,contactPerson:this.overallResponsibleCtrl,isSignature:[!!e&&e.isSignature],signaturePerson:this.signaturePersonCtrl}),this.counterpartInfoForm.controls.isSignature.value||this.counterpartInfoForm.removeControl("signaturePerson")},e.prototype.addSubCompany=function(e){this.subCompanyCtrl.push(this.initSubCompany(e))},e.prototype.removeSubCompany=function(e){this.subCompanyCtrl.removeAt(e)},e.prototype.removeAllSubCompany=function(){for(var e=this.subCompanyCtrl.controls.length,t=0;t<e;t++)this.removeSubCompany(0)},e.prototype.hasSubCompanyChange=function(){var e=this,t=this.counterpartInfoForm.controls.isHasSub.value,n=0===this.subCompanyCtrl.length;if(t)n?this.subCompanyCtrl.push(this.initSubCompany({})):this.storageData.subCompanys.forEach(function(t){e.subCompanyCtrl.push(e.initSubCompany(t))});else{var r=this.counterpartInfoForm.controls.subsidiaries.value;Object.assign(this.storageData,{subCompanys:r}),this.removeAllSubCompany()}},e.prototype.isSignaturechange=function(){if(this.counterpartInfoForm.controls.isSignature.value)this.counterpartInfoForm.removeControl("signaturePerson"),this.signaturePersonCtrl=this.initUserInfomation(this.storageData.signaturePersonInfomation),this.counterpartInfoForm.addControl("signaturePerson",this.signaturePersonCtrl);else{var e=this.counterpartInfoForm.controls.signaturePerson.value;Object.assign(this.storageData,{signaturePersonInfomation:e}),this.counterpartInfoForm.removeControl("signaturePerson")}},e.prototype.onSubmit=function(e){var t=this;this.counterpartInfoForm.valid?this.saveGDPRInfo(e).then(function(){t._router.navigate(["gdpr","management","dataprocessor-management",t.dataprocessorId]),t._dataprocessor.updateCounterpartStatus(!0)}):(this.validateAllForm(this.counterpartInfoForm),this._translate.get("Counterpart.ValidationError").subscribe(function(e){return t._alert.error(e)}))},e.prototype.saveGDPRInfo=function(e){var t=this;return new Promise(function(n,r){t._data.changeLoadStatus(!0),e.dataProcessorId=t.dataprocessorId,t._dataprocessor.updateCounterpart(e).then(function(e){return t._data.changeLoadStatus(!1),t._translate.get("General.SavedSucess").subscribe(function(e){return t._alert.success(e)}),n()})})},e.prototype.validateAllForm=function(e){var t=this;Object.keys(e.controls).forEach(function(n){var r=e.get(n);(r instanceof s.FormControl&&r.markAsTouched({onlySelf:!0}),r instanceof s.FormGroup&&t.validateAllForm(r),r instanceof s.FormArray)&&r.controls.forEach(function(e){e instanceof s.FormGroup&&t.validateAllForm(e)})})},e.prototype._convertResponseToOptions=function(e){return e.map(function(e){return{label:e.tagName,value:e.tagId}})},e=ie([Object(r.Component)({template:n("srdZ"),styles:[n("EnLU")],animations:[Object(oe.a)()],host:{"[@slideInOutTransition]":""}}),le("design:paramtypes",[s.FormBuilder,m.a,i.c,h.a,M.a,f.Router,S,p.a])],e)}(),de=n("hyoz"),pe=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},ue=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},me=function(){function e(e,t,n,r){this._translate=e,this._data=t,this._router=n,this._riskService=r,this.isReady=!1}return e.prototype.ngOnInit=function(){var e=this;this._data.changeLoadStatus(!0),this._riskService.getAllRisks().then(function(t){e.listRisks=t,e.listRisks.forEach(function(e){e.taskNonSchedule=0,e.isShowTask=!1,e.tasks.forEach(function(t){1==t.taskStatus&&(e.taskNonSchedule=e.taskNonSchedule+1)})}),e.setStatusColor(e.listRisks),e.isReady=!0,e._data.changeLoadStatus(!1)})},e.prototype.toggleTask=function(e){e.isShowTask=!e.isShowTask},e.prototype.setStatusColor=function(e){e.forEach(function(e){e.riskLikelihood?e.riskLikelihood+e.riskImpact<=4?e.color="green":e.riskLikelihood+e.riskImpact<9?e.color="yellow":e.color="red":e.color="blue"})},e.prototype.addNew=function(){this._router.navigate(["gdpr","management","risk-management"])},e.prototype.goDetail=function(e){this._router.navigate(["gdpr","management","risk-management",e])},e=pe([Object(r.Component)({template:n("UU5V"),styles:[n("EnLU")]}),ue("design:paramtypes",[i.c,h.a,f.Router,de.a])],e)}(),fe=n("Gvdl"),he=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},ve=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ge=function(){function e(e,t,n,r,a,s,o,i){this._translate=e,this._data=t,this._alert=n,this._router=r,this._formBuilder=a,this._activatedRoute=s,this._riskService=o,this._userService=i,this.isReady=!1,this.isAddNew=!1,this.assessment=[{row:1,cols:[{id:1,color:null,active:!1},{id:2,color:null,active:!1},{id:3,color:null,active:!1},{id:4,color:null,active:!1},{id:5,color:null,active:!1},{id:6,color:null,active:!1}]},{row:2,cols:[{id:1,color:null,active:!1},{id:2,color:null,active:!1},{id:3,color:null,active:!1},{id:4,color:null,active:!1},{id:5,color:null,active:!1},{id:6,color:null,active:!1}]},{row:3,cols:[{id:1,color:null,active:!1},{id:2,color:null,active:!1},{id:3,color:null,active:!1},{id:4,color:null,active:!1},{id:5,color:null,active:!1},{id:6,color:null,active:!1}]},{row:4,cols:[{id:1,color:null,active:!1},{id:2,color:null,active:!1},{id:3,color:null,active:!1},{id:4,color:null,active:!1},{id:5,color:null,active:!1},{id:6,color:null,active:!1}]},{row:5,cols:[{id:1,color:null,active:!1},{id:2,color:null,active:!1},{id:3,color:null,active:!1},{id:4,color:null,active:!1},{id:5,color:null,active:!1},{id:6,color:null,active:!1}]},{row:6,cols:[{id:1,color:null,active:!1},{id:2,color:null,active:!1},{id:3,color:null,active:!1},{id:4,color:null,active:!1},{id:5,color:null,active:!1},{id:6,color:null,active:!1}]}],this.listTasks=[{id:"1",name:"Task 1",selected:!1},{id:"2",name:"Task 2",selected:!1},{id:"3",name:"Task 3",selected:!1},{id:"4",name:"Task 4",selected:!1},{id:"5",name:"Task 5",selected:!1}]}return e.prototype.ngOnInit=function(){var e=this;this._data.changeLoadStatus(!0);var t=new fe.Subject,n=t.asObservable();t.subscribe(function(t){t.getAllRisksType&&t.getAllRisksOrganization&&t.getUsersInCompany&&t.getRiskDetail?(e.formInit(e.riskDetailData),e._data.changeLoadStatus(!1),e.isReady=!0):console.log("loading...")});var r=function(e){var r=Object.assign(n,e);t.next(r)};this._riskService.getAllRisksType().then(function(t){e.listRiskTypeOptions=t,r({getAllRisksType:!0})}),this._riskService.getAllRisksOrganization().then(function(t){e.listRiskOrganizationOptions=t,r({getAllRisksOrganization:!0})}),this._userService.getUsersInCompany().then(function(t){var n=t;n.forEach(function(e){e.value=e.value.toLowerCase()}),e.defineRiskOwner=n,r({getUsersInCompany:!0})}),this._activatedRoute.params.subscribe(function(t){t.id?e._riskService.getRiskDetail(t.id).then(function(t){e.riskDetailData=t,e.riskDetailData.taskNonSchedule=0,e.riskDetailData.assosciatedTask.forEach(function(t){1==t.taskStatus&&(e.riskDetailData.taskNonSchedule=e.riskDetailData.taskNonSchedule+1)}),r({getRiskDetail:!0})}):(e.isAddNew=!0,r({getRiskDetail:!0}))})},e.prototype.formInit=function(e){this.riskManagementForm=this._formBuilder.group({riskName:[e&&e.riskName?e.riskName:null],riskDescription:[e&&e.riskDescription?e.riskDescription:null],riskLegel:[e&&e.riskLegel?e.riskLegel:null],riskOwnerId:[e&&e.riskOwnerId?e.riskOwnerId:null],riskResponsibleId:[e&&e.riskResponsibleId?e.riskResponsibleId:null],riskType:[e&&e.riskTypeValue?e.riskTypeValue:null],organizationLevel:[e&&e.organizationLevelValue?e.organizationLevelValue:null],isPublished:[e&&e.isPublished?e.isPublished:null]}),this.assessment.forEach(function(e){e.cols.forEach(function(t){e.row+t.id<=4?t.color="green":e.row+t.id<9?t.color="yellow":t.color="red"})}),this.assessment=this.assessment.reverse(),e&&e.riskLikelihood&&e.riskImpact&&this.clickRiskAssessment(e.riskImpact,e.riskLikelihood)},e.prototype.selectTask=function(e){this.listTasks.find(function(t){return t.id==e}).selected=!0},e.prototype.unselectTask=function(e){this.listTasks.find(function(t){return t.id==e}).selected=!1},e.prototype.clickRiskAssessment=function(e,t){this.impact=e,this.likelihood=t;var n=this.assessment.find(function(t){return t.row==e}).cols.find(function(e){return e.id==t});this.assessment.forEach(function(e){e.cols.forEach(function(e){e.active=!1})}),n.active=!0},e.prototype.onSubmit=function(e){var t=this;this._data.changeLoadStatus(!0),e.riskImpact=this.impact?this.impact:null,e.riskLikelihood=this.likelihood?this.likelihood:null,this.isAddNew?this._riskService.addNewRisk(e).then(function(e){t._translate.get("Management.SavedSuccessfully").subscribe(function(e){t._alert.success(e)}),t._router.navigate(["gdpr","management","risk"]),t._data.changeLoadStatus(!1)}):(e.riskId=this.riskDetailData.riskId,this._riskService.updateRisk(e).then(function(e){t._translate.get("Management.SavedSuccessfully").subscribe(function(e){t._alert.success(e)}),t._router.navigate(["gdpr","management","risk"]),t._data.changeLoadStatus(!1)}))},e=he([Object(r.Component)({template:n("x09w"),styles:[n("EnLU")]}),ve("design:paramtypes",[i.c,h.a,M.a,f.Router,s.FormBuilder,f.ActivatedRoute,de.a,p.a])],e)}(),be=n("1chu"),ye=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},_e=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},ke=this&&this.__param||function(e,t){return function(n,r){t(n,r,e)}},Ce=function(){function e(e,t,n,r,a,s,o,i,l){this._translate=e,this._data=t,this._router=n,this._activatedRoute=r,this._taskService=a,this._userService=s,this._historyService=o,this._dialogRef=i,this.data=l,this.readyToLoad=!1,this.defineTaskStatus=[{label:"New",value:"1"},{label:"Schedule",value:"2"},{label:"In progress",value:"3"},{label:"Pending review",value:"4"},{label:"Reject",value:"5"},{label:"Done",value:"6"}],this.listHistory=[]}return e.prototype.ngOnInit=function(){var e=this;this._taskService.getTaskDetail(this.data.taskId).then(function(t){e.taskDetail=t,0==t.taskStatus&&(t.taskStatus=1),e.taskDetail.taskStatus=t.taskStatus.toString(),e.readyToLoad=!0}),this._userService.getUsersInCompany().then(function(t){var n=t;n.forEach(function(e){e.value=e.value.toLowerCase()}),e.defineUserInCompany=n});var t={type:H.a.Task,referId:this.data.taskId};this._historyService.getHistory(t).then(function(t){e.listHistory=t})},e.prototype.clickSave=function(){var e=this,t={reload:!0};this._taskService.updateTaskDetail(this.taskDetail).then(function(n){e._dialogRef.close(t)})},e.prototype.clickCancel=function(){this._dialogRef.close({reload:!1})},e=ye([Object(r.Component)({template:n("1BCF")}),ke(8,Object(r.Inject)(I.e)),_e("design:paramtypes",[i.c,h.a,f.Router,f.ActivatedRoute,be.a,p.a,G.a,I.g,Object])],e)}(),De=n("ANmO"),xe=n("4D08"),Pe=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},we=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Se=function(){function e(e,t,n,r,a,s,o){this._translate=e,this._data=t,this._router=n,this._taskService=r,this._userService=a,this._alert=s,this._dialog=o,this.taskFilter={taskTitle:"",processId:null,isControl:null,taskPerformerId:null},this.checkboxTaskFilter=!0,this.checkboxControlFilter=!0,this.listProcesses=[],this.listTasks=[],this.defineUserInCompany=[]}return e.prototype.ngOnInit=function(){var e=this;this._taskService.getProcessOptions().then(function(t){e.listProcesses=t,console.log("process",t)}),this._taskService.getAllTask().then(function(t){e.listTasks=t,console.log("tasks",t)}),this._userService.getUsersInCompany().then(function(t){var n=t;n.forEach(function(e){e.value=e.value.toLowerCase()}),e.defineUserInCompany=n})},e.prototype.checkboxClick=function(){this.checkboxTaskFilter&&this.checkboxControlFilter&&(this.taskFilter.isControl=null),this.checkboxTaskFilter||this.checkboxControlFilter||(this.taskFilter.isControl="false"),this.checkboxTaskFilter&&!this.checkboxControlFilter&&(this.taskFilter.isControl=!1),!this.checkboxTaskFilter&&this.checkboxControlFilter&&(this.taskFilter.isControl=!0)},e.prototype.processesBarClick=function(e){this.taskFilter.processId=e},e.prototype.changeResponsible=function(e,t){var n={type:H.c.Performer,userId:t.value,taskId:e.taskId};console.log(n),this._taskService.updateAssignee(n).then(function(e){console.log(e)})},e.prototype.isRejected=function(e){return e==H.b.Rejected},e.prototype.editTask=function(e){this._router.navigate(["gdpr","tasks","edit",e])},e.prototype.openPerformDialog=function(e){this._dialog.open(De.a,{panelClass:"task-popup",data:{taskId:e,isReadOnly:!0}})},e.prototype.openReviewDialog=function(e){this._dialog.open(xe.a,{panelClass:"task-popup",data:{taskId:e,isReadOnly:!0}})},e.prototype.openDetailDialog=function(e){this._dialog.open(Ce,{panelClass:"task-popup",data:{taskId:e,isReadOnly:!0}})},e=Pe([Object(r.Component)({template:n("cySz"),styles:[n("EnLU")]}),we("design:paramtypes",[i.c,h.a,f.Router,be.a,p.a,M.a,I.f])],e)}(),Ie=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},Re=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Fe=function(){function e(e,t,n,r,a){this._translate=e,this._data=t,this._router=n,this._activatedRoute=r,this.changeDetectionRef=a,this.rlaSafe=!1}return e.prototype.ngOnInit=function(){},e.prototype.ngAfterViewInit=function(){this.rlaSafe=!0,this.changeDetectionRef.detectChanges()},e=Ie([Object(r.Component)({template:n("wWUL"),styles:[n("EnLU")]}),Re("design:paramtypes",[i.c,h.a,f.Router,f.ActivatedRoute,r.ChangeDetectorRef])],e)}(),Te=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},Ae=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ee=function(){function e(e){this._http=e,this.sharedVendorData=new D.b,this.getShareVendorData=this.sharedVendorData.asObservable()}return e.prototype.getAllProcesses=function(){var e=x.a.GET_ALL_PROCESSES;return this._http.get(e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getPersonGroupsByProcess=function(e){var t=x.a.GET_PERSONGROUPS_BY_PROCESS+"?processTagId="+e;return this._http.get(t).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getAllPurposes=function(e,t){var n=x.a.GET_ALL_PURPOSES+"?processTagId="+e+"&personTypes="+t;return this._http.get(n).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.savePurpose=function(e){var t=x.a.ADD_PURPOSE;return this._http.post(t,e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getAllPurposesOf3rdParty=function(e,t){var n=x.a.GET_VENDOR_LIST+"?processTagId="+e+"&personTypeId="+t;return this._http.get(n).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getVendorCategories=function(){return this._http.get(x.a.GET_VENDOR_CATEGORY).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.getVendorSalesGroup=function(){return this._http.get(x.a.GET_VENDOR_SALES_GROUP).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.addNewVendor=function(e){return this._http.post(x.a.ADD_VENDOR,e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.deleteVendor=function(e){var t=""+x.a.DELETE_VENDOR+e;return this._http.post(t,{}).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.saveVendorsOnPurpose=function(e){return this._http.post(x.a.SAVE_VENDOR_ON_PURPOSE,e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.updateVendor=function(e){return this._http.post(x.a.UPDATE_VENDOR,e).toPromise().then(function(e){return e}).catch(this.handleError)},e.prototype.setSharedVendorData=function(e){this._sharedVendorData=e},e.prototype.getSharedVendorData=function(){return this._sharedVendorData},e.prototype.changeShareVendorData=function(e){this.sharedVendorData.next(e)},e.prototype.handleError=function(e){return Promise.reject(e.message||e)},e=Te([Object(r.Injectable)(),Ae("design:paramtypes",[o.HttpClient])],e)}(),Ne=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},Oe=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Le=function(){function e(e,t,n,r,a){this._translate=e,this._data=t,this._router=n,this._alert=r,this._persondataService=a,this.purposeModel={deletionJustifications:[],purposeJustification:"",processTagId:0,purposeTagId:0,personTypeTagId:0}}return e.prototype.ngOnInit=function(){var e=this;this._data.changeLoadStatus(!0),this._persondataService.getAllProcesses().then(function(t){e.allProcesses=t,e.selectProcess(e.allProcesses[0])})},e.prototype.selectProcess=function(e){var t=this;this.allPurposes=void 0,this.selectedProcess=e,this._persondataService.getPersonGroupsByProcess(e.value).then(function(e){t.allPersonGroups=e,t.selectPersonGroup(t.allPersonGroups[0])})},e.prototype.selectPersonGroup=function(e){var t=this;this.allPurposes=void 0,this.selectedPersonGroup=e,this._persondataService.getAllPurposes(this.selectedProcess.value,this.selectedPersonGroup.value).then(function(e){t.allPurposes=e,t.allPurposes[0]&&t.selectPurpose(t.allPurposes[0]),t._data.changeLoadStatus(!1)})},e.prototype.selectPurpose=function(e){this.selectedPurpose=e,this.purposeModel={deletionJustifications:this.selectedPurpose.dataTypes.map(function(e){return{dataTypeTagId:e.dataTypeId,justification:e.deletionPolicyJustification}}),purposeJustification:this.selectedPurpose.purposeJustification,processTagId:this.selectedProcess.value,purposeTagId:this.selectedPurpose.purposeTagId,personTypeTagId:this.selectedPersonGroup.value}},e.prototype.savePurpose=function(){var e=this;this._data.changeLoadStatus(!0),this._persondataService.savePurpose(this.purposeModel).then(function(){e._translate.get("Persondata.SavedSuccessfully").subscribe(function(t){return e._alert.success(t)}),e.selectedPurpose.purposeJustification=e.purposeModel.purposeJustification,e.selectedPurpose.dataTypes.forEach(function(t){var n=e.purposeModel.deletionJustifications.find(function(e){return e.dataTypeTagId==t.dataTypeId});n&&(t.deletionPolicyJustification=n.justification)}),e._data.changeLoadStatus(!1),e.selectedPurpose=null})},e.prototype.changeTab=function(e){console.log(e)},e=Ne([Object(r.Component)({template:n("/TFF"),styles:[n("EnLU")]}),Oe("design:paramtypes",[i.c,h.a,f.Router,M.a,Ee])],e)}(),Be=n("kJ/S"),Me=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},je=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},Ue=function(){function e(e,t,n,r,a){this._translate=e,this._data=t,this._router=n,this._alert=r,this._persondataService=a}return e.prototype.ngOnInit=function(){var e=this;this._data.changeLoadStatus(!0),this._persondataService.getShareVendorData.subscribe(function(t){t&&e.allPurposes.forEach(function(e){var n=e.vendorDataTypes.find(function(e){return e.vendorId==t.vendorId});n&&(n=t)})}),this._persondataService.getAllProcesses().then(function(t){e.allProcesses=t,e.selectProcess(e.allProcesses[0])}),this._persondataService.getVendorCategories().then(function(t){var n=[];t.forEach(function(e){var t={value:e,label:e};n.push(t)}),e.listSuggestionsOriginal=n,e.listSuggestions=n})},e.prototype.selectProcess=function(e){var t=this;this.allPurposes=void 0,this.selectedProcess=e,this._persondataService.getPersonGroupsByProcess(e.value).then(function(e){t.allPersonGroups=e,t.selectPersonGroup(t.allPersonGroups[0])})},e.prototype.selectPersonGroup=function(e){var t=this;this.allPurposes=void 0,this.selectedPersonGroup=e,this._persondataService.getAllPurposesOf3rdParty(this.selectedProcess.value,this.selectedPersonGroup.value).then(function(e){t.allPurposes=e,t.allPurposes[0]&&t.selectPurpose(t.allPurposes[0]),t._data.changeLoadStatus(!1)})},e.prototype.selectPurpose=function(e){this.selectedPurpose=e},e.prototype.clickMatrix=function(e,t,n){var r=e.vendorDataTypes.find(function(e){return e.vendorId==t}).dataTypes.find(function(e){return e.id==n});r.selected=!r.selected},e.prototype.onNoOptionsFound=function(e){this.listSuggestions=[{label:e,value:e}].concat(this.listSuggestionsOriginal),this.vendorCategory=e},e.prototype.addVendor=function(e){var t=this;this._data.changeLoadStatus(!0);var n={purposeId:e.purposeId,vendorName:this.NameOf3rdPartyVendor,vendorCategory:this.vendorCategory};this._persondataService.addNewVendor(n).then(function(n){e.dataTypes.forEach(function(e){n.dataTypes=[],n.dataTypes.push(e)}),t.allPurposes.find(function(t){return t.purposeId==e.purposeId}).vendorDataTypes.push(n),t.NameOf3rdPartyVendor=null,t.vendorCategory=null,t._data.changeLoadStatus(!1)})},e.prototype.savePurpose=function(e){var t=this;this._data.changeLoadStatus(!0),this._persondataService.saveVendorsOnPurpose(e).then(function(e){e&&e.error?t._translate.get("Persondata."+e.error).subscribe(function(e){return t._alert.error(e)}):t._alert.success("Success"),t.selectedPurpose=null,t._data.changeLoadStatus(!1)})},e.prototype.deleteVendor=function(e,t){var n=this;this._data.changeLoadStatus(!0),this._persondataService.deleteVendor(t).then(function(r){if(r&&r.error)n._alert.error(r.error);else{n._alert.success("Success");var a=n.allPurposes.find(function(t){return t.purposeId==e.purposeId});console.log(e,a),a.vendorDataTypes=a.vendorDataTypes.filter(function(e){return e.vendorId!==t})}n._data.changeLoadStatus(!1)})},e.prototype.vendorView=function(e){this._persondataService.setSharedVendorData(e),this._router.navigate(["gdpr","management","persondata","3rd-party-country-transfer","edit-vendor"])},Me([Object(r.ViewChild)("sidenav"),je("design:type",Be.a)],e.prototype,"sidenav",void 0),e=Me([Object(r.Component)({template:n("3sSg"),styles:[n("EnLU")]}),je("design:paramtypes",[i.c,h.a,f.Router,M.a,Ee])],e)}(),Ve=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},Ge=this&&this.__metadata||function(e,t){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(e,t)},He=function(){function e(e,t,n,r,a,s){this._translate=e,this._data=t,this._router=n,this._alert=r,this._fileUploadService=a,this._persondataService=s,this.listSuggestions=[],this.listSuggestionsOriginal=[],this.isOpenMaxStorageQuotaWarning=!1,this.deleteConfirm=new V.a("Confirm Delete","modal-md",!1)}return e.prototype.ngOnInit=function(){this.vendorData=this._persondataService.getSharedVendorData(),this.vendorData?this.upLoad():this._router.navigate(["gdpr","management","persondata","3rd-party-country-transfer"])},e.prototype.upLoad=function(){var e=this;this._persondataService.getVendorSalesGroup().then(function(t){var n=[];t.forEach(function(e){if(e){var t={value:e,label:e};n.push(t)}}),console.log(n),e.listSuggestionsOriginal=n,e.listSuggestions=n}),this._fileUploadService.getUploadedFile(x.a.VENDOR_FILE,this.vendorData.vendorId).then(function(t){t&&null!=t.fileName&&(e.isUploaded=!0,e.uploadedFile=t,e.fileName=t.fileName)}),this.uploader=new U.FileUploader({url:x.a.UPLOAD_FILE_URL,authToken:"Bearer "+localStorage.getItem("accessToken"),isHTML5:!0,maxFileSize:x.a.MAX_FILE_SIZE_TO_UPLOAD}),this.uploader.onAfterAddingFile=function(t){e.uploader.queue.length>1&&e.uploader.removeFromQueue(e.uploader.queue[0]),e.uploader.queue[0].file.size>=e.remainingQuota&&(e.isOpenMaxStorageQuotaWarning=!0,e.uploader.removeFromQueue(e.uploader.queue[0]))},this.uploader.onWhenAddingFileFailed=function(t,n){"fileSize"==n.name&&e._translate.get("General.FileTooBig").subscribe(function(t){return e._alert.error(t)})},this.uploader.onBuildItemForm=function(t,n){n.append("fileType",x.a.VENDOR_FILE),n.append("refId",e.vendorData.vendorId)},this.uploader.onProgressItem=function(){e._data.changeLoadStatus(!0)},this.uploader.onCompleteItem=function(t,n,r,a){e.remainingQuota-=t.file.size,e._translate.get("Persondata.UploadSuccessfully").subscribe(function(t){return e._alert.success(t)}),e._fileUploadService.getUploadedFile(x.a.VENDOR_FILE,e.vendorData.vendorId).then(function(t){t&&null!=t.fileName&&(e.isUploaded=!0,e.uploadedFile=t,e.fileName=t.fileName,e._data.changeLoadStatus(!1))})}},e.prototype.onNoOptionsFound=function(e){this.listSuggestions=[{label:e,value:e}].concat(this.listSuggestionsOriginal),this.vendorData.salesGroup=e},e.prototype.saveVendor=function(){var e=this;this._persondataService.updateVendor(this.vendorData).then(function(t){t&&t.error?e._translate.get(t.error).subscribe(function(t){return e._alert.error(t)}):(e._alert.success("Susscess"),e._persondataService.changeShareVendorData(e.vendorData),e._router.navigate(["gdpr","management","persondata","3rd-party-country-transfer"]))})},e.prototype.download=function(){var e=this;this._data.changeLoadStatus(!0),this._fileUploadService.downloadFile(this.uploadedFile.fileId).then(function(t){var n=document.createElement("a");n.href=window.URL.createObjectURL(t),n.download=e.fileName,n.click(),e._data.changeLoadStatus(!1)})},e.prototype.delete=function(){var e=this;this._data.changeLoadStatus(!0),this.deleteConfirm.visible=!1,this._fileUploadService.deleteFile(this.uploadedFile.fileId).then(function(t){t&&(e.isUploaded=!1,e.uploadedFile=null,e.fileName="",e._translate.get("Persondata.DeleteSuccessfully").subscribe(function(t){return e._alert.success(t)}),e._fileUploadService.getRemainingQuota().then(function(t){e.remainingQuota=t,e._data.changeLoadStatus(!1)}))})},e.prototype.confirmDelete=function(){this.deleteConfirm.visible=!0},e.prototype.closeDelete=function(){this.deleteConfirm.visible=!1},e=Ve([Object(r.Component)({template:n("pSqX"),styles:[n("EnLU")],animations:[Object(oe.a)()],host:{"[@slideInOutTransition]":""}}),Ge("design:paramtypes",[i.c,h.a,f.Router,M.a,j.a,Ee])],e)}(),ze=[{path:"",component:b,children:[{path:"policy",component:C},{path:"policy-management/:id",component:X},{path:"dataprocessor",component:B},{path:"dataprocessor-management/:id",component:se,children:[{path:"counterpart",component:ce}]},{path:"risk",component:me},{path:"risk-management",component:ge},{path:"risk-management/:id",component:ge},{path:"processes",component:Se},{path:"persondata",component:Fe,children:[{path:"",redirectTo:"justification"},{path:"justification",component:Le},{path:"3rd-party-country-transfer",component:Ue,children:[{path:"edit-vendor",component:He}]}]}]}],Qe=f.RouterModule.forChild(ze),We=n("ZIaS"),Ye=n("Iwkz"),qe=n("8A13"),Je=n("8tOD"),Ze=n("AoKd"),Ke=n("6GVX"),Xe=n("q2BM"),$e=n("8Gd/");n.d(t,"ManagementModule",function(){return tt}),t.HttpLoaderFactory=nt;var et=this&&this.__decorate||function(e,t,n,r){var a,s=arguments.length,o=s<3?t:null===r?r=Object.getOwnPropertyDescriptor(t,n):r;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)o=Reflect.decorate(e,t,n,r);else for(var i=e.length-1;i>=0;i--)(a=e[i])&&(o=(s<3?a(o):s>3?a(t,n,o):a(t,n))||o);return s>3&&o&&Object.defineProperty(t,n,o),o},tt=function(){function e(){}return e=et([Object(r.NgModule)({imports:[a.CommonModule,i.b.forChild({loader:{provide:i.a,useFactory:nt,deps:[o.HttpClient]},isolate:!0}),s.FormsModule,s.ReactiveFormsModule,d.NgxDynamicTemplateModule.forRoot({routes:[]}),Qe,c.a,J,I.j,U.FileUploadModule,We.a,qe.a,Je.c,Ze.TasksModule,Ke.a,Xe.a,Be.b,$e.a],declarations:[b,C,B,X,se,ce,me,ge,Se,Ce,Fe,Le,Ue,A,N,ne,He],entryComponents:[Ce,A,N,ne],providers:[p.a,u.a,m.a,y.a,S,j.a,Ye.a,G.a,p.a,de.a,Ee]})],e)}();function nt(e){return new l.a(e,"/assets/i18n/","-management.json")}},cySz:function(e,t){e.exports='<div class="container-fluid">\r\n    <div class="row">\r\n        <div class="col-xs-6">\r\n            <h2>{{\'Processes.Title\' | translate}}</h2>\r\n            <p>{{\'Processes.Description\' | translate}}</p>\r\n        </div>\r\n    </div>\r\n    <div class="processes-bar">\r\n        <div class="panel">\r\n            <div class="panel-body">\r\n                <ul class="list list-unstyled list-inline">\r\n                    <li>{{\'Processes.Processes\' | translate}}</li>\r\n                    <li>\r\n                        <span (click)="processesBarClick(null)" [ngClass]="{\'active\': !taskFilter.processId}">{{\'Processes.AllProcesses\' | translate}}</span>\r\n                    </li>\r\n                    <li *ngFor="let processes of listProcesses" [ngClass]="{\'active\': taskFilter.processId == processes.value}">\r\n                        <span (click)="processesBarClick(processes.value)">{{processes.label}}</span>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="filter-bar">\r\n        <div class="panel">\r\n            <div class="panel-body">\r\n                <div class="row">\r\n                    <div class="col-xs-4">\r\n                        <div class="check-box-group">\r\n                            <strong class="pull-left">{{\'Processes.FilterText\' | translate}}</strong>\r\n                            <div class="pmd-switch pull-left">\r\n                                <label>\r\n                                    <input type="checkbox" [(ngModel)]="checkboxTaskFilter" (change)="checkboxClick()">\r\n                                    <span class="pmd-switch-label"></span>\r\n                                </label>\r\n                                <span class="pmd-switch__text">{{\'Processes.FilterTask\' | translate}}</span>\r\n                            </div>\r\n                            <div class="pmd-switch pmd-switch-info pull-left ">\r\n                                <label>\r\n                                    <input type="checkbox" [(ngModel)]="checkboxControlFilter" (change)="checkboxClick()">\r\n                                    <span class="pmd-switch-label"></span>\r\n                                </label>\r\n                                <span class="pmd-switch__text">{{\'Processes.FilterTaskAndControl\' | translate}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-2">\r\n                        <div class="form-group pmd-textfield">\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">sort</i>\r\n                                </div>\r\n                                <input class="form-control" id="filterText" type="text" [(ngModel)]="taskFilter.taskTitle" name="filterText" placeholder="{{\'Processes.FilterTextBox\' | translate}}">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-2">\r\n                        <div class="form-group pmd-textfield">\r\n                            <ng-select\r\n                                class="users-select"\r\n                                placeholder="{{ \'Processes.PerformerSelect\' | translate}}"\r\n                                [options]="defineUserInCompany"\r\n                                noFilter="10"\r\n                                [allowClear]="true"\r\n                                [(ngModel)]="taskFilter.taskPerformerId">\r\n                                <ng-template\r\n                                    #optionTemplate\r\n                                    let-option="option">\r\n                                    <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                    {{option?.label}}\r\n                                </ng-template>\r\n                            </ng-select>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="row row-eq-height custom-row">\r\n        <div class="col-1per5">\r\n            {{ \'Processes.NewsAndProposed\' | translate }}\r\n            <div class="panel task-list-area" style="height: 100%; background:#dadada">\r\n                <div class="panel-body">\r\n                    <button type="button" class="btn pmd-btn-raised pmd-ripple-effect btn-primary" routerLink="/gdpr/tasks">{{ \'Processes.AddNewBtn\' | translate}}</button>\r\n                    <div class="mt20"></div>\r\n                    <div class="list-tasks">\r\n                        <div class="pull-left" *ngFor="let item of listTasks | filterBy: taskFilter">\r\n                            <div class="task-item" *ngIf="item.taskStatus == 0 || item.taskStatus == 1" [ngClass]="{\'task-item--info\': item.isControl, \'task-item--error\': isRejected(item.taskStatus)}">\r\n                                <div class="task-item__inner">\r\n                                    <div class="task-item__name" (click)="editTask(item.taskId)">\r\n                                        <div class="task-item__error" *ngIf="item.isError">\r\n                                            <i class="material-icons">error_outline</i>\r\n                                        </div>\r\n                                        <div class="task-item__icon">\r\n                                            <i class="material-icons" *ngIf="!item.isAutoGenerated">assignment</i>\r\n                                            <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="item.isAutoGenerated">\r\n                                        </div>\r\n                                        {{item.taskTitle}}\r\n                                    </div>\r\n                                    <div class="task-item__responsbility">\r\n                                        <ng-select\r\n                                            class="users-select"\r\n                                            placeholder="{{ \'Processes.PerformerSelect\' | translate}}"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="item.taskPerformerId"\r\n                                            (selected)="changeResponsible(item, $event)">\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class="task-item__ratio">\r\n                                        <i class="material-icons">assignment</i> {{item.totalCompletedToDos}}/{{item.totalTodos}}\r\n                                    </div>\r\n                                    <div class="task-item__status"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-1per5">\r\n            {{ \'Processes.Scheduled\' | translate }}\r\n            <div class="panel task-list-area" style="height: 100%; background:#e6e6e6">\r\n                <div class="panel-body">\r\n                    <div class="list-tasks">\r\n                        <div class="pull-left" *ngFor="let item of listTasks | filterBy: taskFilter">\r\n                            <div class="task-item" *ngIf="item.taskStatus == 2" [ngClass]="{\'task-item--info\': item.isControl, \'task-item--error\': isRejected(item.taskStatus)}">\r\n                                <div class="task-item__inner">\r\n                                    <div class="task-item__name" (click)="editTask(item.taskId)">\r\n                                        <div class="task-item__error" *ngIf="item.isError">\r\n                                            <i class="material-icons">error_outline</i>\r\n                                        </div>\r\n                                        <div class="task-item__icon">\r\n                                            <i class="material-icons" *ngIf="!item.isAutoGenerated">assignment</i>\r\n                                            <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="item.isAutoGenerated">\r\n                                        </div>\r\n                                        {{item.taskTitle}}\r\n                                    </div>\r\n                                    <div class="task-item__responsbility">\r\n                                        <ng-select\r\n                                            class="users-select"\r\n                                            placeholder="{{ \'Processes.PerformerSelect\' | translate}}"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="item.taskPerformerId"\r\n                                            (selected)="changeResponsible(item, $event)">\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class="task-item__ratio">\r\n                                        <i class="material-icons">assignment</i> {{item.totalCompletedToDos}}/{{item.totalTodos}}\r\n                                    </div>\r\n                                    <div class="task-item__status"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-1per5">\r\n            {{ \'Processes.InProgress\' | translate }}\r\n            <div class="panel task-list-area" style="height: 100%;">\r\n                <div class="panel-body">\r\n                    <div class="list-tasks">\r\n                        <div class="pull-left" *ngFor="let item of listTasks | filterBy: taskFilter">\r\n                            <div class="task-item" *ngIf="item.taskStatus == 3 || item.taskStatus == 5" [ngClass]="{\'task-item--info\': item.isControl, \'task-item--error\': isRejected(item.taskStatus)}">\r\n                                <div class="task-item__inner">\r\n                                    <div class="task-item__name" (click)="openPerformDialog(item.taskId)">\r\n                                        <div class="task-item__error" *ngIf="item.isError">\r\n                                            <i class="material-icons">error_outline</i>\r\n                                        </div>\r\n                                        <div class="task-item__icon">\r\n                                            <i class="material-icons" *ngIf="!item.isAutoGenerated">assignment</i>\r\n                                            <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="item.isAutoGenerated">\r\n                                        </div>\r\n                                        {{item.taskTitle}}\r\n                                    </div>\r\n                                    <div class="task-item__responsbility">\r\n                                        <ng-select disabled\r\n                                            class="users-select"\r\n                                            placeholder="{{ \'Processes.PerformerSelect\' | translate}}"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="item.taskPerformerId"\r\n                                            (selected)="changeResponsible(item, $event)">\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class="task-item__ratio">\r\n                                        <i class="material-icons">assignment</i> {{item.totalCompletedToDos}}/{{item.totalTodos}}\r\n                                    </div>\r\n                                    <div class="task-item__status"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-1per5">\r\n            {{ \'Processes.PendingReview\' | translate }}\r\n            <div class="panel task-list-area" style="height: 100%;">\r\n                <div class="panel-body">\r\n                    <div class="list-tasks">\r\n                        <div class="pull-left" *ngFor="let item of listTasks | filterBy: taskFilter">\r\n                            <div class="task-item" *ngIf="item.taskStatus == 4" [ngClass]="{\'task-item--info\': item.isControl, \'task-item--error\': isRejected(item.taskStatus)}">\r\n                                <div class="task-item__inner">\r\n                                    <div class="task-item__name" (click)="openReviewDialog(item.taskId)">\r\n                                        <div class="task-item__error" *ngIf="item.isError">\r\n                                            <i class="material-icons">error_outline</i>\r\n                                        </div>\r\n                                        <div class="task-item__icon">\r\n                                            <i class="material-icons" *ngIf="!item.isAutoGenerated">assignment</i>\r\n                                            <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="item.isAutoGenerated">\r\n                                        </div>\r\n                                        {{item.taskTitle}}\r\n                                    </div>\r\n                                    <div class="task-item__responsbility">\r\n                                        <ng-select disabled\r\n                                            class="users-select"\r\n                                            placeholder="{{ \'Processes.PerformerSelect\' | translate}}"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="item.taskPerformerId"\r\n                                            (selected)="changeResponsible(item, $event)">\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class="task-item__ratio">\r\n                                        <i class="material-icons">assignment</i> {{item.totalCompletedToDos}}/{{item.totalTodos}}\r\n                                    </div>\r\n                                    <div class="task-item__status"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-1per5">\r\n            {{ \'Processes.Done\' | translate }}\r\n            <div class="panel task-list-area" style="height: 100%;">\r\n                <div class="panel-body">\r\n                    <div class="list-tasks">\r\n                        <div class="pull-left" *ngFor="let item of listTasks | filterBy: taskFilter">\r\n                            <div class="task-item" *ngIf="item.taskStatus == 6" [ngClass]="{\'task-item--info\': item.isControl, \'task-item--error\': isRejected(item.taskStatus)}">\r\n                                <div class="task-item__inner">\r\n                                    <div class="task-item__name" (click)="openDetailDialog(item.taskId)">\r\n                                        <div class="task-item__error" *ngIf="item.isError">\r\n                                            <i class="material-icons">error_outline</i>\r\n                                        </div>\r\n                                        <div class="task-item__icon">\r\n                                            <i class="material-icons" *ngIf="!item.isAutoGenerated">assignment</i>\r\n                                            <img src="assets/images/icon-complyto.png" alt="" width="16" *ngIf="item.isAutoGenerated">\r\n                                        </div>\r\n                                        {{item.taskTitle}}\r\n                                    </div>\r\n                                    <div class="task-item__responsbility">\r\n                                        <ng-select disabled\r\n                                            class="users-select"\r\n                                            placeholder="{{ \'Processes.PerformerSelect\' | translate}}"\r\n                                            [options]="defineUserInCompany"\r\n                                            noFilter="10"\r\n                                            [(ngModel)]="item.taskPerformerId"\r\n                                            (selected)="changeResponsible(item, $event)">\r\n                                            <ng-template\r\n                                                #optionTemplate\r\n                                                let-option="option">\r\n                                                <div class="select-avatar">{{option?.label.toLowerCase()}}</div>\r\n                                                {{option?.label}}\r\n                                            </ng-template>\r\n                                        </ng-select>\r\n                                    </div>\r\n                                    <div class="task-item__ratio">\r\n                                        <i class="material-icons">assignment</i> {{item.totalCompletedToDos}}/{{item.totalTodos}}\r\n                                    </div>\r\n                                    <div class="task-item__status"></div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="mt30"></div>\r\n</div>'},d5Fz:function(e,t){e.exports='<div class="container">\r\n    <div class="row">\r\n        <div class="col-xs-6">\r\n            <h1>{{ \'Dataprocess.Title\' | translate }}</h1>\r\n            <p>{{ \'Dataprocess.Description\' | translate }}</p>\r\n        </div>\r\n    </div>\r\n    <div class="row mt20">\r\n        <div class="col-xs-6">\r\n            <h3>{{ \'Dataprocess.ControllerTitle\' | translate }}</h3>\r\n            <div *ngFor="let item of listDataprocessor | filterBy: { documentType: \'Controller\' }">\r\n                <div class="panel-group pmd-accordion" role="tablist" aria-multiselectable="true">\r\n                    <div class="panel panel-default">\r\n                        <div class="panel-heading" role="tab">\r\n                            <h4 class="panel-title white-background">\r\n                                <div class="panel-title__innner">\r\n                                    <span>{{item.documentName}}</span>\r\n                                    <div class="processor-more pmd-accordion-arrow" *ngIf="!item.idCopiedFrom">\r\n                                        <div [matMenuTriggerFor]="menu">\r\n                                            <i class="material-icons md-dark pmd-sm ">more_vert</i>\r\n                                        </div>\r\n                                        <mat-menu #menu="matMenu">\r\n                                            <button mat-menu-item (click)="makeCopy(item)">\r\n                                                <span>{{ \'General.MakeCopy\' | translate }}</span>\r\n                                            </button>\r\n                                        </mat-menu>\r\n                                    </div>\r\n                                    <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="item.isLocked">lock_outline</i>\r\n                                    <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="!item.isLocked">lock_open</i>\r\n                                    <button class="btn btn-link pmd-accordion-arrow" (click)="viewDetail(item.documentId)">{{\'General.View\' | translate}}</button>\r\n                                </div>\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div *ngFor="let subItem of item.copies" class="panel-group pmd-accordion" role="tablist" aria-multiselectable="true">\r\n                        <div class="panel panel-default sub-item">\r\n                            <div class="panel-heading" role="tab">\r\n                                <h4 class="panel-title white-background">\r\n                                    <div class="panel-title__innner">\r\n                                        <span>{{subItem.documentName}}</span>\r\n                                        <div class="processor-more pmd-accordion-arrow" *ngIf="subItem.idCopiedFrom">\r\n                                            <div [matMenuTriggerFor]="menu">\r\n                                                <i class="material-icons md-dark pmd-sm ">more_vert</i>\r\n                                            </div>\r\n                                            <mat-menu #menu="matMenu">\r\n                                                <button mat-menu-item (click)="delete(item, subItem)">\r\n                                                    <span>{{ \'General.Delete\' | translate }}</span>\r\n                                                </button>\r\n                                            </mat-menu>\r\n                                        </div>\r\n                                        <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="subItem.isLocked">lock_outline</i>\r\n                                        <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="!subItem.isLocked">lock_open</i>\r\n                                        <button class="btn btn-link pmd-accordion-arrow" (click)="viewDetail(subItem.documentId)">{{\'General.View\' | translate}}</button>\r\n                                    </div>\r\n                                </h4>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-xs-6">\r\n            <h3>{{ \'Dataprocess.ProcessorTitle\' | translate }}</h3>\r\n            <div *ngFor="let item of listDataprocessor | filterBy: { documentType: \'Processor\' }">\r\n                <div class="panel-group pmd-accordion" role="tablist" aria-multiselectable="true">\r\n                    <div class="panel panel-default">\r\n                        <div class="panel-heading" role="tab">\r\n                            <h4 class="panel-title white-background">\r\n                                <div class="panel-title__innner">\r\n                                    <span>{{item.documentName}}</span>\r\n                                    <div class="processor-more pmd-accordion-arrow" *ngIf="!item.idCopiedFrom">\r\n                                        <div [matMenuTriggerFor]="menu">\r\n                                            <i class="material-icons md-dark pmd-sm ">more_vert</i>\r\n                                        </div>\r\n                                        <mat-menu #menu="matMenu">\r\n                                            <button mat-menu-item (click)="makeCopy(item)">\r\n                                                <span>{{ \'General.MakeCopy\' | translate }}</span>\r\n                                            </button>\r\n                                        </mat-menu>\r\n                                    </div>\r\n                                    <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="item.isLocked">lock_outline</i>\r\n                                    <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="!item.isLocked">lock_open</i>\r\n                                    <button class="btn btn-link pmd-accordion-arrow" (click)="viewDetail(item.documentId)">{{\'General.View\' | translate}}</button>\r\n                                </div>\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div *ngFor="let subItem of item.copies" class="panel-group pmd-accordion" role="tablist" aria-multiselectable="true">\r\n                    <div class="panel panel-default sub-item">\r\n                        <div class="panel-heading" role="tab">\r\n                            <h4 class="panel-title white-background">\r\n                                <div class="panel-title__innner">\r\n                                    <span>{{subItem.documentName}}</span>\r\n                                    <div class="processor-more pmd-accordion-arrow" *ngIf="subItem.idCopiedFrom">\r\n                                        <div [matMenuTriggerFor]="menu">\r\n                                            <i class="material-icons md-dark pmd-sm ">more_vert</i>\r\n                                        </div>\r\n                                        <mat-menu #menu="matMenu">\r\n                                            <button mat-menu-item (click)="delete(item, subItem)">\r\n                                                <span>{{ \'General.Delete\' | translate }}</span>\r\n                                            </button>\r\n                                        </mat-menu>\r\n                                    </div>\r\n                                    <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="subItem.isLocked">lock_outline</i>\r\n                                    <i class="material-icons md-dark pmd-sm pmd-accordion-arrow" *ngIf="!subItem.isLocked">lock_open</i>\r\n                                    <button class="btn btn-link pmd-accordion-arrow" (click)="viewDetail(subItem.documentId)">{{\'General.View\' | translate}}</button>\r\n                                </div>\r\n                            </h4>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n<div class="mt30">&nbsp;</div>'},"hQ/V":function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var r=n("WT6e");t.DynamicTypes={DynamicExtraModules:"DynamicExtraModules",DynamicResponseRedirectStatuses:"DynamicResponseRedirectStatuses"},t.HASH_FIELD="$$hashValue",t.ROUTES_TOKEN=new r.InjectionToken("ROUTES"),t.REMOVE_DYNAMIC_WRAPPER=new r.InjectionToken("REMOVE_DYNAMIC_WRAPPER")},"n+iR":function(e,t,n){"use strict";var r,a=this&&this.__extends||(r=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])},function(e,t){function n(){this.constructor=e}r(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)});Object.defineProperty(t,"__esModule",{value:!0});var s=n("WT6e"),o=n("ItHS"),i=n("7Zp/"),l=n("I1HR"),c=n("hQ/V"),d=function(e){function t(t,n,r,a,s,o,i,l,c,d){return e.call(this,t,n,r,a,s,o,l,i,c,d,"[dynamic-template-{id}]")||this}return a(t,e),t.decorators=[{type:s.Directive,args:[{selector:"[dynamic-template]"}]}],t.ctorParameters=function(){return[{type:Array,decorators:[{type:s.Inject,args:[c.DynamicTypes.DynamicExtraModules]}]},{type:Array,decorators:[{type:s.Inject,args:[c.DynamicTypes.DynamicResponseRedirectStatuses]}]},{type:s.ViewContainerRef,decorators:[{type:s.Inject,args:[s.ViewContainerRef]}]},{type:s.Compiler,decorators:[{type:s.Inject,args:[s.Compiler]}]},{type:o.HttpClient,decorators:[{type:s.Optional},{type:s.Inject,args:[o.HttpClient]}]},{type:s.Renderer2,decorators:[{type:s.Inject,args:[s.Renderer2]}]},{type:s.NgModuleFactoryLoader,decorators:[{type:s.Inject,args:[s.NgModuleFactoryLoader]}]},{type:l.DynamicCache,decorators:[{type:s.Inject,args:[l.DynamicCache]}]},{type:Array,decorators:[{type:s.Inject,args:[c.ROUTES_TOKEN]}]},{type:void 0,decorators:[{type:s.Inject,args:[c.REMOVE_DYNAMIC_WRAPPER]}]}]},t}(i.DynamicBase);t.DynamicDirective=d},pSqX:function(e,t){e.exports='<div class="side-form-2" style="width: 30%;">\r\n    <button class="btn-link no-padding" routerLink="../">\r\n        <i class="material-icons">arrow_back</i>\r\n    </button>\r\n    <h3>{{\'Persondata.AddVendorInformation\'| translate}} <span class="help-group__icon"><i class="material-icons">help_outline</i><span class="help-group__help-text">{{\'Persondata.AddVendorInformationTooltip\' | translate}}</span></span></h3>\r\n    <div class="row" *ngIf="vendorData">\r\n        <div class="col-xs-8">\r\n            <div  class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': vendorData.vendorName}">\r\n                <label for="NameOf3rdPartyVendor" class="control-label">\r\n                    {{\'Persondata.NameOf3rdPartyVendor\' | translate}}\r\n                </label>\r\n                <input type="text" [(ngModel)]="vendorData.vendorName" class="form-control">\r\n                <span class="pmd-textfield-focused"></span>\r\n            </div>\r\n            <div  class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': vendorData.salesGroup}">\r\n                <label for="AddVendorCategory" class="control-label">\r\n                    {{\'Persondata.AddSalesGroup\' | translate}}\r\n                </label>\r\n                <ng-select \r\n                    [(ngModel)]="vendorData.salesGroup"\r\n                    [options]="listSuggestions"  (noOptionsFound)="onNoOptionsFound($event)" filterPlaceholder="{{\'Persondata.SelectFromList\' | translate}}">\r\n                </ng-select>\r\n                <span class="pmd-textfield-focused"></span>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="mt20 clearfix"></div>\r\n    <strong>{{ \'Persondata.UploadVendorAgreement\' | translate }}</strong>\r\n    <form method="post" enctype="multipart/form-data" *ngIf="!isUploaded">\r\n        <div class="row">\r\n            <div class="col-xs-8">\r\n                <div class="form-group pmd-textfield">\r\n                    <label for="Upload" class="control-label">\r\n                        {{ \'General.ClickToUpload\' | translate }}\r\n                    </label>\r\n                    <input type="file" accept="image/png,image/bmp,image/gif,image/jpeg,text/csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/pdf,application/zip,text/*" class="btn btn-sm btn-default" ng2FileSelect [uploader]="uploader" class="form-control">\r\n                    <span class="pmd-textfield-focused"></span>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-4">\r\n                <button class="btn btn-sm btn-primary mt20" type="button" (click)="uploader.uploadAll()">\r\n                    <i class="material-icons pmd-xs upload-button">send</i>\r\n                </button>\r\n            </div>\r\n        </div>\r\n    </form>\r\n    <ul class="list-group" *ngIf="isUploaded">\r\n        <li class="list-group-item">\r\n            <div class="media-left media-middle">\r\n                <i class="material-icons pmd-xs">attach_file</i>\r\n            </div>\r\n            <div class="media-body media-middle">\r\n                {{fileName}}\r\n            </div>\r\n            <i class="material-icons md-dark media-middle download" (click)="download()" title="{{\'General.Download\' | translate}}">cloud_download</i>\r\n            <i class="material-icons md-dark media-middle delete" (click)="confirmDelete()" title="{{\'General.Delete\' | translate}}">delete</i>\r\n        </li>\r\n    </ul>\r\n    <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary" (click)="saveVendor()">{{\'Persondata.Save\' | translate}}</button>\r\n</div>\r\n<modal-dialog [(modalDialog)]="deleteConfirm">\r\n    <div class="form-group">\r\n        {{ \'Persondata.ConfirmDelete\' | translate }}\r\n    </div>\r\n    <div class="text-right">\r\n        <button type="submit" class="btn btn-danger" (click)="delete()">{{ \'General.DeleteBtn\' | translate }}</button>\r\n        <button type="submit" class="btn btn-default" (click)="closeDelete()">{{ \'General.CancelBtn\' | translate }}</button>\r\n    </div>\r\n</modal-dialog>'},srdZ:function(e,t){e.exports='<div class="side-form-2">\r\n    <button class="btn-link no-padding" routerLink="../">\r\n        <i class="material-icons">arrow_back</i>\r\n    </button>\r\n    <h2>{{ \'Dataprocess.CounterpartInfo\' | translate }}</h2>\r\n    <form [formGroup]="counterpartInfoForm" (ngSubmit)="onSubmit(counterpartInfoForm.value)">\r\n        <h3>{{\'Counterpart.CompanyInfo\' | translate}}</h3>\r\n        <div class="row">\r\n            <div class="col-xs-6">\r\n                <div class="help-form-group">\r\n                    <div class="help-form-group__icon">\r\n                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                        <div class="help-form-group__help-text">\r\n                            {{\'Counterpart.CompanyNameTooltip\' | translate}}\r\n                        </div>\r\n                    </div>\r\n                    <div class="help-form-group__form">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                \'pmd-textfield-floating-label-completed\': counterpartInfoForm.controls[\'companyName\'].value,\r\n                                \'has-error\': counterpartInfoForm.controls[\'companyName\'].invalid && counterpartInfoForm.controls[\'companyName\'].touched\r\n                            }">\r\n                            <label for="companyName" class="control-label">\r\n                                {{\'Counterpart.CompanyName\' | translate}}*\r\n                            </label>\r\n                            <input maxlength="256" type="text" id="companyName" class="form-control" [formControl]="counterpartInfoForm.controls[\'companyName\']">\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-xs-6">\r\n                <div class="help-form-group__form">\r\n                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                            \'pmd-textfield-floating-label-completed\': counterpartInfoForm.controls[\'language\'].value,\r\n                            \'has-error\': counterpartInfoForm.controls[\'language\'].invalid && counterpartInfoForm.controls[\'language\'].touched\r\n                        }">\r\n                        <label for="lastYearResult" class="control-label">\r\n                            {{\'Counterpart.Language\' | translate}}*\r\n                        </label>\r\n                        <ng-select  [formControl]="counterpartInfoForm.controls[\'language\']" [options]="defineLanguage" noFilter="10">\r\n                        </ng-select>\r\n                        <span class="pmd-textfield-focused"></span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="clearfix"></div>\r\n            <div class="col-xs-12">\r\n                <div formGroupName="counterpartDetail">\r\n                    <div class="row">\r\n                        <div class="col-xs-6">\r\n                            <div class="help-form-group">\r\n                                <div class="help-form-group__icon">\r\n                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                    <div class="help-form-group__help-text">\r\n                                        {{\'Counterpart.CompanyRegistrationTooltip\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class="help-form-group__form">\r\n                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                            \'pmd-textfield-floating-label-completed\': companyDetailCtrl.controls[\'registration\'].value,\r\n                                            \'has-error\': companyDetailCtrl.controls[\'registration\'].invalid && companyDetailCtrl.controls[\'registration\'].touched\r\n                                        }">\r\n                                        <label for="companyRegistration" class="control-label">\r\n                                            {{\'Counterpart.CompanyRegistration\' | translate}}\r\n                                        </label>\r\n                                        <input maxlength="128" type="text" id="companyRegistration" class="form-control" formControlName="registration">\r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-xs-6">\r\n                            <div class="help-form-group">\r\n                                <div class="help-form-group__icon">\r\n                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                    <div class="help-form-group__help-text">\r\n                                        {{\'Counterpart.VatRegistrationNoTooltip\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class="help-form-group__form">\r\n                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                            \'pmd-textfield-floating-label-completed\': companyDetailCtrl.controls[\'vatRegistrationNo\'].value,\r\n                                            \'has-error\': companyDetailCtrl.controls[\'vatRegistrationNo\'].invalid && companyDetailCtrl.controls[\'vatRegistrationNo\'].touched\r\n                                        }">\r\n                                        <label for="VatRegistrationNo" class="control-label">\r\n                                            {{\'Counterpart.VatRegistrationNo\' | translate}}\r\n                                        </label>\r\n                                        <input maxlength="128" type="text" id="VatRegistrationNo" class="form-control" formControlName="vatRegistrationNo">\r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clearfix"></div>\r\n                        <div class="col-xs-6">\r\n                            <div class="help-form-group">\r\n                                <div class="help-form-group__icon">\r\n                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                    <div class="help-form-group__help-text">\r\n                                        {{\'Counterpart.CompanyAddressTooltip\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class="help-form-group__form">\r\n                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                            \'pmd-textfield-floating-label-completed\': companyDetailCtrl.controls[\'companyAddress\'].value,\r\n                                            \'has-error\': companyDetailCtrl.controls[\'companyAddress\'].invalid && companyDetailCtrl.controls[\'companyAddress\'].touched\r\n                                        }">\r\n                                        <label for="lastYearResult" class="control-label">\r\n                                            {{\'Counterpart.CompanyAddress\' | translate}}\r\n                                        </label>\r\n                                        <input maxlength="128" type="text" id="lastYearResult" class="form-control" formControlName="companyAddress">\r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-xs-6">\r\n                            <div class="help-form-group">\r\n                                <div class="help-form-group__icon">\r\n                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                    <div class="help-form-group__help-text">\r\n                                        {{\'Counterpart.ZipcodeTooltip\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class="help-form-group__form">\r\n                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                            \'pmd-textfield-floating-label-completed\': companyDetailCtrl.controls[\'zipCode\'].value,\r\n                                            \'has-error\': companyDetailCtrl.controls[\'zipCode\'].invalid && companyDetailCtrl.controls[\'zipCode\'].touched\r\n                                        }">\r\n                                        <label for="lastYearResult" class="control-label">\r\n                                            {{\'Counterpart.Zipcode\' | translate}}\r\n                                        </label>\r\n                                        <input maxlength="20" type="text" id="lastYearResult" class="form-control" formControlName="zipCode">\r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clearfix"></div>\r\n                        <div class="col-xs-6">\r\n                            <div class="help-form-group">\r\n                                <div class="help-form-group__icon">\r\n                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                    <div class="help-form-group__help-text">\r\n                                        {{\'Counterpart.CityTooltip\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class="help-form-group__form">\r\n                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                            \'pmd-textfield-floating-label-completed\': companyDetailCtrl.controls[\'city\'].value,\r\n                                            \'has-error\': companyDetailCtrl.controls[\'city\'].invalid && companyDetailCtrl.controls[\'city\'].touched\r\n                                        }">\r\n                                        <label for="lastYearResult" class="control-label">\r\n                                            {{\'Counterpart.City\' | translate}}\r\n                                        </label>\r\n                                        <input maxlength="128" type="text" id="lastYearResult" class="form-control" formControlName="city">\r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="col-xs-6">\r\n                            <div class="help-form-group">\r\n                                <div class="help-form-group__icon">\r\n                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                    <div class="help-form-group__help-text">\r\n                                        {{\'Counterpart.CountryTooltip\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                                <div class="help-form-group__form">\r\n                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                                            pmd-textfield-floating-label-completed\': companyDetailCtrl.controls[\'country\'].value,\r\n                                            \'has-error\': companyDetailCtrl.controls[\'country\'].invalid && companyDetailCtrl.controls[\'country\'].touched\r\n                                        }">\r\n                                        <label for="lastYearResult" class="control-label">\r\n                                            {{\'Counterpart.Country\' | translate}}*\r\n                                        </label>\r\n                                        <ng-select formControlName="country" [options]="defineCountry" noFilter="10">\r\n                                        </ng-select>\r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="group-control">\r\n                    <div class="form-group">\r\n                        <div class="pmd-switch">\r\n                            <label>\r\n                                <input id="hasSubCompany" type="checkbox" [formControl]="counterpartInfoForm.controls[\'isHasSub\']" (change)="hasSubCompanyChange()">\r\n                                <span class="pmd-switch-label"></span>\r\n                            </label>\r\n                            <span class="pmd-switch__text"><strong>{{\'Counterpart.Subsidaries\' | translate}}</strong></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="pl30" *ngIf="counterpartInfoForm.controls[\'isHasSub\'].value">\r\n                        <div formArrayName="subsidiaries">\r\n                            <div *ngFor="let subItem of subCompanyCtrl.controls; let i = index">\r\n                                <div *ngIf="i != 0" class="row">\r\n                                    <div class="col-xs-11">\r\n                                        <hr>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="row">\r\n                                    <div [formGroupName]="i">\r\n                                        <div class="col-xs-6">\r\n                                            <div class="help-form-group">\r\n                                                <div class="help-form-group__icon">\r\n                                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                                    <div class="help-form-group__help-text">\r\n                                                        {{\'Counterpart.Subsidaries\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="help-form-group__form">\r\n                                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'pmd-textfield-floating-label-completed\': subCompanyCtrl.controls[i].controls.name.value}">\r\n                                                        <label for="subCompanyName" class="control-label">\r\n                                                            {{\'Counterpart.CompanyName\' | translate}}*\r\n                                                        </label>\r\n                                                        <input maxlength="256" type="text" class="form-control" name="subCompanyName" formControlName="name">\r\n                                                        <span class="pmd-textfield-focused"></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="help-form-group">\r\n                                                <div class="help-form-group__icon">\r\n                                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                                    <div class="help-form-group__help-text">\r\n                                                        {{\'Counterpart.CompanyRegistrationTooltip\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="help-form-group__form">\r\n                                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                            \'pmd-textfield-floating-label-completed\': subCompanyCtrl.controls[i].controls[\'registration\'].value,\r\n                                                            \'has-error\': subCompanyCtrl.controls[i].controls[\'registration\'].invalid && subCompanyCtrl.controls[i].controls[\'registration\'].touched\r\n                                                        }">\r\n                                                        <label for="subCompanyRegistration" class="control-label">\r\n                                                            {{\'Counterpart.CompanyRegistration\' | translate}}\r\n                                                        </label>\r\n                                                        <input maxlength="256" type="text" class="form-control" name="subCompanyRegistration" formControlName="registration">\r\n                                                        <span class="pmd-textfield-focused"></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clearfix"></div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="help-form-group">\r\n                                                <div class="help-form-group__icon">\r\n                                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                                    <div class="help-form-group__help-text">\r\n                                                        {{\'Counterpart.CompanyAddressTooltip\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="help-form-group__form">\r\n                                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                            \'pmd-textfield-floating-label-completed\': subCompanyCtrl.controls[i].controls[\'companyAddress\'].value,\r\n                                                            \'has-error\': subCompanyCtrl.controls[i].controls[\'companyAddress\'].invalid && subCompanyCtrl.controls[i].controls[\'companyAddress\'].touched\r\n                                                        }">\r\n                                                        <label for="subCompanyAddress" class="control-label">\r\n                                                            {{\'Counterpart.CompanyAddress\' | translate}}\r\n                                                        </label>\r\n                                                        <input maxlength="128" type="text" id="subCompanyAddress" class="form-control" formControlName="companyAddress">\r\n                                                        <span class="pmd-textfield-focused"></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="help-form-group">\r\n                                                <div class="help-form-group__icon">\r\n                                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                                    <div class="help-form-group__help-text">\r\n                                                        {{\'Counterpart.ZipcodeTooltip\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="help-form-group__form">\r\n                                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                            \'pmd-textfield-floating-label-completed\': subCompanyCtrl.controls[i].controls[\'zipCode\'].value,\r\n                                                            \'has-error\': subCompanyCtrl.controls[i].controls[\'zipCode\'].invalid && subCompanyCtrl.controls[i].controls[\'zipCode\'].touched\r\n                                                        }">\r\n                                                        <label for="subZipCode" class="control-label">\r\n                                                            {{\'Counterpart.Zipcode\' | translate}}\r\n                                                        </label>\r\n                                                        <input maxlength="20" type="text" id="subZipCode" class="form-control" formControlName="zipCode">\r\n                                                        <span class="pmd-textfield-focused"></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="clearfix"></div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="help-form-group">\r\n                                                <div class="help-form-group__icon">\r\n                                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                                    <div class="help-form-group__help-text">\r\n                                                        {{\'Counterpart.CityTooltip\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="help-form-group__form">\r\n                                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                            \'pmd-textfield-floating-label-completed\': subCompanyCtrl.controls[i].controls[\'city\'].value,\r\n                                                            \'has-error\': subCompanyCtrl.controls[i].controls[\'city\'].invalid && subCompanyCtrl.controls[i].controls[\'city\'].touched\r\n                                                        }">\r\n                                                        <label class="control-label">\r\n                                                            {{\'Counterpart.City\' | translate}}\r\n                                                        </label>\r\n                                                        <input maxlength="128" type="text" class="form-control" formControlName="city">\r\n                                                        <span class="pmd-textfield-focused"></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-6">\r\n                                            <div class="help-form-group">\r\n                                                <div class="help-form-group__icon">\r\n                                                    <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                                    <div class="help-form-group__help-text">\r\n                                                        {{\'Counterpart.CountryTooltip\' | translate}}\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div class="help-form-group__form">\r\n                                                    <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                            \'pmd-textfield-floating-label-completed\': subCompanyCtrl.controls[i].controls[\'country\'].value,\r\n                                                            \'has-error\': subCompanyCtrl.controls[i].controls[\'country\'].invalid && subCompanyCtrl.controls[i].controls[\'country\'].touched\r\n                                                        }">\r\n                                                        <label class="control-label">\r\n                                                            {{\'Counterpart.Country\' | translate}}\r\n                                                        </label>\r\n                                                        <ng-select formControlName="country" [options]="defineCountry" noFilter="10">\r\n                                                        </ng-select>\r\n                                                        <span class="pmd-textfield-focused"></span>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class="col-xs-12" *ngIf="i != 0">\r\n                                            <button class="btn pmd-btn-flat pmd-ripple-effect btn-danger" type="button" (click)="removeSubCompany(i)">\r\n                                                Remove subsidaries\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="clearfix">\r\n                        <div class="row">\r\n                            <div class="col-xs-12">\r\n                                <div class="pull-right">\r\n                                    {{\'Counterpart.AddMoreSubsidaries\' | translate}}\r\n                                    <button class="btn pmd-btn-fab pmd-btn-raised pmd-ripple-effect btn-primary" type="button" [disabled]="subCompanyCtrl.invalid"\r\n                                        (click)="addSubCompany({})">\r\n                                        <i class="material-icons pmd-sm">add</i>\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="row mt30">\r\n            <div class="col-xs-12">\r\n                <h3>{{\'Counterpart.OverallResponsible\' | translate}}</h3>\r\n                <div class="group-control">\r\n                    <strong>{{ \'Counterpart.ContactPerson\' | translate }}</strong>\r\n                    <div class="pl30">\r\n                        <div class="row" formGroupName="contactPerson">\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.TitleTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': overallResponsibleCtrl.controls[\'title\'].value,\r\n                                                \'has-error\': overallResponsibleCtrl.controls[\'title\'].invalid && overallResponsibleCtrl.controls[\'title\'].touched\r\n                                            }">\r\n                                            <label for="ORTitle" class="control-label">\r\n                                                {{\'Counterpart.Title\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="50" type="text" id="ORTitle" class="form-control" formControlName="title">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clearfix"></div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.FirstNameTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': overallResponsibleCtrl.controls[\'firstName\'].value,\r\n                                                \'has-error\': overallResponsibleCtrl.controls[\'firstName\'].invalid && overallResponsibleCtrl.controls[\'firstName\'].touched\r\n                                            }">\r\n                                            <label for="ORFirstName" class="control-label">\r\n                                                {{\'Counterpart.FirstName\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="128" type="text" id="ORFirstName" class="form-control" formControlName="firstName">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.LastNameTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': overallResponsibleCtrl.controls[\'lastName\'].value,\r\n                                                \'has-error\': overallResponsibleCtrl.controls[\'lastName\'].invalid && overallResponsibleCtrl.controls[\'lastName\'].touched\r\n                                            }">\r\n                                            <label for="ORlastName" class="control-label">\r\n                                                {{\'Counterpart.LastName\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="128" type="text" id="ORlastName" class="form-control" formControlName="lastName">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clearfix"></div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.PhoneTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': overallResponsibleCtrl.controls[\'phone\'].value,\r\n                                                \'has-error\': overallResponsibleCtrl.controls[\'phone\'].invalid && overallResponsibleCtrl.controls[\'phone\'].touched\r\n                                            }">\r\n                                            <label for="ORPhone" class="control-label">\r\n                                                {{\'Counterpart.Phone\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="50" type="text" id="ORPhone" class="form-control" formControlName="phone">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.EmailTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': overallResponsibleCtrl.controls[\'email\'].value,\r\n                                                \'has-error\': overallResponsibleCtrl.controls[\'email\'].invalid && overallResponsibleCtrl.controls[\'email\'].touched\r\n                                            }">\r\n                                            <label for="OREmail" class="control-label">\r\n                                                {{\'Counterpart.Email\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="256" type="text" id="OREmail" class="form-control" formControlName="email">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="group-control">\r\n                    <div class="form-group">\r\n                        <div class="pmd-switch">\r\n                            <label>\r\n                                <input type="checkbox" [formControl]="counterpartInfoForm.controls[\'isSignature\']" (change)="isSignaturechange()">\r\n                                <span class="pmd-switch-label"></span>\r\n                            </label>\r\n                            <span class="pmd-switch__text"><strong>{{\'Counterpart.CompanyHasSignaturePerson\' | translate}}</strong></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="pl30" *ngIf="counterpartInfoForm.controls[\'isSignature\'].value">\r\n                        <div class="row" formGroupName="signaturePerson">\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.TitleTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': signaturePersonCtrl.controls[\'title\'].value,\r\n                                                \'has-error\': signaturePersonCtrl.controls[\'title\'].invalid && signaturePersonCtrl.controls[\'title\'].touched\r\n                                            }">\r\n                                            <label for="SignaturePersonTitle" class="control-label">\r\n                                                {{\'Counterpart.Title\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="50" type="text" id="SignaturePersonTitle" class="form-control" formControlName="title">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clearfix"></div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.FirstNameTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': signaturePersonCtrl.controls[\'firstName\'].value,\r\n                                                \'has-error\': signaturePersonCtrl.controls[\'firstName\'].invalid && signaturePersonCtrl.controls[\'firstName\'].touched\r\n                                            }">\r\n                                            <label for="SignaturePersonfirstName" class="control-label">\r\n                                                {{\'Counterpart.FirstName\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="128" type="text" id="SignaturePersonfirstName" class="form-control" formControlName="firstName">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.LastNameTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': signaturePersonCtrl.controls[\'lastName\'].value,\r\n                                                \'has-error\': signaturePersonCtrl.controls[\'lastName\'].invalid && signaturePersonCtrl.controls[\'lastName\'].touched\r\n                                            }">\r\n                                            <label for="SignaturePersonlastName" class="control-label">\r\n                                                {{\'Counterpart.LastName\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="128" type="text" id="SignaturePersonlastName" class="form-control" formControlName="lastName">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="clearfix"></div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.PhoneTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': signaturePersonCtrl.controls[\'phone\'].value,\r\n                                                \'has-error\': signaturePersonCtrl.controls[\'phone\'].invalid && signaturePersonCtrl.controls[\'phone\'].touched\r\n                                            }">\r\n                                            <label for="SignaturePersonPhone" class="control-label">\r\n                                                {{\'Counterpart.Phone\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="50" type="text" id="SignaturePersonPhone" class="form-control" formControlName="phone">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-xs-6">\r\n                                <div class="help-form-group">\r\n                                    <div class="help-form-group__icon">\r\n                                        <i class="material-icons pmd-tooltip">help_outline</i>\r\n                                        <div class="help-form-group__help-text">\r\n                                            {{\'Counterpart.EmailTooltip\' | translate}}\r\n                                        </div>\r\n                                    </div>\r\n                                    <div class="help-form-group__form">\r\n                                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\r\n                                                \'pmd-textfield-floating-label-completed\': signaturePersonCtrl.controls[\'email\'].value,\r\n                                                \'has-error\': signaturePersonCtrl.controls[\'email\'].invalid && signaturePersonCtrl.controls[\'email\'].touched\r\n                                            }">\r\n                                            <label for="SignaturePersonEmail" class="control-label">\r\n                                                {{\'Counterpart.Email\' | translate}}\r\n                                            </label>\r\n                                            <input maxlength="256" type="text" id="SignaturePersonEmail" class="form-control" formControlName="email">\r\n                                            <span class="pmd-textfield-focused"></span>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="mt30">\r\n            <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary" type="submit">{{\'General.SaveAndContinue\' | translate}}</button>\r\n        </div>\r\n        <div class="mt20"></div>\r\n    </form>\r\n</div>'},uSON:function(e,t){e.exports='<span>{{\'General.AreYouSure\' | translate}}</span>\r\n<div class="pull-right">\r\n    <button mat-dialog-close class="mt20 btn btn-default pmd-ripple-effect">{{\'General.Cancel\' | translate}}</button>\r\n    <button mat-dialog-close="true" class="mt20 btn pmd-btn-raised pmd-ripple-effect btn-primary">{{\'General.Delete\' | translate}}</button>\r\n</div>'},wWUL:function(e,t){e.exports='<div class="container">\r\n    <div class="row">\r\n        <div class="col-xs-6">\r\n            <h1>{{ \'Persondata.Title\' | translate }}</h1>\r\n            <p>{{ \'Persondata.Description\' | translate }}</p>\r\n        </div>\r\n    </div>\r\n    <div class="mt20"></div>\r\n    <div class="main-tab-group">\r\n        <nav mat-tab-nav-bar>\r\n            <a mat-tab-link\r\n                routerLink="justification"\r\n                routerLinkActive #rla="routerLinkActive"\r\n                [active]="rla.isActive">\r\n                {{\'Persondata.Justifications\' | translate}}\r\n            </a>\r\n            <a mat-tab-link\r\n                routerLink="3rd-party-country-transfer"\r\n                routerLinkActive #rlsa="routerLinkActive"\r\n                [active]="rlsa.isActive">\r\n                {{\'Persondata.3rdPartyCountryTransfer\' | translate}}\r\n            </a>\r\n        </nav>\r\n        <div class="mat-tab-body-content">\r\n            <router-outlet></router-outlet>\r\n        </div>\r\n    </div>\r\n</div>'},x09w:function(e,t){e.exports='<div class="container" *ngIf="isReady">\r\n    <button class="btn-link no-padding" routerLink="/gdpr/management/risk">\r\n        <i class="material-icons">arrow_back</i>\r\n    </button>\r\n    <div class="panel">\r\n        <div class="panel-body">\r\n            <h2>{{\'Risk.ManagementTitle\' | translate}}</h2>\r\n            <form [formGroup]="riskManagementForm" (ngSubmit)="onSubmit(riskManagementForm.value)">\r\n                <div class="row">\r\n                    <div class="col-xs-6">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'riskName\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'riskName\'].invalid && riskManagementForm.controls[\'riskName\'].touched\r\n                        }">\r\n                            <label for="riskName" class="control-label">{{\'Risk.RiskName\' | translate}}</label>\r\n                            <input class="form-control" id="riskName" type="text" name="riskName" [formControl]="riskManagementForm.controls[\'riskName\']">\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-6">\r\n\r\n                    </div>\r\n                    <div class="clearfix"></div>\r\n                    <div class="col-xs-6">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'riskDescription\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'riskDescription\'].invalid && riskManagementForm.controls[\'riskDescription\'].touched\r\n                        }">\r\n                            <label for="riskName" class="control-label">{{\'Risk.RiskDescription\' | translate}}</label>\r\n                            <textarea class="form-control" [formControl]="riskManagementForm.controls[\'riskDescription\']" cols="30" rows="10"></textarea>\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-6">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'riskLegel\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'riskLegel\'].invalid && riskManagementForm.controls[\'riskLegel\'].touched\r\n                        }">\r\n                            <label for="riskName" class="control-label">{{\'Risk.LegelReference\' | translate}}</label>\r\n                            <textarea class="form-control" [formControl]="riskManagementForm.controls[\'riskLegel\']" cols="30" rows="10"></textarea>\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="clearfix"></div>\r\n                    <div class="col-xs-3">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'riskOwnerId\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'riskOwnerId\'].invalid && riskManagementForm.controls[\'riskOwnerId\'].touched\r\n                        }">\r\n                            <label class="control-label">\r\n                                {{\'Risk.RiskOwner\' | translate}}\r\n                            </label>\r\n                            <ng-select [formControl]="riskManagementForm.controls[\'riskOwnerId\']" [options]="defineRiskOwner" noFilter="10">\r\n                            </ng-select>\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-3">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'riskResponsibleId\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'riskResponsibleId\'].invalid && riskManagementForm.controls[\'riskResponsibleId\'].touched\r\n                        }">\r\n                            <label class="control-label">\r\n                                {{\'Risk.RiskResponsible\' | translate}}\r\n                            </label>\r\n                            <ng-select [formControl]="riskManagementForm.controls[\'riskResponsibleId\']" [options]="defineRiskOwner" noFilter="10">\r\n                            </ng-select>\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-3">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'riskType\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'riskType\'].invalid && riskManagementForm.controls[\'riskType\'].touched\r\n                        }">\r\n                            <label class="control-label">\r\n                                {{\'Risk.RiskType\' | translate}}\r\n                            </label>\r\n                            <ng-select [formControl]="riskManagementForm.controls[\'riskType\']" [options]="listRiskTypeOptions" noFilter="10">\r\n                            </ng-select>\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-3">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'\r\n                            pmd-textfield-floating-label-completed\': riskManagementForm.controls[\'organizationLevel\'].value,\r\n                            \'has-error\': riskManagementForm.controls[\'organizationLevel\'].invalid && riskManagementForm.controls[\'organizationLevel\'].touched\r\n                        }">\r\n                            <label class="control-label">\r\n                                {{\'Risk.OrganizatationLevel\' | translate}}\r\n                            </label>\r\n                            <ng-select [formControl]="riskManagementForm.controls[\'organizationLevel\']" [options]="listRiskOrganizationOptions" noFilter="10">\r\n                            </ng-select>\r\n                            <span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="row">\r\n                    <div class="col-xs-6">\r\n                        <h3>{{\'Risk.RiskAssessment\' | translate}}</h3>\r\n                        <table>\r\n                            <tr>\r\n                                <td style="vertical-align: bottom;">\r\n                                    <img src="assets/images/risk-impact.png" alt="">\r\n                                </td>\r\n                                <td>\r\n                                    <table class="assessment">\r\n                                        <tr *ngFor="let row of assessment">\r\n                                            <td *ngFor="let cell of row.cols">\r\n                                                <div class="assessment-item" (click)="clickRiskAssessment(row.row, cell.id)" [ngClass]="{\r\n                                                                                                                                    \'yellow\': cell.color == \'yellow\',\r\n                                                                                                                                    \'green\': cell.color == \'green\',\r\n                                                                                                                                    \'red\': cell.color == \'red\',\r\n                                                                                                                                    \'active\': cell.active\r\n                                                                                                                                }">\r\n                                                </div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td></td>\r\n                                <td>\r\n                                    <img src="assets/images/risk-likehood.png" alt="">\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div class="col-xs-6" *ngIf="!isAddNew">\r\n                        <h3>{{\'Risk.AssociatedTask\' | translate}}</h3>\r\n                        <div class="risk-item__task-area">\r\n                            <div class="row">\r\n                                <div class="col-xs-6">\r\n                                    <div class="risk-item__task-header">\r\n                                        <div class="sub">{{riskDetailData.taskNonSchedule}}/{{riskDetailData.assosciatedTask.length}}</div>\r\n                                        <strong>{{ \'Risk.NonScheduleTask\' | translate }}</strong>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-xs-6">\r\n                                    <div class="risk-item__task-header">\r\n                                        <div class="sub">{{riskDetailData.assosciatedTask.length - riskDetailData.taskNonSchedule}}/{{riskDetailData.assosciatedTask.length}}</div>\r\n                                        <strong>{{ \'Risk.ScheduleTask\' | translate }}</strong>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="row row-eq-height">\r\n                                <div class="col-xs-6">\r\n                                    <div class="dark-area">\r\n                                        <div *ngFor="let task of riskDetailData.assosciatedTask">\r\n                                            <div *ngIf="task.taskStatus == 1" class="small-task-item">\r\n                                                <div class="small-task-item__inner">\r\n                                                    <div class="small-task-item__name">\r\n                                                        <i class="material-icons">view_list</i>\r\n                                                        <strong>{{task.processName}}:</strong> {{task.taskName}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div class="col-xs-6">\r\n                                    <div class="dark-area">\r\n                                        <div *ngFor="let task of riskDetailData.assosciatedTask">\r\n                                            <div *ngIf="task.taskStatus != 1" class="small-task-item">\r\n                                                <div class="small-task-item__inner">\r\n                                                    <div class="small-task-item__name">\r\n                                                        <i class="material-icons">view_list</i>\r\n                                                        <strong>{{task.processName}}:</strong> {{task.taskName}}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="mt20"></div>\r\n                <div class="row">\r\n                    <div class="col-xs-6">\r\n                        <div class="pmd-switch">\r\n                            <label>\r\n                                <input type="checkbox" [formControl]="riskManagementForm.controls[\'isPublished\']">\r\n                                <span class="pmd-switch-label"></span>\r\n                            </label>\r\n                            <span class="pmd-switch__text">{{\'Risk.isPublicLabel\' | translate}}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-6">\r\n                        <div class="text-right">\r\n                            <a class="btn btn-link" routerLink="/gdpr/management/risk">{{\'Risk.Cancel\' | translate}}</a>\r\n                            <button class="btn btn-primary" type="submit">{{\'Risk.SaveAndContinue\' | translate}}</button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    </div>\r\n</div>'},xNU5:function(e,t){e.exports='<modal-dialog [(modalDialog)]="warningDialog">\r\n    <p *ngIf="isOpenMaxStorageQuotaWarning">{{\'General.MaxStorageQuotaReached\' | translate}}</p>\r\n    <p *ngIf="!isOpenMaxStorageQuotaWarning">{{\'General.CantDownloadPDFWarning\' | translate}}</p>\r\n    <div class="pmd-modal-bordered text-right">\r\n        <button class="btn pmd-ripple-effect btn-primary" type="button" (click)="goToSubscription()">{{\'General.OK\' | translate}}</button>\r\n    </div>\r\n</modal-dialog>\r\n<div class="container" *ngIf="readyToLoad">\r\n    <button class="btn-link no-padding" routerLink="/gdpr/management/policy">\r\n        <i class="material-icons">arrow_back</i>\r\n    </button>\r\n    <modal-dialog [(modalDialog)]="deleteConfirm">\r\n        <div class="form-group">\r\n            {{ \'Policy.ConfirmDelete\' | translate }}\r\n        </div>\r\n        <div class="text-right">\r\n            <button type="submit" class="btn btn-danger" (click)="delete()">{{ \'General.DeleteBtn\' | translate }}</button>\r\n            <button type="submit" class="btn btn-default" (click)="closeDelete()">{{ \'General.CancelBtn\' | translate }}</button>\r\n        </div>\r\n    </modal-dialog>\r\n    <h1>{{ \'Policy.ManagePolicy\' | translate }}</h1>\r\n    <div class="row row-eq-height">\r\n        <div class="col-xs-4">\r\n            <div class="panel manage-panel">\r\n                <div class="panel-body">\r\n                    {{ \'Policy.Process\' | translate }}:\r\n                    <strong>{{policyDetail.processName}}</strong>\r\n                    <br> {{ \'Policy.PolicyType\' | translate }}:\r\n                    <strong>{{ (\'Policy.\' + policyDetail.policyType) | translate }}</strong>\r\n                    <br> {{ \'General.Version\' | translate }}:\r\n                    <strong>{{policyDetail.version}}</strong>\r\n                    <br> {{ \'General.Last-Revised\' | translate }}:\r\n                    <strong>{{policyDetail.lastUpdated | dateformatpipe: true}}</strong>\r\n                    <br> {{ \'General.Responsible\' | translate }}:\r\n                    <strong>{{policyDetail.responsible}}</strong>\r\n                    <br>\r\n                    <div class="lock mt10">\r\n                        <i class="material-icons" *ngIf="policyDetail.isLocked" (click)="clickLock()">lock</i>\r\n                        <i class="material-icons" (click)="clickLock()" *ngIf="!policyDetail.isLocked">lock_open</i>\r\n                        <span>{{ \'General.LockNote\' | translate }}</span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-xs-4">\r\n            <div class="panel manage-panel">\r\n                <div class="panel-body">\r\n                    <strong>{{ \'General.UploadBoxTitle\' | translate }}</strong>\r\n                    <form method="post" enctype="multipart/form-data" *ngIf="!isUploaded">\r\n                        <div class="row">\r\n                            <div class="col-xs-8">\r\n                                <div class="form-group pmd-textfield">\r\n                                    <label for="Upload" class="control-label">\r\n                                        {{ \'General.ClickToUpload\' | translate }}\r\n                                    </label>\r\n                                    <input type="file" accept="image/png,image/bmp,image/gif,image/jpeg,text/csv,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet,application/vnd.ms-excel,application/msword,application/vnd.openxmlformats-officedocument.wordprocessingml.document,application/vnd.ms-powerpoint,application/vnd.openxmlformats-officedocument.presentationml.presentation,application/pdf,application/zip,text/*"\r\n                                        class="btn btn-sm btn-default" ng2FileSelect [uploader]="uploader" class="form-control">\r\n                                    <span class="pmd-textfield-focused"></span>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-xs-4">\r\n                                <button class="btn btn-sm btn-primary mt20" type="button" (click)="uploader.uploadAll()">\r\n                                    <i class="material-icons pmd-xs upload-button">send</i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <ul class="list-group" *ngIf="isUploaded">\r\n                        <li class="list-group-item">\r\n                            <div class="media-left media-middle">\r\n                                <i class="material-icons pmd-xs">attach_file</i>\r\n                            </div>\r\n                            <div class="media-body media-middle">\r\n                                {{fileName}}\r\n                            </div>\r\n                            <i class="material-icons md-dark media-middle download" (click)="download()" title="{{\'General.Download\' | translate}}">cloud_download</i>\r\n                            <i class="material-icons md-dark media-middle delete" (click)="confirmDelete()" title="{{\'General.Delete\' | translate}}">delete</i>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-xs-4">\r\n            <div class="panel manage-panel">\r\n                <div class="panel-body">\r\n                    <strong>{{ \'General.History\' | translate }}</strong>\r\n                    <div *ngIf="!policyHistory || policyHistory.length == 0" [innerHtml]="(\'General.NoHistory\' | translate)"></div>\r\n                    <div class="mt10 scroll-history" *ngIf="policyHistory && policyHistory.length > 0">\r\n                        <div *ngFor="let item of policyHistory" class="history-item">\r\n                            <div class="media-left">\r\n                                <span class="btn-avatar">\r\n                                    <div class="user_logo">{{item.avatarName}}</div>\r\n                                </span>\r\n                            </div>\r\n                            <div class="media-body media-middle">\r\n                                <h3 class="pmd-card-title-text">{{item.owner}}</h3>\r\n                                <span class="pmd-card-subtitle-text" [innerHtml]="\r\n                                item.fileChanged ?(\'General.HistoryFileUpdated\' | translate: {owner: item.owner, fieldName: (item.fieldName | translate), newValue: item.newValue})\r\n                                :(\r\n                                    item.oldValue ? \r\n                                    (\'Policy.HistoryUpdated\' | translate: {owner: item.owner, fieldName: (item.fieldName | translate), oldValue: item.oldValue, newValue: item.newValue}) :\r\n                                    (\'Policy.HistoryAddNew\' | translate: {owner: item.owner, newValue:item.newValue,fieldName: (item.fieldName | translate)}))">\r\n                                </span>\r\n                            </div>\r\n                            <div class="media-right">\r\n                                {{item.date | dateformatpipe: true}}\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="form-group mt20">\r\n        <div class="pmd-switch">\r\n            <label>\r\n                <input id="hasSubCompany" [(ngModel)]="useExisting" type="checkbox" (change)="useExistingChange()" [disabled]="policyDetail.isLocked">\r\n                <span class="pmd-switch-label"></span>\r\n            </label>\r\n            <span class="pmd-switch__text">{{ \'Policy.UseAnExistingPolicy\' | translate }}</span>\r\n        </div>\r\n    </div>\r\n    <div class="panel" *ngIf="!policyDetail.useExisting">\r\n        <div class="panel-body">\r\n            <div class="lock-area">\r\n                <div class="lock-area__backdrop" *ngIf="policyDetail.isLocked"></div>\r\n                \x3c!-- <div *dynamicComponent="templateHTML"></div> --\x3e\r\n                <ng-template dynamic-template [template]="templateHTML" [extraModules]="ExtraModule"></ng-template>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="mt20">\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-primary" (click)="save()">{{\'General.Save\' | translate}}</button>\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-default" routerLink="/gdpr/management/policy">{{\'General.Cancel\' | translate}}</button>\r\n        <button class="btn btn-lg pmd-btn-raised pmd-ripple-effect btn-default" [disabled]="!isHasContent" (click)="downloadPDF()">{{\'General.DownloadAsPdf\' | translate}}</button>\r\n    </div>\r\n    <div class="mt20"></div>\r\n\r\n</div>'}});