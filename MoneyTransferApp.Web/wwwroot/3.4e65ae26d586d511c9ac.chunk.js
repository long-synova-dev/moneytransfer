webpackJsonp([3],{"27qv":function(r,e,t){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=t("WT6e"),a=t("Xjw4"),o=t("7DMc"),s=t("8A5H"),i=t("ItHS"),l=t("obU/"),c=t("lYsT"),d=t("OE0E"),p=t("Va+s"),m=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},u=this&&this.__metadata||function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},g=function(){function r(r,e,t,n){this._data=r,this._translate=e,this._meta=t,this._loadScript=n}return r.prototype.ngOnInit=function(){var r=this._data.getDefaultLanguage();this._translate.setDefaultLang(r),this.addClassStyle()},r.prototype.ngOnDestroy=function(){this.removeClassStyle()},r.prototype.addClassStyle=function(){var r=document.getElementsByTagName("body");this._meta.updateTag({name:"viewport",content:"width=device-width, initial-scale=1"}),r[0].classList.add("userModule")},r.prototype.removeClassStyle=function(){var r=document.getElementsByTagName("body");this._meta.updateTag({name:"viewport",content:"initial-scale=1, maximum-scale=1"}),r[0].classList.remove("userModule")},r=m([Object(n.Component)({selector:"user-page",template:"\n        <router-outlet></router-outlet>\n    "}),u("design:paramtypes",[c.a,s.c,d.Meta,p.a])],r)}(),f=t("bfOx"),h=t("byKF"),v=t("ZKJB"),b=t("fln1"),_=t("3Bd6"),y=t("mn3z"),S=t("lOQM"),x=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},F=this&&this.__metadata||function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},w=function(){function r(r,e,t,n,a,o,s,i,l){var c=this;this._UserService=r,this._router=e,this._activatedRouter=t,this._formBuilder=n,this._translate=a,this._data=o,this._alert=s,this._companyInfoService=i,this._intercom=l,this.isOpenMobileAlert=!1,this._translate.get("Login.NotificationTitle").subscribe(function(r){return c.confirmDialog=new _.a(r,"modal-md",!1)})}return r.prototype.ngOnInit=function(){if(this.userLogout(),this._data.updateActiveToken(!1),localStorage.getItem("isRememberMe")){this.isRememberMe=!0;var r={};r.companyNumber=localStorage.getItem("companyNumber"),r.email=localStorage.getItem("email"),this.formInit(r)}else this.formInit(null);this.returnUrl=this._activatedRouter.snapshot.queryParams.returnUrl||"/"},r.prototype.formInit=function(r){this.loginForm=this._formBuilder.group({companyNumber:[r&&r.companyNumber?r.companyNumber:null,o.Validators.required],email:[r&&r.email?r.email:null,o.Validators.compose([o.Validators.required,o.Validators.pattern(h.a.EMAIL_REGEX_VALIDATE)])],password:[null,o.Validators.required]})},r.prototype.userLogout=function(){var r=this;localStorage.getItem("accessToken")&&this._UserService.userLogout().then(function(){return r.clearStorageAndBackToLogin()}).catch(function(){return r.clearStorageAndBackToLogin()})},r.prototype.clearStorageAndBackToLogin=function(){localStorage.removeItem("accessToken"),localStorage.removeItem("refreshToken"),window.location.reload()},r.prototype.startChat=function(){this._intercom.show()},r.prototype.onSubmit=function(r){var e=this;document.documentElement.clientWidth<750?this.isOpenMobileAlert=!0:(this.resendEmail=!1,this._data.changeLoadStatus(!0),this._UserService.getTokenService(r).then(function(r){r&&r.errors&&r.errors.length>0?(e._data.changeLoadStatus(!1),e.errorMessenger=[],r.errors.forEach(function(r){e._translate.get("Login."+r).subscribe(function(r){return e.errorMessenger.push(r)}),"EmailNotConfirmed"===r&&(e.resendEmail=!0)})):(e.isRememberMeCheck(e.isRememberMe),localStorage.setItem("accessToken",r.accessToken),localStorage.setItem("expireAt",r.expireAt),localStorage.setItem("issueAt",r.issueAt),localStorage.setItem("plan",r.plan),localStorage.setItem("refreshToken",r.refreshToken),localStorage.setItem("roles",r.roles),localStorage.setItem("sessionTime",r.sessionTime),e._data.changeLoadStatus(!1),e._UserService.getCurrentUser().then(function(r){localStorage.setItem("lang",JSON.stringify({languageId:r.language,languageCode:r.locale}))}),e._companyInfoService.isGdprProgramGenerated().then(function(t){e._data.setGdprProgramGenerated(t),r.inTrial||"active"===r.state?t.isGenerated?e._router.navigate([e.returnUrl]):e._router.navigate(["/gdpr-wizard"]):(r.roles.indexOf("R2")>-1||r.roles.indexOf("R3")>-1?"no_subscription"===r.state?(e._translate.get("Login."+r.state).subscribe(function(r){return e.subscriptionMessage=r}),e.redirectTo="/billing-plan"):(e._translate.get("Login."+r.state).subscribe(function(r){return e.subscriptionMessage=r}),e.redirectTo="/billing-plan/current"):e._translate.get("Login.SubsriptionExpiredForPerformerReviewer").subscribe(function(r){return e.subscriptionMessage=r}),e._translate.get("Login.NotificationTitle").subscribe(function(r){return e.confirmDialog=new _.a(r,"modal-md",!1)}),e.confirmDialog.visible=!0)}))}))},r.prototype.goToSubscription=function(){window.location.href=this.redirectTo},r.prototype.closeMoblieAlert=function(){this.isOpenMobileAlert=!1},r.prototype.isRememberMeCheck=function(r){r?(localStorage.setItem("isRememberMe",this.isRememberMe),localStorage.setItem("companyNumber",this.loginForm.value.companyNumber),localStorage.setItem("email",this.loginForm.value.email)):(localStorage.removeItem("isRememberMe"),localStorage.removeItem("companyNumber"),localStorage.removeItem("email"))},r.prototype.resendEmailConfirm=function(r){var e=this;this._UserService.resendEmailConfirm(r).then(function(r){"Success"==r.message?(e.resendEmail=!1,e._translate.get("Login.ResendEmailSuccess").subscribe(function(r){return e._alert.success(r)})):e._translate.get("Login.ResendEmailFailed").subscribe(function(r){return e._alert.error(r)})})},r=x([Object(n.Component)({template:t("L9+q"),styles:[t("pHAU")]}),F("design:paramtypes",[v.a,f.Router,f.ActivatedRoute,o.FormBuilder,s.c,c.a,b.a,y.a,S.Intercom])],r)}(),R=t("ZYKu"),P=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},L=this&&this.__metadata||function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},k=function(){function r(r,e,t,n,a,s,i){this._data=r,this._formBuilder=e,this._userService=t,this._router=n,this._translate=a,this._alert=s,this._intercom=i,this.isDK=!1,this.signupForm=e.group({firstName:[null,o.Validators.required],lastName:[null,o.Validators.required],companyName:[null,o.Validators.required],phoneNumber:[null,o.Validators.required],email:[null,o.Validators.compose([o.Validators.required,o.Validators.pattern(h.a.EMAIL_REGEX_VALIDATE)])],password:[null,o.Validators.compose([o.Validators.required,o.Validators.pattern(h.a.PASSWORD_REGEX_VALIDATE)])],confirmPassword:[null,o.Validators.compose([o.Validators.required])],acceptedPolicy:[null,o.Validators.requiredTrue],languageId:[null],countryVatCode:[null,o.Validators.required],vatRegistrationNo:[null,o.Validators.required]},{validator:R.a.MatchPassword}),this.successModal=new _.a("SignUp Success","modal-md",!1)}return r.prototype.ngOnInit=function(){var r=this;this._userService.getListVats().then(function(e){r.listVats=e,r.signupForm.controls.countryVatCode.setValue(e[0].value)});var e=localStorage.getItem("lang");"da-DK"==JSON.parse(e).languageCode&&(this.isDK=!0)},r.prototype.shutdownChat=function(){this._intercom.shutdown()},r.prototype.startChat=function(){this._intercom.show()},r.prototype.gotoPolicy=function(){},r.prototype.onSubmit=function(r){var e,t=this;this._data.changeLoadStatus(!0),localStorage.getItem("lang")&&(e=JSON.parse(localStorage.getItem("lang")).languageId),r.languageId=e,console.log(r),this._userService.registerService(r).then(function(r){r&&r.errors&&r.errors.length>0?(t._data.changeLoadStatus(!1),t.errorMessenger=[],r.isExisted?t._translate.get("SignUp.AccountOwnerExisted").subscribe(function(r){return t.errorMessenger.push(r)}):r.errors.forEach(function(r){t._translate.get("SignUp."+r).subscribe(function(r){return t.errorMessenger.push(r)})})):(t._data.changeLoadStatus(!1),t._translate.get("SignUp.SuccessSignUpModal").subscribe(function(r){return t.successModal=new _.a(r,"modal-md",!1)}),t.successModal.visible=!0)})},r.prototype.goLogin=function(){this._router.navigate(["/account"])},r=P([Object(n.Component)({template:t("NbhF"),styles:[t("pHAU")]}),L("design:paramtypes",[c.a,o.FormBuilder,v.a,f.Router,s.c,b.a,S.Intercom])],r)}(),I=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},C=this&&this.__metadata||function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},N=function(){function r(r,e,t,n,a,s){this._formBuilder=r,this._userService=e,this._alert=t,this._translate=n,this._intercom=a,this._router=s,this.resetForm=r.group({email:[null,o.Validators.compose([o.Validators.required,o.Validators.pattern(h.a.EMAIL_REGEX_VALIDATE)])]})}return r.prototype.shutdownChat=function(){this._intercom.shutdown()},r.prototype.startChat=function(){this._intercom.show()},r.prototype.onSubmit=function(r){var e,t=this;console.log(r),localStorage.getItem("lang")&&(e=JSON.parse(localStorage.getItem("lang")).languageId),r.languageId=e,this._userService.forgotPassword(r).then(function(r){"Success"==r.message?(t._translate.get("ResetPass.Success").subscribe(function(r){return t._alert.success(r,null,!0,!0)}),t._router.navigate(["account","login"])):t._translate.get("ResetPass.EmailNoExist").subscribe(function(r){return t._alert.error(r,null,!0,!0)})})},r=I([Object(n.Component)({template:t("jXo+"),styles:[t("pHAU")]}),C("design:paramtypes",[o.FormBuilder,v.a,b.a,s.c,S.Intercom,f.Router])],r)}(),E=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},T=this&&this.__metadata||function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},M=function(){function r(r,e,t,n,a,o,s){this._formBuilder=r,this._userService=e,this._router=t,this._activatedRoute=n,this._data=a,this._alert=o,this._translate=s}return r.prototype.ngOnInit=function(){var r=this;this._activatedRoute.queryParams.subscribe(function(e){r.userInfo=e,r.formInit(e)})},r.prototype.formInit=function(r){this.changePassForm=this._formBuilder.group({email:[r.u],code:[r.p],password:[null,o.Validators.compose([o.Validators.required,o.Validators.pattern(h.a.PASSWORD_REGEX_VALIDATE)])],confirmPassword:[null,o.Validators.compose([o.Validators.required])],companyNumber:[r.c]},{validator:R.a.MatchPassword})},r.prototype.onSubmit=function(r){var e=this;this._data.changeLoadStatus(!0),this._userService.resetPassword(r).then(function(r){e._data.changeLoadStatus(!1),e.resetPass=r,"ResetPass.Success"==e.resetPass.message?(e._translate.get("ResetPass.Success").subscribe(function(r){return e._alert.success(r,null,!0,!0)}),e._router.navigate(["account","login"])):e._translate.get("ResetPass.ChangePassFailed").subscribe(function(r){return e._alert.error(r,null,!0,!0)})})},r=E([Object(n.Component)({template:t("rzeJ"),styles:[t("pHAU")]}),T("design:paramtypes",[o.FormBuilder,v.a,f.Router,f.ActivatedRoute,c.a,b.a,s.c])],r)}(),U=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},q=this&&this.__metadata||function(r,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(r,e)},O=function(){function r(r,e,t,n,a,o){this._userService=r,this._router=e,this._activatedRoute=t,this._data=n,this._alert=a,this._translate=o,this.status="Verifying",this.isSuccess=!1}return r.prototype.ngOnInit=function(){var r=this;this._activatedRoute.queryParams.subscribe(function(e){r.userInfo=e,r.model={email:e.u,code:e.p,companyNumber:e.c},r.confirmSignup(r.model)})},r.prototype.confirmSignup=function(r){var e=this;this._userService.confirmSignup(r).then(function(r){var t=r;"Success"==t.message?(e.isSuccess=!0,e._translate.get("Manage.Success").subscribe(function(r){t.show&&e._alert.success(r),e.status=r})):"InvalidToken"==t.error?e._translate.get("Login.InvalidToken").subscribe(function(r){t.show&&e._alert.error(r),e.status=r}):e._translate.get("Manage.Failed").subscribe(function(r){t.show&&e._alert.success(r),e.status=r})})},r=U([Object(n.Component)({template:t("cyI1"),styles:[t("pHAU")]}),q("design:paramtypes",[v.a,f.Router,f.ActivatedRoute,c.a,b.a,s.c])],r)}(),V=t("ZIaS"),A=[{path:"",component:g,children:[{path:"",redirectTo:"login"},{path:"login",component:w},{path:"signup",component:k},{path:"forgot-password",component:N},{path:"change-password",component:M},{path:"confirm-signup",component:O}]}],j=f.RouterModule.forChild(A),D=t("Ot1C"),z=t("fYrX");t.d(e,"UserModule",function(){return G}),e.HttpLoaderFactory=K;var B=this&&this.__decorate||function(r,e,t,n){var a,o=arguments.length,s=o<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,t):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)s=Reflect.decorate(r,e,t,n);else for(var i=r.length-1;i>=0;i--)(a=r[i])&&(s=(o<3?a(s):o>3?a(e,t,s):a(e,t))||s);return o>3&&s&&Object.defineProperty(e,t,s),s},G=function(){function r(){}return r=B([Object(n.NgModule)({imports:[a.CommonModule,j,o.FormsModule,V.a,o.ReactiveFormsModule,s.b.forChild({loader:{provide:s.a,useFactory:K,deps:[i.HttpClient]},isolate:!0}),z.a],declarations:[g,w,k,N,M,O],providers:[D.a]})],r)}();function K(r){return new l.a(r,"/assets/i18n/","-user.json")}},"L9+q":function(r,e){r.exports='<modal-dialog [(modalDialog)]="confirmDialog">\r\n    <p>{{subscriptionMessage}}</p>\r\n    <div class="pmd-modal-bordered text-right">\r\n        <button *ngIf="redirectTo" class="btn pmd-ripple-effect btn-primary" type="button" (click)="goToSubscription()">OK</button>\r\n        <button *ngIf="!redirectTo" class="btn pmd-ripple-effect btn-primary" type="button" (click)="confirmDialog.visible = false">OK</button>\r\n    </div>\r\n</modal-dialog>\r\n<div class="container">\r\n<div class="row">\r\n  <div class="col-md-5 col-md-offset-1">\r\n      <div class="account-help-block mb20">\r\n          <div class="text-center">\r\n              <img src="assets/images/icon-bubble.png" alt="" />\r\n          </div>\r\n          <h1 class="account-help-block__title">{{\'Login.Motto\' | translate}}</h1>\r\n          <p class="account-help-block__desc">{{\'Login.Blurb\' | translate}}</p>\r\n          <a title="" class="account-help-block__link" (click)="startChat()">{{\'Login.StartChat\' | translate}}</a>\r\n      </div>\r\n  </div>\r\n  <div class="col-md-5 col-md-offset-1">\r\n      <div class="panel panel-default">\r\n          <div class="panel-body">\r\n              <h2 class="title text-center">{{\'Login.LoginFormTitle\' | translate}}</h2>\r\n\r\n              <div class="from-error bg-danger" *ngIf="errorMessenger">\r\n                  <span *ngFor="let errorMessage of errorMessenger">{{errorMessage}}</span>\r\n                  <span *ngIf="resendEmail"><a (click)="resendEmailConfirm(loginForm.value)">Resend confirmation email?</a></span>\r\n              </div>\r\n\r\n              <form [formGroup]="loginForm" (ngSubmit)="onSubmit(loginForm.value)">\r\n                    <div class="form-group pmd-textfield pmd-textfield-floating-label"\r\n                    [ngClass]="{\r\n                        \'pmd-textfield-floating-label-completed\': loginForm.controls[\'companyNumber\'].value,\r\n                        \'has-error\':!loginForm.controls[\'companyNumber\'].valid && loginForm.controls[\'companyNumber\'].touched\r\n                    }">\r\n                        <label for="companyNumber" class="control-label pmd-input-group-label">{{\'Login.CompanyNumb\' | translate}}</label>\r\n                        <div class="input-group">\r\n                            <div class="input-group-addon"><i class="material-icons">account_balance</i></div>\r\n                            <input class="form-control" id="companyNumber" type="text" name="companyNumber" [formControl]="loginForm.controls[\'companyNumber\']"><span class="pmd-textfield-focused"></span>\r\n                        </div>\r\n                        <div *ngIf="loginForm.controls[\'companyNumber\'].hasError(\'required\') && loginForm.controls[\'companyNumber\'].touched" class="help-block">\r\n                              {{\'Login.CompanyNumbRequired\' | translate}}\r\n                        </div>\r\n                    </div>\r\n                  <div class="form-group pmd-textfield pmd-textfield-floating-label"\r\n                  [ngClass]="{\r\n                        \'pmd-textfield-floating-label-completed\': loginForm.controls[\'email\'].value,\r\n                        \'has-error\':!loginForm.controls[\'email\'].valid && loginForm.controls[\'email\'].touched\r\n                    }">\r\n                      <label for="loginEmail" class="control-label pmd-input-group-label">{{\'Login.Email\' | translate}}</label>\r\n                      <div class="input-group">\r\n                          <div class="input-group-addon"><i class="material-icons">mail_outline</i></div>\r\n                          <input class="form-control" id="loginEmail" type="email" name="email" [formControl]="loginForm.controls[\'email\']"><span class="pmd-textfield-focused"></span>\r\n                      </div>\r\n                      <div *ngIf="loginForm.controls[\'email\'].hasError(\'required\') && loginForm.controls[\'email\'].touched" class="help-block">\r\n                            {{\'Login.EmailRequired\' | translate}}\r\n                      </div>\r\n                      <div *ngIf="!loginForm.controls[\'email\'].hasError(\'required\') && loginForm.controls[\'email\'].hasError(\'pattern\') && loginForm.controls[\'email\'].touched" class="help-block">\r\n                            {{\'Login.EmailInvalid\' | translate}}\r\n                      </div>\r\n                  </div>\r\n                  <div class="form-group pmd-textfield pmd-textfield-floating-label"\r\n                    [ngClass]="{\r\n                        \'pmd-textfield-floating-label-completed\': loginForm.controls[\'password\'].value,\r\n                        \'has-error\':!loginForm.controls[\'password\'].valid && loginForm.controls[\'password\'].touched\r\n                    }">\r\n                      <label for="password" class="control-label pmd-input-group-label">{{\'Login.Password\' | translate}}</label>\r\n                      <div class="input-group">\r\n                          <div class="input-group-addon"><i class="material-icons">lock_outline</i></div>\r\n                          <input class="form-control" id="password" type="password" [formControl]="loginForm.controls[\'password\']"><span class="pmd-textfield-focused"></span>\r\n                      </div>\r\n                      <div *ngIf="loginForm.controls[\'password\'].hasError(\'required\') \r\n                                  && loginForm.controls[\'password\'].touched" class="help-block">\r\n                                  {{\'Login.PasswordRequired\' | translate}}\r\n                      </div>\r\n                  </div>\r\n                  <button type="button" class="btn pmd-ripple-effect btn-primary btn-block hidden" [disabled]="loginForm.invalid" type="submit">{{\'Login.Login\' | translate}}</button>\r\n                </form>\r\n                <div class="row">\r\n                    <div class="col-xs-6">\r\n                        <div class="form-group">\r\n                            <div class="pmd-switch remember-checkbox">\r\n                                <label>\r\n                                    <input id="isRememberMe" type="checkbox" [(ngModel)]="isRememberMe">\r\n                                    <span class="pmd-switch-label"></span>\r\n                                </label>\r\n                                <span class="pmd-switch__text">{{\'Login.RememberMe\' | translate}}</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-xs-6">\r\n                        <div class="text-right">\r\n                            <a [routerLink]="[\'/account/forgot-password\']">{{\'Login.ForgotPassword\' | translate}}</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class="mt10"></div>\r\n                <button type="button" class="btn pmd-ripple-effect btn-primary btn-block" [disabled]="loginForm.invalid" (click)="onSubmit(loginForm.value)">{{\'Login.Login\' | translate}}</button>\r\n                <p class="redirection-link text-center">{{\'Login.NoAccount\' | translate}} <a [routerLink]="[\'/account/signup\']" class="login-register">{{\'Login.SignUp\' | translate}}</a>. </p>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n<div class="help-feature">\r\n  <h2 class="help-feature__heading">{{\'Login.FreeSupport\' | translate}}</h2>\r\n  <div class="row">\r\n      <div class="col-md-3">\r\n          <div class="help-feature__item pmd-z-depth">\r\n              <div class="help-feature__icon">\r\n                  <i class="material-icons">library_books</i>\r\n              </div>\r\n              <div class="">\r\n                  <h3 class="help-feature__title">{{\'Login.Documentation\' | translate}}</h3>\r\n                  <p>{{\'Login.DocumentationText\' | translate}}</p>\r\n                  <p><a href="http://help.complyto.com" target="_blank" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class="col-md-3">\r\n          <div class="help-feature__item pmd-z-depth">\r\n              <div class="help-feature__icon">\r\n                  <i class="material-icons">phone</i>\r\n              </div>\r\n              <div class="">\r\n                  <h3 class="help-feature__title">{{\'Login.CallUs\' | translate}}</h3>\r\n                  <p>{{\'Login.CallUsText\' | translate}}</p>\r\n                  <p><a (click)="startChat()" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class="col-md-3">\r\n          <div class="help-feature__item pmd-z-depth">\r\n              <div class="help-feature__icon">\r\n                  <i class="material-icons">chat</i>\r\n              </div>\r\n              <div class="">\r\n                  <h3 class="help-feature__title">{{\'Login.TryToChat\' | translate}}</h3>\r\n                  <p>{{\'Login.TryToChatText\' | translate}}</p>\r\n                  <p><a (click)="startChat()" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n      <div class="col-md-3">\r\n          <div class="help-feature__item pmd-z-depth">\r\n              <div class="help-feature__icon">\r\n                  <i class="material-icons">ondemand_video</i>\r\n              </div>\r\n              <div class="">\r\n                  <h3 class="help-feature__title">{{\'Login.Videos\' | translate}}</h3>\r\n                  <p>{{\'Login.VideosText\' | translate}}</p>\r\n                  <p><a href="http://help.complyto.com/videos" target="_blank" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n              </div>\r\n          </div>\r\n      </div>\r\n  </div>\r\n</div>\r\n</div>\r\n<div class="mobile-model" *ngIf="isOpenMobileAlert">\r\n    <div class="mobile-model__inner">\r\n        <div class="mobile-model__close-button" (click)="closeMoblieAlert()">\r\n            <i class="material-icons">close</i>\r\n        </div>\r\n        <div class="text-center">\r\n            <div class="mobile-model__icon">\r\n                <i class="material-icons">phonelink_erase</i>\r\n            </div>\r\n            <div class="mobile-model__title">\r\n                {{\'MobileAlert.Title\' | translate}}\r\n            </div>\r\n            <p>{{\'MobileAlert.Text1\' | translate}}</p>\r\n            <p>{{\'MobileAlert.Text2\' | translate}}</p>\r\n        </div>\r\n    </div>\r\n</div>'},NbhF:function(r,e){r.exports='<modal-dialog [(modalDialog)]="successModal">\r\n    <p>{{\'SignUp.SuccessSignUp\' | translate}}</p>\r\n    <div class="pmd-modal-bordered text-right">\r\n        <button class="btn pmd-ripple-effect btn-primary" type="button" (click)="goLogin()">OK</button>\r\n    </div>\r\n</modal-dialog>\r\n<div class="container">\r\n    <div class="row">\r\n        <div class="col-md-6">\r\n            <div class="panel panel-default pmd-z-depth">\r\n                <div class="panel-body">\r\n                    <h2 class="title text-center">{{\'SignUp.SignUpFormTitle\' | translate}}</h2>\r\n                    <div class="text-center">{{\'SignUp.SignUpFormSubTitle\' | translate}}</div>\r\n\r\n                    <div class="from-error bg-danger" *ngIf="errorMessenger">\r\n                        <div *ngFor="let error of errorMessenger">{{error}}</div>\r\n                    </div>\r\n\r\n                    <form class="signup-form" [formGroup]="signupForm" (ngSubmit)="onSubmit(signupForm.value)">\r\n\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'companyName\'].valid && signupForm.controls[\'companyName\'].touched}">\r\n                            <label for="companyName" class="control-label pmd-input-group-label">{{\'SignUp.CompanyName\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">account_balance</i>\r\n                                </div>\r\n                                <input maxlength="256" class="form-control" id="companyName" type="text" [formControl]="signupForm.controls[\'companyName\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'companyName\'].hasError(\'required\') && signupForm.controls[\'companyName\'].touched" class="help-block">\r\n                                {{\'SignUp.CompanyNameRequired\' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'firstName\'].valid && signupForm.controls[\'firstName\'].touched}">\r\n                            <label for="firstName" class="control-label pmd-input-group-label"> {{\'SignUp.firstName\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">perm_identity</i>\r\n                                </div>\r\n                                <input maxlength="128" class="form-control" id="firstName" type="text" [formControl]="signupForm.controls[\'firstName\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'firstName\'].hasError(\'required\') && signupForm.controls[\'firstName\'].touched" class="help-block">\r\n                                {{\'SignUp.firstNameRequired\' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'lastName\'].valid && signupForm.controls[\'lastName\'].touched}">\r\n                            <label for="lastName" class="control-label pmd-input-group-label"> {{\'SignUp.lastName\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">perm_identity</i>\r\n                                </div>\r\n                                <input maxlength="128" class="form-control" id="lastName" type="text" [formControl]="signupForm.controls[\'lastName\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'lastName\'].hasError(\'required\') && signupForm.controls[\'lastName\'].touched" class="help-block">\r\n                                {{\'SignUp.lastNameRequired\' | translate}}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'phoneNumber\'].valid && signupForm.controls[\'phoneNumber\'].touched}">\r\n                            <label for="phoneNumber" class="control-label pmd-input-group-label"> {{\'SignUp.Phone\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">phone</i>\r\n                                </div>\r\n                                <input maxlength="20" class="form-control" id="phoneNumber" type="text" [formControl]="signupForm.controls[\'phoneNumber\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'phoneNumber\'].hasError(\'required\') && signupForm.controls[\'phoneNumber\'].touched" class="help-block">\r\n                                {{\'SignUp.PhoneRequired\' | translate}}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'email\'].valid && signupForm.controls[\'email\'].touched}">\r\n                            <label for="email" class="control-label pmd-input-group-label"> {{\'SignUp.Email\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">mail_outline</i>\r\n                                </div>\r\n                                <input maxlength="256" class="form-control" id="email" type="email" [formControl]="signupForm.controls[\'email\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'email\'].hasError(\'required\') && signupForm.controls[\'email\'].touched" class="help-block">\r\n                                {{\'SignUp.EmailRequired\' | translate}}\r\n                            </div>\r\n                            <div *ngIf="!signupForm.controls[\'email\'].hasError(\'required\') && signupForm.controls[\'email\'].hasError(\'pattern\') && signupForm.controls[\'email\'].touched"\r\n                                class="help-block">\r\n                                {{\'SignUp.EmailInvalid\' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <div class="row">\r\n                            <div class="col-md-3 col-xs-4">\r\n                                <div class="form-group pmd-textfield vat-selectbox">\r\n                                    <div class="input-group">\r\n                                        <div class="input-group-addon">\r\n                                            <i class="material-icons">local_atm</i>\r\n                                        </div>\r\n                                        <ng-select id="vat" [options]="listVats" noFilter="true" formControlName="countryVatCode"></ng-select>                                \r\n                                        <span class="pmd-textfield-focused"></span>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div class="col-md-9 col-xs-8">\r\n                                <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'vatRegistrationNo\'].valid && signupForm.controls[\'vatRegistrationNo\'].touched}">\r\n                                    <label for="email" class="control-label"> {{\'SignUp.VatRegistrationNo\' | translate}}</label>\r\n                                    <input maxlength="50" class="form-control" id="vat-number" type="text" [formControl]="signupForm.controls[\'vatRegistrationNo\']">\r\n                                    <span class="pmd-textfield-focused"></span>\r\n                                    <div *ngIf="signupForm.controls[\'vatRegistrationNo\'].hasError(\'required\') && signupForm.controls[\'vatRegistrationNo\'].touched" class="help-block">\r\n                                        {{\'SignUp.VatNumberRequired\' | translate}}\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'password\'].valid && signupForm.controls[\'password\'].touched}">\r\n                            <label for="password" class="control-label pmd-input-group-label"> {{\'SignUp.Password\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">lock_outline</i>\r\n                                </div>\r\n                                <input maxlength="128" class="form-control" id="password" type="password" [formControl]="signupForm.controls[\'password\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'password\'].hasError(\'required\') \r\n                                        && signupForm.controls[\'password\'].touched" class="help-block">\r\n                                {{\'SignUp.PasswordRequired\' | translate}}\r\n                            </div>\r\n                            <div *ngIf="!signupForm.controls[\'password\'].hasError(\'required\') \r\n                                        && signupForm.controls[\'password\'].hasError(\'pattern\') \r\n                                        && signupForm.controls[\'password\'].touched" class="help-block">\r\n                                {{\'SignUp.PasswordInvalid\' | translate}}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label" [ngClass]="{\'has-error\':!signupForm.controls[\'confirmPassword\'].valid && signupForm.controls[\'confirmPassword\'].touched}">\r\n                            <label for="confirmPassword" class="control-label pmd-input-group-label"> {{\'SignUp.ConfirmPassword\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon">\r\n                                    <i class="material-icons">lock_outline</i>\r\n                                </div>\r\n                                <input maxlength="128" class="form-control" id="confirmPassword" type="password" [formControl]="signupForm.controls[\'confirmPassword\']">\r\n                                <span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'confirmPassword\'].hasError(\'required\') \r\n                                        && signupForm.controls[\'confirmPassword\'].touched" class="help-block">\r\n                                {{\'SignUp.ConfirmPasswordRequired\' | translate}}\r\n                            </div>\r\n                            <div *ngIf="signupForm.controls[\'confirmPassword\'].errors?.MatchPassword \r\n                                        && signupForm.controls[\'confirmPassword\'].touched" class="help-block">\r\n                                {{\'SignUp.ConfirmPasswordInvalid\' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <div class="form-group">\r\n                            <label class="pmd-checkbox checkbox-pmd-ripple-effect">\r\n                                <input type="checkbox" value="" checked="" [formControl]="signupForm.controls[\'acceptedPolicy\']">\r\n                                <span class="pmd-checkbox-label">&nbsp;</span>\r\n                                <span> {{\'SignUp.Accepted\' | translate}}\r\n                                    <a *ngIf="isDK" href="https://www.complyto.com/da/terms" target="_blank" title="{{\'SignUp.PrivacyPolicy\' | translate}}"> {{\'SignUp.PrivacyPolicy\' | translate}}.</a>\r\n                                    <a *ngIf="!isDK" href="https://www.complyto.com/en/terms" target="_blank" title="{{\'SignUp.PrivacyPolicy\' | translate}}"> {{\'SignUp.PrivacyPolicy\' | translate}}.</a>\r\n                                </span>\r\n                            </label>\r\n                        </div>\r\n                        <button type="submit" class="btn pmd-ripple-effect btn-primary btn-block" [disabled]="signupForm.invalid"> {{\'SignUp.SignUp\' | translate}}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-6">\r\n            <div class="help-feature__item pmd-z-depth">\r\n                <div class="row">\r\n                    <div class="col-md-3">\r\n                        <div class="help-feature__icon">\r\n                            <i class="material-icons">playlist_add_check</i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <h3 class="help-feature__title"> {{\'SignUp.ExpriesAutomatically\' | translate}}</h3>\r\n                        <p>{{\'SignUp.ExpriesAutomaticallyText\' | translate}}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="help-feature__item pmd-z-depth">\r\n                <div class="row">\r\n                    <div class="col-md-3">\r\n                        <div class="help-feature__icon">\r\n                            <i class="material-icons">phone</i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <h3 class="help-feature__title">{{\'SignUp.FreeSupport\' | translate}}</h3>\r\n                        <p>{{\'SignUp.FreeSupportText\' | translate}}</p>\r\n                        <p><a (click)="startChat()" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="help-feature__item pmd-z-depth">\r\n                <div class="row">\r\n                    <div class="col-md-3">\r\n                        <div class="help-feature__icon">\r\n                            <i class="material-icons">library_books</i>\r\n                        </div>\r\n                    </div>\r\n                    <div class="col-md-9">\r\n                        <h3 class="help-feature__title">{{\'SignUp.VideosDemos\' | translate}}</h3>\r\n                        <p>{{\'SignUp.VideosDemosText\' | translate}}</p>\r\n                        <p><a href="http://help.complyto.com/videos" target="_blank" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},cyI1:function(r,e){r.exports='<div class="container">\r\n    <div class="text-center">\r\n        <h3>{{status}}</h3>\r\n        <span *ngIf="isSuccess"><a class="btn btn-primary" routerLink="/account/login">Click here to login.</a></span>\r\n    </div>\r\n</div>'},"jXo+":function(r,e){r.exports='<div class="container">\r\n    <div class="row">\r\n        <div class="col-md-5 col-md-offset-1">\r\n            <div class="account-help-block">\r\n                <div class="text-center">\r\n                    <img src="assets/images/icon-bubble.png" alt="" />\r\n                </div>\r\n                <h1 class="account-help-block__title">{{\'Login.Motto\' | translate}}</h1>\r\n                <p class="account-help-block__desc">{{\'Login.Blurb\' | translate}}</p>\r\n                <a href="#" title="" class="account-help-block__link">{{\'Login.StartChat\' | translate}}</a>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-5 col-md-offset-1">\r\n            <div class="panel panel-default">\r\n                <div class="panel-body">\r\n                    <h2 class="title text-center">{{\'ResetPass.ResetTitle\' | translate}}</h2>\r\n                    <div class="from-error bg-danger" *ngIf="errorMessenger">\r\n                        <span *ngFor="let errorMessage of errorMessenger">{{errorMessage}}</span>\r\n                    </div>\r\n                    <form [formGroup]="resetForm" (ngSubmit)="onSubmit(resetForm.value)">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label"\r\n                            [ngClass]="{\'has-error\':!resetForm.controls[\'email\'].valid && resetForm.controls[\'email\'].touched}">\r\n                            <label for="loginEmail" class="control-label pmd-input-group-label">{{\'ResetPass.Email\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon"><i class="material-icons">mail_outline</i></div>\r\n                                <input class="form-control" id="loginEmail" type="email" name="email" [formControl]="resetForm.controls[\'email\']"><span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="resetForm.controls[\'email\'].hasError(\'required\') && resetForm.controls[\'email\'].touched" class="help-block">\r\n                                    {{\'ResetPass.EmailRequired\' | translate}}\r\n                            </div>\r\n                            <div *ngIf="!resetForm.controls[\'email\'].hasError(\'required\') && resetForm.controls[\'email\'].hasError(\'pattern\') && resetForm.controls[\'email\'].touched" class="help-block">\r\n                                    {{\'ResetPass.EmailInvalid\' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        <button type="submit" class="btn pmd-ripple-effect btn-primary btn-block" [disabled]="resetForm.invalid">{{\'ResetPass.ResetBtn\' | translate}}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="help-feature">\r\n        <h2 class="help-feature__heading">{{\'Login.FreeSupport\' | translate}}</h2>\r\n        <div class="row">\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">library_books</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.Documentation\' | translate}}</h3>\r\n                        <p>{{\'Login.DocumentationText\' | translate}}</p>\r\n                        <p><a href="http://help.complyto.com" target="_blank" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">phone</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.CallUs\' | translate}}</h3>\r\n                        <p>{{\'Login.CallUsText\' | translate}}</p>\r\n                        <p><a (click)="startChat()" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">chat</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.TryToChat\' | translate}}</h3>\r\n                        <p>{{\'Login.TryToChatText\' | translate}}</p>\r\n                        <p><a (click)="startChat()" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">ondemand_video</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.Videos\' | translate}}</h3>\r\n                        <p>{{\'Login.VideosText\' | translate}}</p>\r\n                        <p><a href="http://help.complyto.com/videos" target="_blank" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'},pHAU:function(r,e){r.exports=".signup-form {\r\n    margin-top: 20px;\r\n}\r\n.remember-checkbox {\r\n    padding-left: 10px;\r\n}\r\n.remember-checkbox .pmd-checkbox-label {\r\n    display: inline-block;\r\n}\r\n.from-error {\r\n    padding: 15px;\r\n}\r\n.account-help-block {\r\n    margin-top: 20px;\r\n    color: #111;\r\n    font-size: 16px;\r\n}\r\n.account-help-block__title {\r\n    color: #111;\r\n}\r\n.account-help-block__link {\r\n    color: #8bb63b;\r\n}\r\n.redirection-link {\r\n    margin-top: 20px;\r\n}\r\n.help-feature__heading {\r\n    margin-top: 20px;\r\n    margin-bottom: 20px;\r\n    color: #111;\r\n    font-size: 24px;\r\n}\r\n.help-feature__item {\r\n    padding: 15px;\r\n    margin-bottom: 20px;\r\n    background-color: #fff;\r\n    border: 1px solid transparent;\r\n    border-radius: 4px;\r\n}\r\n.help-feature__title {\r\n    color: #82898d;\r\n    font-size: 24px;\r\n}\r\n.help-feature__icon {\r\n    padding-top: 20px;\r\n    color: #bac3ca;\r\n    text-align: center;\r\n}\r\n.help-feature__icon .material-icons {\r\n        font-size: 96px;\r\n    }\r\n.vat-selectbox {\r\n    margin-top: 25px;\r\n}\r\n.vat-icon {\r\n    margin-top: 30px;\r\n}"},rzeJ:function(r,e){r.exports='<div class="container">\r\n    <div class="row">\r\n        <div class="col-md-5 col-md-offset-1">\r\n            <div class="account-help-block">\r\n                <div class="text-center">\r\n                    <img src="assets/images/icon-bubble.png" alt="" />\r\n                </div>\r\n                <h1 class="account-help-block__title">{{\'Login.Motto\' | translate}}</h1>\r\n                <p class="account-help-block__desc">{{\'Login.Blurb\' | translate}}</p>\r\n                <a href="#" title="" class="account-help-block__link">{{\'Login.StartChat\' | translate}}</a>\r\n            </div>\r\n        </div>\r\n        <div class="col-md-5 col-md-offset-1">\r\n            <div class="panel panel-default">\r\n                <div class="panel-body">\r\n                    <h2 class="title text-center">{{\'ResetPass.ResetTitle\' | translate}}</h2>\r\n                    <div class="from-error bg-danger" *ngIf="errorMessenger">\r\n                        <span *ngFor="let errorMessage of errorMessenger">{{errorMessage}}</span>\r\n                    </div>\r\n                    <form [formGroup]="changePassForm" (ngSubmit)="onSubmit(changePassForm.value)">\r\n                        <input class="form-control hidden" type="text" [formControl]="changePassForm.controls[\'email\']">\r\n                        <input class="form-control hidden" type="text" [formControl]="changePassForm.controls[\'code\']">\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label"\r\n                        [ngClass]="{\'has-error\':!changePassForm.controls[\'password\'].valid && changePassForm.controls[\'password\'].touched}">\r\n                            <label for="password" class="control-label pmd-input-group-label"> {{\'SignUp.Password\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon"><i class="material-icons">lock_outline</i></div>\r\n                                <input class="form-control" id="password" type="password" [formControl]="changePassForm.controls[\'password\']"><span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="changePassForm.controls[\'password\'].hasError(\'required\') \r\n                                        && changePassForm.controls[\'password\'].touched" class="help-block">\r\n                                        {{\'SignUp.PasswordRequired\' | translate}}\r\n                            </div>\r\n                            <div *ngIf="!changePassForm.controls[\'password\'].hasError(\'required\') \r\n                                        && changePassForm.controls[\'password\'].hasError(\'pattern\') \r\n                                        && changePassForm.controls[\'password\'].touched" class="help-block">\r\n                                        {{\'SignUp.PasswordInvalid\' | translate}}\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div class="form-group pmd-textfield pmd-textfield-floating-label"\r\n                            [ngClass]="{\'has-error\':!changePassForm.controls[\'confirmPassword\'].valid && changePassForm.controls[\'confirmPassword\'].touched}">\r\n                            <label for="confirmPassword" class="control-label pmd-input-group-label"> {{\'SignUp.ConfirmPassword\' | translate}}</label>\r\n                            <div class="input-group">\r\n                                <div class="input-group-addon"><i class="material-icons">lock_outline</i></div>\r\n                                <input class="form-control" id="confirmPassword" type="password" [formControl]="changePassForm.controls[\'confirmPassword\']"><span class="pmd-textfield-focused"></span>\r\n                            </div>\r\n                            <div *ngIf="changePassForm.controls[\'confirmPassword\'].hasError(\'required\') \r\n                                        && changePassForm.controls[\'confirmPassword\'].touched" class="help-block">\r\n                                        {{\'SignUp.ConfirmPasswordRequired\' | translate}}\r\n                            </div>\r\n                            <div *ngIf="changePassForm.controls[\'confirmPassword\'].errors?.MatchPassword \r\n                                        && changePassForm.controls[\'confirmPassword\'].touched" class="help-block">\r\n                                        {{\'SignUp.ConfirmPasswordInvalid\' | translate}}\r\n                            </div>\r\n                        </div>\r\n                        \x3c!-- <pre>{{changePassForm.value | json}}</pre> --\x3e\r\n                        <button type="submit" class="btn pmd-ripple-effect btn-primary btn-block" [disabled]="changePassForm.invalid">{{\'ResetPass.ResetBtn\' | translate}}</button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div class="help-feature">\r\n        <h2 class="help-feature__heading">{{\'Login.FreeSupport\' | translate}}</h2>\r\n        <div class="row">\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">library_books</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.Documentation\' | translate}}</h3>\r\n                        <p>{{\'Login.DocumentationText\' | translate}}</p>\r\n                        <p><a href="#" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">phone</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.CallUs\' | translate}}</h3>\r\n                        <p>{{\'Login.CallUsText\' | translate}}</p>\r\n                        <p><a href="#" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">chat</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.TryToChat\' | translate}}</h3>\r\n                        <p>{{\'Login.TryToChatText\' | translate}}</p>\r\n                        <p><a href="#" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="col-md-3">\r\n                <div class="help-feature__item pmd-z-depth">\r\n                    <div class="help-feature__icon">\r\n                        <i class="material-icons">ondemand_video</i>\r\n                    </div>\r\n                    <div class="">\r\n                        <h3 class="help-feature__title">{{\'Login.Videos\' | translate}}</h3>\r\n                        <p>{{\'Login.VideosText\' | translate}}</p>\r\n                        <p><a href="#" role="button">{{\'Login.Read\' | translate}}</a></p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>'}});